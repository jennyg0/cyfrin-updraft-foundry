{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"MerkleAirdrop.t.sol:MerkleAirdropTest\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[14]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_11\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_202\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r5\n\tjump.gt\t@.BB0_18\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.le\t@.BB0_25\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.le\t@.BB0_68\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.gt\t@.BB0_94\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.eq\t@.BB0_104\n\tsub.s!\t@CPI0_32[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t36, r0, r1\n\tjump\t@.BB0_10\n.BB0_11:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t324, r0, r1\n\tsstore\tr0, r1\n\tadd\t300, r0, r1\n\tadd\t1, r0, r2\n\tsstore\tr2, r1\n\tadd\t260, r0, r2\n\tadd\t2, r0, r1\n\tsstore\tr1, r2\n\tadd\t15, r0, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tor\t1, r3, r3\n\tsstore\tr2, r3\n\tadd\t34, r0, r2\n\tsload\tr2, r3\n\tand\tr3, r4, r3\n\tor\t1, r3, r3\n\tsstore\tr2, r3\n\tadd\t@CPI0_1[0], r0, r2\n\tadd\t36, r0, r3\n\tsstore\tr3, r2\n\tadd\t@CPI0_2[0], r0, r2\n\tadd\t37, r0, r3\n\tsstore\tr3, r2\n\tadd\t@CPI0_3[0], r0, r2\n\tadd\t38, r0, r3\n\tsstore\tr3, r2\n\tadd\t@CPI0_4[0], r0, r2\n\tadd\t39, r0, r3\n\tsstore\tr3, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tadd\t40, r0, r4\n\tsstore\tr4, r3\n\tadd\t192, r0, r4\n\tst.1\t64, r4\n\tst.1\t128, r2\n\tst.1\t160, r3\n\tadd\t41, r0, r4\n\tsload\tr4, r2\n\tsstore\tr4, r1\n\tsub.s!\t3, r2, r1\n\tjump.lt\t@.BB0_16\n\tadd\tr2, r0, stack-[13]\n\tadd\tr4, r0, stack-[14]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r2\n\tadd\tstack-[13], r2, r1\n\tadd\t2, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[14], r0, r4\n\tjump.ge\t@.BB0_16\n.BB0_15:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_15\n.BB0_16:\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r1\n\tld.1\t128, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tld.1\t160, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.le\t@.BB0_32\n\tsub.s!\t@CPI0_10[0], r2, r1\n\tjump.le\t@.BB0_74\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.gt\t@.BB0_100\n\tsub.s!\t@CPI0_14[0], r2, r1\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t40, r0, r1\n\tjump\t@.BB0_10\n.BB0_25:\n\tsub.s!\t@CPI0_36[0], r2, r1\n\tjump.gt\t@.BB0_79\n\tsub.s!\t@CPI0_40[0], r2, r1\n\tjump.eq\t@.BB0_109\n\tsub.s!\t@CPI0_41[0], r2, r1\n\tjump.eq\t@.BB0_163\n\tsub.s!\t@CPI0_42[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t35, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r2\n\tadd\t43, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\t@CPI0_69[0], r0, r3\n\tst.1\t128, r3\n\tand\t@CPI0_43[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_43[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_195\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_201\n.BB0_32:\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_89\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.eq\t@.BB0_112\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.eq\t@.BB0_172\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t31, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_51[0], r1, r2\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_175\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_243\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.gt\t@.BB0_175\n\tadd\t@CPI0_56[0], r0, r4\n\tadd\t160, r0, r5\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, r6\n.BB0_42:\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr4, r2\n\tand\t@CPI0_43[0], r2, r2\n\tadd\tr1, r0, stack-[14]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr4, r0, stack-[13]\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr3, r0, stack-[8]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r2\n\tadd\tstack-[8], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_61\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_45:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_57[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_45\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_48\n.BB0_47:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_48:\n\tadd\tstack-[13], r0, r4\n\tadd\tstack-[12], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_50\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_63\n.BB0_51:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_52\n.BB0_64:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_65\n.BB0_53:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_54\n.BB0_66:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_67\n.BB0_55:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_57\n.BB0_56:\n\tand\t@CPI0_57[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_57:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tadd\tstack-[14], r0, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr5, r3, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[6], r6, r2\n\tjump.ge\t@.BB0_243\n\tadd\t2, r4, r4\n\tsub.s!\t@CPI0_58[0], r1, r2\n\tjump.le\t@.BB0_42\n\tjump\t@.BB0_175\n.BB0_50:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_51\n.BB0_63:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_64\n.BB0_52:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_53\n.BB0_65:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_66\n.BB0_54:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_55\n.BB0_67:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_56\n\tjump\t@.BB0_57\n.BB0_61:\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_47\n\tjump\t@.BB0_48\n.BB0_68:\n\tsub.s!\t@CPI0_33[0], r2, r1\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_34[0], r2, r1\n\tjump.eq\t@.BB0_176\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t26, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_203\n\tjump\t@.BB0_183\n.BB0_74:\n\tsub.s!\t@CPI0_16[0], r2, r1\n\tjump.eq\t@.BB0_130\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.eq\t@.BB0_179\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tnear_call\tr0, @fun_isOnZkSyncPrecompiles, @DEFAULT_UNWIND\n\tjump\t@.BB0_111\n.BB0_79:\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.eq\t@.BB0_132\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.eq\t@.BB0_181\n\tsub.s!\t@CPI0_39[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t33, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\t@CPI0_51[0], r2, r2\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[1], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_175\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\t128, r4\n\tst.1\t0, r1\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_262\n.BB0_86:\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r3\n\tadd\tr3, r2, r6\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_378\n\tadd\tr6, r0, r11\n.BB0_88:\n\tadd\tstack-[14], r0, r4\n\tsub\tr11, r4, r1\n\tjump\t@.BB0_217\n.BB0_89:\n\tsub.s!\t@CPI0_20[0], r2, r1\n\tjump.eq\t@.BB0_136\n\tsub.s!\t@CPI0_21[0], r2, r1\n\tjump.eq\t@.BB0_184\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t38, r0, r1\n\tjump\t@.BB0_10\n.BB0_94:\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_155\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_202\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_202\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t41, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_202\n\tst.1\t0, r2\n\tadd\t@CPI0_61[0], r1, r1\n\tjump\t@.BB0_10\n.BB0_100:\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.eq\t@.BB0_161\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_202\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t35, r0, r1\n\tjump\t@.BB0_134\n.BB0_104:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tnear_call\tr0, @fun_isOnZkSyncChainId, @DEFAULT_UNWIND\n\tjump\t@.BB0_111\n.BB0_106:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t24, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_206\n\tjump\t@.BB0_183\n.BB0_109:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tnear_call\tr0, @fun_isZkSyncChain, @DEFAULT_UNWIND\n.BB0_111:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_112:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t29, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_51[0], r5, r2\n\tjump.gt\t@.BB0_175\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_175\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_154\n\tadd\t128, r0, r6\n\tadd\t@CPI0_60[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[8]\n.BB0_117:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_362\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_123\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr9, r0, stack-[11]\n\tadd\tr8, r0, stack-[12]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tadd\tstack-[10], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_124\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n\tadd\tstack-[9], r0, r11\n.BB0_122:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_122\n\tjump\t@.BB0_125\n.BB0_123:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_125\n.BB0_124:\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n.BB0_125:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_117\n\tjump\t@.BB0_153\n.BB0_128:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t34, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tjump\t@.BB0_135\n.BB0_130:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t37, r0, r1\n\tjump\t@.BB0_10\n.BB0_132:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t42, r0, r1\n.BB0_134:\n\tsload\tr1, r1\n.BB0_135:\n\tand\t@CPI0_43[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_136:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t28, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_51[0], r5, r2\n\tjump.gt\t@.BB0_175\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_175\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_154\n\tadd\t128, r0, r6\n\tadd\t@CPI0_54[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[8]\n.BB0_141:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_362\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_147\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr9, r0, stack-[11]\n\tadd\tr8, r0, stack-[12]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr7, r0, stack-[13]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tadd\tstack-[10], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_148\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n\tadd\tstack-[9], r0, r11\n.BB0_146:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_146\n\tjump\t@.BB0_149\n.BB0_147:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_149\n.BB0_148:\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n.BB0_149:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_141\n.BB0_153:\n\tld.1\t64, r1\n.BB0_154:\n\tadd\tr1, r0, stack-[14]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_244\n.BB0_155:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_51[0], r2, r2\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[5], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_175\n\tadd\t128, r2, r15\n\tst.1\t64, r15\n\tadd\tstack-[5], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r1\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_283\n.BB0_159:\n\tadd\t32, r0, r1\n\tst.1.inc\tr15, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t64, r15, r3\n\tshl.s\t5, r1, r2\n\tadd\tr2, r3, r2\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_370\n.BB0_160:\n\tsub\tr2, r15, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r15, r3\n\tadd.ge\tr2, r0, r15\n\tshl.s\t64, r15, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_161:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t34, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_163:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tsload\tr0, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r2\n\tjump.eq\t@.BB0_168\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_168\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_386\n.BB0_168:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_83[0], r1, r2\n\tjump.gt\t@.BB0_175\n\tadd\t36, r1, r2\n\tadd\t@CPI0_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_85[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_354\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_395\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_355\n.BB0_172:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t32, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_51[0], r1, r2\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.le\t@.BB0_242\n.BB0_175:\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_67[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_176:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t27, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_209\n\tjump\t@.BB0_183\n.BB0_179:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t39, r0, r1\n.BB0_10:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_181:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t25, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_212\n.BB0_183:\n\tadd\t32, r0, r2\n\tjump\t@.BB0_215\n.BB0_184:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_202\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_194\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tst.1\t132, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_50[0], r1, r1\n\tadd\t@CPI0_48[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_189\n\tadd\tr0, r0, r7\n.BB0_188:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_188\n.BB0_189:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_191\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_191:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_245\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_202\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_194:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_46[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_195:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_70[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_198\n\tadd\tr0, r0, r7\n.BB0_197:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_197\n.BB0_198:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_200\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_200:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_250\n.BB0_201:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB0_218\n.BB0_202:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_203:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_63[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_204:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_43[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_204\n\tjump\t@.BB0_214\n.BB0_206:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_45[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_207:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_43[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_207\n\tjump\t@.BB0_214\n.BB0_209:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_64[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_210:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_43[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_210\n\tjump\t@.BB0_214\n.BB0_212:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_68[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_213:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_43[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_213\n.BB0_214:\n\tsub.s\t96, r5, r2\n.BB0_215:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @abi_encode_array_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n.BB0_216:\n\tsub\tr1, r4, r1\n.BB0_217:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_218:\n\tadd\t34, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r2\n\tadd\t37, r0, r3\n\tadd\tr3, r0, stack-[10]\n\tsload\tr3, r3\n\tld.1\t128, r4\n\tadd\tr4, r0, stack-[8]\n\tadd\t@CPI0_71[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tst.1\tr5, r4\n\tor\t132, r1, r4\n\tadd\tstack-[13], r0, r6\n\tst.1\tr4, r6\n\tadd\t164, r1, r4\n\tst.1\tr4, r3\n\tcontext.gas_left\tr3\n\tshr.s\t8, r2, r2\n\tand\t@CPI0_43[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_255\n\tadd\tr5, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t64, r1\n.BB0_220:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t44, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI0_73[0], r0, r3\n\tadd\tstack-[13], r0, r4\n\tst.1.inc\tr4, r3, r3\n\tadd\tr3, r0, stack-[14]\n\tor\t4, r4, r3\n\tst.1\tr3, r2\n\tadd\t36, r4, r2\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tshl.s\t64, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t@CPI0_48[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_223\n\tadd\tr0, r0, r7\n.BB0_222:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_222\n.BB0_223:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_225\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_225:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_349\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r1\n\tjump.lt\t@.BB0_202\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_202\n\tadd\tstack-[13], r0, r1\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t42, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_43[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_202\n\tld.1\t64, r4\n\tadd\t@CPI0_76[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_48[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_442\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_74[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_43[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_43[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_202\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\t192, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_77[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\tr1, r3\n\tadd\t196, r4, r1\n\tadd\t41, r0, r3\n\tsload\tr3, r2\n\tst.1\tr1, r2\n\tst.1\t0, r3\n\tadd\tr4, r0, stack-[14]\n\tadd\t228, r4, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_237\n\tadd\t@CPI0_61[0], r0, r3\n\tadd\tr0, r0, r4\n.BB0_236:\n\tsload\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_236\n.BB0_237:\n\tadd\tstack-[14], r0, r3\n\tadd\t164, r3, r2\n\tadd\tstack-[6], r0, r4\n\tst.1\tr2, r4\n\tadd\t132, r3, r2\n\tadd\tstack-[13], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[7], r0, r2\n\tand\t255, r2, r2\n\tadd\t100, r3, r3\n\tst.1\tr3, r2\n\tcontext.gas_left\tr2\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_239\n\tadd\tstack-[14], r0, r5\n\tsub\tr1, r5, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_469\n.BB0_239:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[14], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_69[0], r0, r3\n\tst.1\tr4, r3\n\tand\t@CPI0_43[0], r1, r1\n\tadd\tstack-[5], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_43[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_474\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_480\n.BB0_242:\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_321\n.BB0_243:\n\tadd\tr1, r0, stack-[14]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_struct_FuzzSelector_dyn, @DEFAULT_UNWIND\n.BB0_244:\n\tadd\tstack-[14], r0, r4\n\tjump\t@.BB0_216\n.BB0_245:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_248\n\tadd\tr0, r0, r6\n.BB0_247:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_247\n.BB0_248:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_250:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_253\n\tadd\tr0, r0, r6\n.BB0_252:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_252\n.BB0_253:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_255:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tshl.s\t64, r5, r3\n\tor\tr1, r3, r1\n\tor\t@CPI0_72[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_258\n\tadd\tr0, r0, r7\n.BB0_257:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_257\n.BB0_258:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_260\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_260:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_363\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_202\n\tjump\t@.BB0_220\n.BB0_262:\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_55[0], r2, r1\n\tjump.gt\t@.BB0_175\n\tadd\t@CPI0_65[0], r0, stack-[5]\n\tadd\t160, r0, stack-[4]\n\tadd\tr0, r0, stack-[3]\n.BB0_264:\n\tadd\tstack-[14], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[5], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_43[0], r1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tor\t1, r3, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_51[0], r5, r2\n\tjump.gt\t@.BB0_175\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_52[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_51[0], r2, r4\n\tjump.gt\t@.BB0_175\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[7]\n\tadd\tstack-[6], r0, r2\n\tst.1\tr2, r5\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_281\n\tld\tr1, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[6], r0, r8\n.BB0_270:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_362\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_276\n\tadd\tr3, r0, stack-[8]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr9, r0, stack-[10]\n\tadd\tr8, r0, stack-[11]\n\tadd\tr7, r0, stack-[12]\n\tadd\tr6, r0, stack-[13]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tadd\tstack-[9], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r8\n\tjump.eq\t@.BB0_277\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[10], r0, r9\n\tadd\tstack-[8], r0, r11\n.BB0_275:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_275\n\tjump\t@.BB0_278\n.BB0_276:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_278\n.BB0_277:\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[10], r0, r9\n.BB0_278:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_270\n.BB0_281:\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[4]\n\tld.1\t64, r3\n\tadd\tstack-[3], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\tstack-[1], r2, r1\n\tjump.ge\t@.BB0_456\n\tadd\tstack-[5], r0, r1\n\tadd\t2, r1, stack-[5]\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_58[0], r3, r1\n\tjump.le\t@.BB0_264\n\tjump\t@.BB0_175\n.BB0_283:\n\tsub.s!\t@CPI0_55[0], r2, r1\n\tjump.gt\t@.BB0_175\n\tadd\t@CPI0_62[0], r0, r5\n\tadd\t160, r0, stack-[12]\n\tadd\tr0, r0, stack-[11]\n.BB0_285:\n\tadd\t64, r15, r6\n\tst.1\t64, r6\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_362\n\tst.1\tr6, r4\n\tadd\t96, r15, r3\n\tsub!\tr2, r0, r2\n\tadd\tr15, r0, stack-[14]\n\tadd\tr5, r0, stack-[13]\n\tjump.eq\t@.BB0_291\n\tadd\tr3, r0, stack-[8]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr6, r0, stack-[10]\n\tst.1\t0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tadd\tstack-[9], r0, r7\n\tsub!\tr7, r0, r2\n\tjump.eq\t@.BB0_292\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r15\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[8], r0, r8\n.BB0_290:\n\tadd\tr1, r8, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r7, r3\n\tjump.lt\t@.BB0_290\n\tjump\t@.BB0_293\n.BB0_291:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_293\n.BB0_292:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r15\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[10], r0, r6\n.BB0_293:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, stack-[10]\n\tand\tstack-[10], r1, r2\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r1\n\tst.1.inc\tr15, r6, r1\n\tadd\tr1, r0, stack-[6]\n\tor\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r2\n\tadd\tstack-[7], r0, r8\n\tsub.s!\t8, r8, r1\n\tjump.lt\t@.BB0_314\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[8], r0, r7\n.BB0_298:\n\tadd\t224, r7, r3\n\tsload\tr2, r4\n\tand\t@CPI0_57[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t192, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t160, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t128, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t96, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t64, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t32, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr7, r3\n\tadd\t1, r2, r2\n\tadd\t256, r7, r7\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r8, r3\n\tjump.lt\t@.BB0_298\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_301\n.BB0_300:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr7, r3, r7\n\tor\t1, r1, r1\n.BB0_301:\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[9], r0, r4\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_303\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_316\n.BB0_304:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_305\n.BB0_317:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_318\n.BB0_306:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_307\n.BB0_319:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_320\n.BB0_308:\n\tsub!\tr1, r8, r1\n\tjump.ge\t@.BB0_310\n.BB0_309:\n\tand\t@CPI0_57[0], r2, r1\n\tst.1.inc\tr7, r1, r7\n.BB0_310:\n\tsub\tr7, r4, r1\n\tadd\t31, r1, r1\n\tand\tstack-[10], r1, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r4\n\tadd\tstack-[12], r0, r1\n\tst.1.inc\tr1, r6, r1\n\tadd\tr1, r0, stack-[12]\n\tld.1\t64, r15\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.ge\t@.BB0_441\n\tadd\t2, r5, r5\n\tsub.s!\t@CPI0_58[0], r15, r1\n\tjump.le\t@.BB0_285\n\tjump\t@.BB0_175\n.BB0_303:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_304\n.BB0_316:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_317\n.BB0_305:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_306\n.BB0_318:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_319\n.BB0_307:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_308\n.BB0_320:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r1\n\tjump.lt\t@.BB0_309\n\tjump\t@.BB0_310\n.BB0_314:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[8], r0, r7\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_300\n\tjump\t@.BB0_301\n.BB0_321:\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.gt\t@.BB0_175\n\tadd\t@CPI0_59[0], r0, r4\n\tadd\t160, r0, r5\n\tadd\t32784, r0, stack-[5]\n\tadd\tr0, r0, r6\n.BB0_323:\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr4, r2\n\tand\t@CPI0_43[0], r2, r2\n\tadd\tr1, r0, stack-[14]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr4, r0, stack-[13]\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr3, r0, stack-[8]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r2\n\tadd\tstack-[8], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_342\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_326:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_57[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_57[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_326\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_329\n.BB0_328:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_329:\n\tadd\tstack-[13], r0, r4\n\tadd\tstack-[12], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_331\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_344\n.BB0_332:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_333\n.BB0_345:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_346\n.BB0_334:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_335\n.BB0_347:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_348\n.BB0_336:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_338\n.BB0_337:\n\tand\t@CPI0_57[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_338:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tadd\tstack-[14], r0, r3\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr5, r3, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[6], r6, r2\n\tjump.ge\t@.BB0_435\n\tadd\t2, r4, r4\n\tsub.s!\t@CPI0_58[0], r1, r2\n\tjump.le\t@.BB0_323\n\tjump\t@.BB0_175\n.BB0_331:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_332\n.BB0_344:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_345\n.BB0_333:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_334\n.BB0_346:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_347\n.BB0_335:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_336\n.BB0_348:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_57[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_337\n\tjump\t@.BB0_338\n.BB0_342:\n\tadd\tr0, r0, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_328\n\tjump\t@.BB0_329\n.BB0_349:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_352\n\tadd\tr0, r0, r6\n.BB0_351:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_351\n.BB0_352:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_354:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_355:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_358\n\tadd\tr0, r0, r6\n.BB0_357:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_357\n.BB0_358:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_361\n.BB0_360:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_361:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_362:\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_67[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_363:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_366\n\tadd\tr0, r0, r6\n.BB0_365:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_365\n.BB0_366:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n.BB0_368:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_369:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_370:\n\tadd\t128, r0, r4\n\tadd\t64, r0, r5\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_372\n.BB0_371:\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.ge\t@.BB0_160\n.BB0_372:\n\tsub\tr2, r15, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t32, r4, r4\n\tld.1\tr4, r7\n\tld.1.inc\tr7, r9, r8\n\tst.1.inc\tr2, r5, r7\n\tadd\t64, r2, r12\n\tld.1.inc\tr9, r10, r11\n\tst.1\tr12, r10\n\tadd\t96, r2, r9\n\tsub!\tr10, r0, r12\n\tjump.eq\t@.BB0_375\n\tadd\tr0, r0, r12\n.BB0_374:\n\tadd\tr12, r9, r13\n\tadd\tr11, r12, r14\n\tld.1\tr14, r14\n\tst.1\tr13, r14\n\tadd\t32, r12, r12\n\tsub!\tr12, r10, r13\n\tjump.lt\t@.BB0_374\n.BB0_375:\n\tadd\tr10, r9, r11\n\tst.1\tr11, r0\n\tadd\t31, r10, r10\n\tsub.s\t32, r0, r11\n\tand\tr10, r11, r10\n\tadd\tr10, r9, r9\n\tld.1\tr8, r8\n\tsub\tr9, r2, r2\n\tst.1\tr7, r2\n\tld.1\tr8, r7\n\tst.1.inc\tr9, r7, r2\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_371\n\tadd\tr0, r0, r9\n.BB0_377:\n\tadd\t32, r8, r8\n\tld.1\tr8, r10\n\tand\t@CPI0_57[0], r10, r10\n\tst.1.inc\tr2, r10, r2\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_377\n\tjump\t@.BB0_371\n.BB0_378:\n\tadd\t128, r0, r3\n\tadd\t64, r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_380\n.BB0_379:\n\tadd\t1, r5, r5\n\tsub.s!\tstack-[13], r5, r1\n\tadd\tr11, r0, r6\n\tjump.ge\t@.BB0_88\n.BB0_380:\n\tsub.s\tstack-[14], r6, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tadd\t32, r3, r3\n\tld.1\tr3, r7\n\tld.1.inc\tr7, r7, r8\n\tand\t@CPI0_43[0], r7, r7\n\tst.1.inc\tr6, r7, r9\n\tld.1\tr8, r7\n\tst.1\tr9, r4\n\tadd\t64, r6, r9\n\tld.1\tr7, r8\n\tst.1\tr9, r8\n\tadd\t96, r6, r9\n\tshl.s\t5, r8, r10\n\tadd\tr10, r9, r11\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB0_379\n\tadd\tr0, r0, r10\n\tjump\t@.BB0_383\n.BB0_382:\n\tadd\t31, r12, r1\n\tsub.s\t32, r0, r13\n\tand\tr1, r13, r1\n\tadd\tr12, r11, r12\n\tst.1\tr12, r0\n\tadd\tr1, r11, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r1\n\tjump.ge\t@.BB0_379\n.BB0_383:\n\tsub\tr11, r6, r12\n\tsub.s\t96, r12, r12\n\tst.1.inc\tr9, r12, r9\n\tadd\t32, r7, r7\n\tld.1\tr7, r12\n\tld.1.inc\tr12, r12, r13\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr12, r0, r14\n\tjump.eq\t@.BB0_382\n\tadd\tr0, r0, r14\n.BB0_385:\n\tadd\tr14, r11, r15\n\tadd\tr13, r14, r1\n\tld.1\tr1, r1\n\tst.1\tr15, r1\n\tadd\t32, r14, r14\n\tsub!\tr14, r12, r1\n\tjump.lt\t@.BB0_385\n\tjump\t@.BB0_382\n.BB0_386:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_81[0], r3, r1\n\tjump.ge\t@.BB0_175\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[12]\n\tadd\t1, r0, stack-[11]\n\tadd\tr0, r0, r5\n\tadd\tr3, r0, stack-[13]\n\tjump\t@.BB0_389\n.BB0_388:\n\tsub.s!\t3, r5, r1\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB0_168\n.BB0_389:\n\tshl.s\t5, r5, r1\n\tadd\tr1, r3, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_43[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_388\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[11], r0, r3\n\tadd\tr5, r0, stack-[14]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[13], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_388\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_83[0], r1, r2\n\tjump.gt\t@.BB0_175\n\tadd\t36, r1, r2\n\tadd\t@CPI0_84[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr2, r4\n\tadd\t@CPI0_85[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_447\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_452\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_448\n.BB0_395:\n\tld.1\t64, r10\n\tadd\t@CPI0_97[0], r0, r1\n\tst.1.inc\tr10, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_43[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_397\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t64, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tjump\t@.BB0_403\n.BB0_397:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\tr10, r0, stack-[13]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t64, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_400\n\tadd\tr0, r0, r7\n.BB0_399:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_399\n.BB0_400:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_402\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_402:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_436\n.BB0_403:\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tr10, r0, r5\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_51[0], r4, r2\n\tjump.gt\t@.BB0_175\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_175\n\tadd\tr4, r0, stack-[13]\n\tst.1\t64, r4\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_202\n\tld.1\tr5, r1\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.gt\t@.BB0_202\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_43[0], r2, r3\n\tjump.gt\t@.BB0_202\n\tadd\t35, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_87[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tshl.s\t8, r1, r1\n\tand\t@CPI0_90[0], r1, r1\n\tadd\t34, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_91[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n.BB0_409:\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t@CPI0_58[0], r2, r1\n\tjump.gt\t@.BB0_175\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r7\n\tadd\t@CPI0_98[0], r0, r1\n\tst.1\tr7, r1\n\tadd!\t4, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tjump.eq\t@.BB0_413\n\tadd\tr0, r0, r4\n.BB0_412:\n\tadd\tr4, r2, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_412\n.BB0_413:\n\tadd\tr7, r0, stack-[14]\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr3, r1, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, stack-[12]\n\tand\tstack-[12], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_51[0], r3, r5\n\tjump.gt\t@.BB0_175\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n\tld\tr1, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\t@CPI0_99[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_48[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_419\n\tadd\tr0, r0, r7\n.BB0_418:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_418\n.BB0_419:\n\tadd\tr10, r0, r9\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_421\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_421:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_463\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r4\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_202\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_43[0], r1, r1\n\tjump.gt\t@.BB0_202\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_202\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_100[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t4, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[13]\n\tadd\t100, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[14], r0, r6\n\tjump.eq\t@.BB0_431\n\tadd\tr0, r0, r3\n.BB0_430:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_430\n.BB0_431:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_48[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_517\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[13], r0, r4\n\tst.1\t64, r4\n\tadd\t44, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tand\t@CPI0_43[0], r1, r1\n\tadd\t43, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_87[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tsub.s!\t@CPI0_58[0], r4, r1\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[13], r0, r1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_101[0], r0, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r2\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tnear_call\tr0, @fun_makeAddrAndKey, @DEFAULT_UNWIND\n\tand\t@CPI0_43[0], r1, r1\n\tadd\t42, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_87[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_435:\n\tjump\t@.BB0_243\n.BB0_436:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_439\n\tadd\tr0, r0, r6\n.BB0_438:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_438\n.BB0_439:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_441:\n\tjump\t@.BB0_159\n.BB0_442:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_445\n\tadd\tr0, r0, r6\n.BB0_444:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_444\n.BB0_445:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_447:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_448:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_451\n\tadd\tr0, r0, r6\n.BB0_450:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_450\n.BB0_451:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_360\n\tjump\t@.BB0_361\n.BB0_452:\n\tand\t@CPI0_43[0], r1, r2\n\tadd\t35, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_87[0], r1, r1\n\tor\tr1, r2, r1\n\tadd\tr3, r0, stack-[13]\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_83[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tadd\t36, r0, r3\n\tsload\tr3, r3\n\tadd\t164, r1, r4\n\tst.1\tr4, r2\n\tadd\t132, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t@CPI0_88[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r1, r2\n\tadd\tstack-[14], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_85[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_89[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_457\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_467\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_458\n.BB0_456:\n\tjump\t@.BB0_86\n.BB0_457:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_458:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_461\n\tadd\tr0, r0, r6\n.BB0_460:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_460\n.BB0_461:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_361\n\tjump\t@.BB0_360\n.BB0_463:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_466\n\tadd\tr0, r0, r6\n.BB0_465:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_465\n.BB0_466:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_368\n\tjump\t@.BB0_369\n.BB0_467:\n\tshl.s\t8, r1, r1\n\tand\t@CPI0_90[0], r1, r1\n\tadd\t34, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_91[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tr3, r0, stack-[11]\n\tsstore\tr3, r1\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_92[0], r0, r1\n\tadd\tr3, r0, stack-[14]\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_43[0], r2, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_484\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_490\n.BB0_469:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_472\n\tadd\tr0, r0, r6\n.BB0_471:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_471\n.BB0_472:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_474:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_477\n\tadd\tr0, r0, r7\n.BB0_476:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_476\n.BB0_477:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_479\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_479:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_501\n.BB0_480:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[14], r1, r1\n\tsub.s!\t@CPI0_51[0], r1, r2\n\tjump.gt\t@.BB0_175\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_202\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[14]\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_511\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_67[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_484:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_487\n\tadd\tr0, r0, r7\n.BB0_486:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_486\n.BB0_487:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_489\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_489:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_506\n.BB0_490:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r4\n\tjump.gt\t@.BB0_175\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_175\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_202\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_43[0], r1, r1\n\tjump.gt\t@.BB0_202\n\tadd\t38, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_202\n\tld.1\t64, r2\n\tadd\t@CPI0_94[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t36, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tadd\tr2, r0, stack-[8]\n\tadd\t4, r2, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_498\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[8], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_527\n.BB0_498:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[8], r0, r5\n\tst.1\t64, r5\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[11], r0, r3\n\tsload\tr3, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tst.1\tr5, r4\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_43[0], r3, r3\n\tadd\tstack-[10], r0, r4\n\tst.1\tr4, r3\n\tadd\tstack-[7], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_43[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_532\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_538\n.BB0_501:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_504\n\tadd\tr0, r0, r6\n.BB0_503:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_503\n.BB0_504:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_506:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_509\n\tadd\tr0, r0, r6\n.BB0_508:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_508\n.BB0_509:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_511:\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_202\n\tadd\tstack-[13], r0, r2\n\tsub.s\tstack-[14], r2, r1\n\tld.1\t64, r4\n\tadd\t36, r4, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_78[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t@CPI0_48[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_522\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.gt\t@.BB0_175\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_516:\n\trevert\n.BB0_517:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_520\n\tadd\tr0, r0, r6\n.BB0_519:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_519\n.BB0_520:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_522:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_525\n\tadd\tr0, r0, r6\n.BB0_524:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_524\n.BB0_525:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_527:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_530\n\tadd\tr0, r0, r6\n.BB0_529:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_529\n.BB0_530:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.BB0_532:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[8], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_72[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_535\n\tadd\tr0, r0, r7\n.BB0_534:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_534\n.BB0_535:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_537\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[8], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_537:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_541\n.BB0_538:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[8], r1, r2\n\tsub.s!\t@CPI0_51[0], r2, r1\n\tjump.gt\t@.BB0_175\n\tadd\tr2, r0, stack-[13]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_202\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_202\n\tjump\t@.BB0_409\n.BB0_541:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_544\n\tadd\tr0, r0, r6\n.BB0_543:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_543\n.BB0_544:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_369\n\tjump\t@.BB0_368\n.func_end0:\n\nabi_encode_array_address_dyn:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tand\t@CPI1_0[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tret\n.func_end1:\n\nabi_encode_array_string_dyn:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r6\n\tjump\t@.BB2_2\n.BB2_5:\n\tadd\t31, r7, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tadd\tr7, r3, r7\n\tst.1\tr7, r0\n\tadd\tr8, r3, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.ge\t@.BB2_6\n.BB2_2:\n\tsub\tr3, r1, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr3, r7, r3\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB2_5\n\tadd\tr0, r0, r9\n.BB2_4:\n\tadd\tr9, r3, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB2_4\n\tjump\t@.BB2_5\n.BB2_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end2:\n\nabi_encode_array_struct_FuzzSelector_dyn:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_6\n\tadd\t64, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB3_2\n.BB3_5:\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB3_6\n.BB3_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tand\t@CPI3_0[0], r8, r8\n\tst.1.inc\tr3, r8, r10\n\tld.1\tr9, r8\n\tst.1\tr10, r6\n\tadd\t64, r3, r10\n\tld.1\tr8, r9\n\tst.1\tr10, r9\n\tadd\t96, r3, r3\n\tsub!\tr9, r0, r10\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r10\n.BB3_4:\n\tadd\t32, r8, r8\n\tld.1\tr8, r11\n\tand\t@CPI3_1[0], r11, r11\n\tst.1.inc\tr3, r11, r3\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB3_4\n\tjump\t@.BB3_5\n.BB3_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_isOnZkSyncChainId:\n.func_begin5:\n\tnop\tstack+=[1]\n\tsload\tr0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub.s!\tstack-[1], r1, r2\n\tjump.ne\t@.BB5_4\n\tadd\t1, r0, r2\n\tand\t1, r2, r1\n\tret\n.BB5_4:\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.eq\t@.BB5_6\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB5_6:\n\tand\t1, r2, r1\n\tret\n.BB5_1:\n\trevert\n.func_end5:\n\nfun_isOnZkSyncPrecompiles:\n.func_begin6:\n\tnop\tstack+=[4]\n\tld.1\t64, r5\n\tsub.s!\t@CPI6_0[0], r5, r1\n\tjump.gt\t@.BB6_1\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tadd\t96, r5, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r5, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r5, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr5, r1\n\tadd\t32777, r0, stack-[1]\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r6\n\tadd\tr5, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tjump\t@.BB6_3\n.BB6_6:\n\tsub.s!\t3, r6, r1\n\tadd\t1, r6, r6\n\tjump.ge\t@.BB6_7\n.BB6_3:\n\tshl.s\t5, r6, r1\n\tadd\tr1, r5, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI6_1[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB6_6\n\tsub.s!\t@CPI6_2[0], r1, r2\n\tadd.ge\t@CPI6_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI6_2[0], r4, stack[@returndatasize]\n\tadd\tstack-[3], r0, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB6_6\n\tadd\tr3, r0, r1\n\tret\n.BB6_7:\n\tadd\tr0, r0, r3\n\tadd\tr3, r0, r1\n\tret\n.BB6_1:\n\tadd\t@CPI6_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_isZkSyncChain:\n.func_begin7:\n\tnop\tstack+=[4]\n\tsload\tr0, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI7_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r2\n\tsub.s!\tstack-[4], r2, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB7_5\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB7_5\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB7_6\n.BB7_5:\n\tret\n.BB7_6:\n\tld.1\t64, r3\n\tsub.s!\t@CPI7_3[0], r3, r1\n\tjump.ge\t@.BB7_7\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[1]\n\tadd\tr0, r0, r5\n\tadd\tr3, r0, stack-[2]\n\tjump\t@.BB7_9\n.BB7_12:\n\tsub.s!\t3, r5, r1\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB7_13\n.BB7_9:\n\tshl.s\t5, r5, r1\n\tadd\tr1, r3, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI7_4[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB7_12\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tadd.ge\t@CPI7_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[3], r0, r3\n\tadd\tr5, r0, stack-[4]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI7_1[0], r3, stack[@returndatasize]\n\tadd\tstack-[2], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB7_12\n\tadd\tstack-[3], r0, r1\n\tret\n.BB7_13:\n\tadd\tr0, r0, r1\n\tret\n.BB7_1:\n\trevert\n.BB7_7:\n\tadd\t@CPI7_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_makeAddrAndKey:\n.func_begin8:\n\tnop\tstack+=[4]\n\tadd\t32, r1, r7\n\tld.1\t64, r8\n\tadd\t32, r8, r2\n\tadd\tr1, r0, stack-[2]\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB8_3\n\tadd\tr0, r0, r4\n.BB8_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB8_2\n.BB8_3:\n\tadd\tr7, r0, stack-[3]\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr3, r8, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr8, r4\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, stack-[1]\n\tand\tstack-[1], r3, r4\n\tadd\tr4, r8, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI8_0[0], r3, r5\n\tjump.gt\t@.BB8_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB8_5\n\tst.1\t64, r3\n\tadd\t@CPI8_1[0], r0, r4\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_7\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[4]\n\tadd\t@CPI8_3[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_1[0], r1, r2\n\tadd\t@CPI8_1[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI8_1[0], r4, r2\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_4[0], r1, r1\n\tadd\t@CPI8_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB8_37\n\tadd\tr0, r0, r7\n.BB8_10:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB8_10\n.BB8_37:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB8_12\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB8_12:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_13\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r4\n\tjump.gt\t@.BB8_5\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_5\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB8_7\n\tld.1\tr10, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI8_6[0], r1, r1\n\tjump.gt\t@.BB8_7\n\tadd\t@CPI8_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_23\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_7\n\tld.1\t64, r7\n\tadd\t36, r7, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_9[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r7, r2\n\tst.1\tr2, r1\n\tadd\t100, r7, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[3], r0, r6\n\tjump.eq\t@.BB8_28\n\tadd\tr0, r0, r3\n.BB8_27:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB8_27\n.BB8_28:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[1], r1, r1\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r7, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr7, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI8_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI8_5[0], r0, r2\n\tadd\tr7, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_1[0], r3, stack[@returndatasize]\n\tand\t@CPI8_1[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_29\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t@CPI8_0[0], r2, r1\n\tadd\tr2, r0, r1\n\tjump.gt\t@.BB8_5\n\tst.1\t64, r1\n\tadd\tstack-[4], r0, r1\n\tret\n.BB8_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tadd\t@CPI8_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_13:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_36\n\tadd\tr0, r0, r6\n.BB8_15:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_15\n.BB8_36:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB8_16\n\tjump\t@.BB8_17\n.BB8_23:\n\trevert\n.BB8_29:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_35\n\tadd\tr0, r0, r6\n.BB8_31:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_31\n.BB8_35:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB8_17\n.BB8_16:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB8_17:\n\tadd\t@CPI8_1[0], r0, r1\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\n__cxa_throw:\n.func_begin9:\n\trevert\n.func_end9:\n\n__farcall:\n.func_begin10:\n.tmp0:\n\tfar_call\tr1, r2, @.BB10_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n__staticcall:\n.func_begin11:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB11_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB11_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_1:\nCPI6_2:\nCPI7_1:\nCPI8_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -38733980356924212998632005821026408372590900073093808180983500287173593348156\nCPI0_2:\n\t.cell 25000000000000000000\nCPI0_3:\n\t.cell 100000000000000000000\nCPI0_4:\n\t.cell 7165955598810210947758972440497647702352813213923475212099083589497985089546\nCPI0_5:\n\t.cell -11795789301421276014426121139251082969971371454818346283546590961205884918410\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 2233625728\nCPI0_9:\n\t.cell 3514339701\nCPI0_10:\n\t.cell 3792478064\nCPI0_11:\n\t.cell 4202047187\nCPI0_12:\n\t.cell 4202047188\nCPI0_13:\n\t.cell 4228666474\nCPI0_14:\n\t.cell 3792478065\nCPI0_15:\n\t.cell 4188747356\nCPI0_16:\n\t.cell 3514339702\nCPI0_17:\n\t.cell 3650465121\nCPI0_18:\n\t.cell 3651357473\nCPI0_19:\n\t.cell 3041954472\nCPI0_20:\n\t.cell 3041954473\nCPI0_21:\n\t.cell 3124842406\nCPI0_22:\n\t.cell 3143899966\nCPI0_23:\n\t.cell 2233625729\nCPI0_24:\n\t.cell 2439649222\nCPI0_25:\n\t.cell 2957397980\nCPI0_26:\n\t.cell 948229684\nCPI0_27:\n\t.cell 1169906349\nCPI0_28:\n\t.cell 1725540767\nCPI0_29:\n\t.cell 1725540768\nCPI0_30:\n\t.cell 2149057736\nCPI0_31:\n\t.cell 1169906350\nCPI0_32:\n\t.cell 1493811503\nCPI0_33:\n\t.cell 948229685\nCPI0_34:\n\t.cell 1046363171\nCPI0_35:\n\t.cell 1064470260\nCPI0_36:\n\t.cell 389951800\nCPI0_37:\n\t.cell 389951801\nCPI0_38:\n\t.cell 517440284\nCPI0_39:\n\t.cell 719206528\nCPI0_40:\n\t.cell 139621531\nCPI0_41:\n\t.cell 177362148\nCPI0_42:\n\t.cell 265547965\nCPI0_43:\nCPI1_0:\nCPI3_0:\nCPI6_1:\nCPI7_4:\nCPI8_6:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_44:\n\t.cell 2535301202817642044428229017600\nCPI0_45:\n\t.cell -35624623585156310935986566609950774337791491079595188565361216048441042957010\nCPI0_46:\n\t.cell 2535301200456458802993406410752\nCPI0_47:\n\t.cell 46361386726410499263322427381369506175992020241588171917386103515624534704128\nCPI0_48:\nCPI8_5:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_49:\n\t.cell 46308022326495007027972728677917914892729792999299745830475596687180801507328\nCPI0_50:\n\t.cell 5387515053331158197795811229696\nCPI0_51:\nCPI4_0:\nCPI8_0:\n\t.cell 18446744073709551615\nCPI0_52:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_53:\nCPI6_0:\n\t.cell 18446744073709551487\nCPI0_54:\n\t.cell 6454973039698199198119942482240540643982028891330163610098731264865829167633\nCPI0_55:\n\t.cell 18446744073709551423\nCPI0_56:\n\t.cell -43322706056162977564283514484279771228669387920233881186335551476210247084025\nCPI0_57:\nCPI3_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_58:\n\t.cell 18446744073709551551\nCPI0_59:\n\t.cell -24658152496002582284591885775504283774124622393256673163962536635941053241669\nCPI0_60:\n\t.cell 49422300655976383518971161772042036479724517635858811238160587340303074464591\nCPI0_61:\n\t.cell -23753348347723500565303106264081495488768346727419477461837392795653856179540\nCPI0_62:\n\t.cell 36516136433507714556481507284757523525550975291680945358964353894568634540880\nCPI0_63:\n\t.cell 2481041784956016742021570618494952475758789857281704946240779902470294861374\nCPI0_64:\n\t.cell 26616959624788145501257665028759500958019551560565664426117466910078421933505\nCPI0_65:\n\t.cell 26409663560779159245957853369630291191693597991513560285392977449354095080816\nCPI0_66:\nCPI4_1:\nCPI6_4:\nCPI7_6:\nCPI8_10:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_67:\nCPI4_2:\nCPI6_5:\nCPI7_7:\nCPI8_4:\n\t.cell 2852213850513516153367582212096\nCPI0_68:\n\t.cell -48719757687822547800745197551118351534541568878739321821808546113428889233771\nCPI0_69:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_70:\n\t.cell 2852213852874699394802404818944\nCPI0_71:\n\t.cell 36716088771383217775082774315782241332963361008959532882365138714978175418368\nCPI0_72:\n\t.cell 5387515050969974956360988622848\nCPI0_73:\n\t.cell -13000608119627727876772300249704890262799149961116506745709105103651939024896\nCPI0_74:\nCPI8_7:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_75:\nCPI8_8:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_76:\n\t.cell -24243573542908756656742960469620706294859471809197549687606805108482832859136\nCPI0_77:\n\t.cell 31025181622399883774740076251275316957573855105683677084652774970776218501120\nCPI0_78:\n\t.cell -46967347869762817211770011756586609677844163125355452868590611683642280247296\nCPI0_79:\nCPI5_0:\nCPI7_0:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_80:\nCPI5_2:\nCPI7_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_81:\nCPI7_3:\n\t.cell 18446744073709551488\nCPI0_82:\nCPI6_3:\nCPI7_5:\nCPI8_2:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_83:\n\t.cell 18446744073709551483\nCPI0_84:\n\t.cell 452320874088640556310913026855191233875469781383327711575339763837337846847\nCPI0_85:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_86:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_87:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_88:\n\t.cell 452325785390470367106823071634245203940847196386332112033205481904657957551\nCPI0_89:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI0_90:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_91:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_92:\n\t.cell -51723044313523656053393963764110524395896352204932251959347227769995480006656\nCPI0_93:\n\t.cell 316912650057057350374175801344\nCPI0_94:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI0_95:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_96:\n\t.cell 452318278535504933857036879760789952182812262616655043969375177863594816572\nCPI0_97:\n\t.cell 3329497121024463004105485098519422691205340781826206436700955321439975636992\nCPI0_98:\n\t.cell 53124490846506627539696473457219140915193552683999888592509667915023370944512\nCPI0_99:\nCPI8_3:\n\t.cell -166923669067369873766191994592930785159943346089370123761369690313261580288\nCPI0_100:\nCPI8_9:\n\t.cell -26079055428631999755169999820041264995593315863804083392934812248473178472448\nCPI0_101:\n\t.cell 46760403437250787390349788512019380659411559590121987316347522609294499381248\n","methodIdentifiers":{"AMOUNT()":"d1789176","AMOUNT_TO_SEND()":"bb641b3e","IS_TEST()":"fa7626d4","PROOF(uint256)":"801804c8","ROOT()":"5909c12f","airdrop()":"3884d635","excludeArtifacts()":"b5508aa9","excludeContracts()":"e20c9f71","excludeSelectors()":"b0464fdc","excludeSenders()":"1ed7831c","failed()":"ba414fa6","gasPayer()":"173e3139","isOnZkSyncChainId()":"45bb5aae","isOnZkSyncPrecompiles()":"d9a34b21","isZkSyncChain()":"0852749b","proofOne()":"d995ad61","proofTwo()":"f9ab365c","setUp()":"0a9254e4","targetArtifactSelectors()":"66d9a9a0","targetArtifacts()":"85226c81","targetContracts()":"3f7286f4","targetInterfaces()":"2ade3880","targetSelectors()":"916a17c6","targetSenders()":"3e5e3c23","testUsersCanClaim()":"0fd3f0bd","token()":"fc0c546a"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.9f2a5241\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TO_SEND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PROOF\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdrop\",\"outputs\":[{\"internalType\":\"contract MerkleAirdrop\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOnZkSyncChainId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOnZkSyncPrecompiles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isZkSync\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isZkSyncChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isZkSync\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofOne\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofTwo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUsersCanClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract BagelToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MerkleAirdrop.t.sol\":\"MerkleAirdropTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x0b7475858d62180b6ccbea2181cf9fa0ed6773fdb8b0f5cbd946d13c5660579f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba7fa71d8d3ace512ee0a3d9d4d5923a6eb01fcbd93219726e40eeb50a8e52f\",\"dweb:/ipfs/QmScHyHRhrWp21Gazmzq1HR1YDjkbpya6SPTHEs5wzjhwg\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/foundry-devops/src/ZkSyncChainChecker.sol\":{\"keccak256\":\"0xbcf7e7847171a8e028ccecbe9cd3a75f9d3b102c12806d86d13a57a66d204a6a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c075822f6919ac2eaa770d7db6497447cacc0aa9c386bfd6f52ab71fd7d0081\",\"dweb:/ipfs/QmSryCcJrLfifu3SCiAQganu4YxTXJXs2JqpsfNymPp2qL\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployMerkleAirdrop.s.sol\":{\"keccak256\":\"0x53f77d043eb943945ad93937961d59f360b7a4da9845e65385cd5280ab049c59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9556787a401d42536e4bc094d537a8460e2b208b598599640764361dfaa6a59a\",\"dweb:/ipfs/QmY51cadM3RJNtC4iSeUfQ8GMqWpPthh1pHthaZ9qAmJBG\"]},\"src/BagelToken.sol\":{\"keccak256\":\"0x589d6cb7ca5421ff1eec5957f1d0e392b26405f0a50fbe015202d580a3cdb473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eaf9dd3f6a15afa0d5bd9d3f7d315ef4bafac76ff1138954ff4e762b25c933c\",\"dweb:/ipfs/QmdJW9RRHYtdDYwRNWJU3PFwodBBGFCRfRVQ8VM8WDv4jR\"]},\"src/MerkleAirdrop.sol\":{\"keccak256\":\"0x58b45a564922f406e3de50d5dcff09167ebefdd9c951020d7adf5b206ca72ff8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11d327ac00045ffd01e788bf651d256d6e24a0eb26df0f37e1bfe4a50df62318\",\"dweb:/ipfs/QmTH1sWo6SqVoVSjchqj4ScctFbx92WhzevqLpSZzk8nfK\"]},\"test/MerkleAirdrop.t.sol\":{\"keccak256\":\"0xbc11e5b2c9a15eb91743843b8e3028d6193c7d25de5078586ca4062c96a6ffe9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7c7efc299667fef30255f09e422512f6817ab09c4c8bb6424041d0188a6dbd\",\"dweb:/ipfs/Qmcs7k4FAWGH5ZRHPvqUFHwTBwsNGPkEkaFPEgTcrfjYco\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 13:\"lib/forge-std/src/Test.sol\", 26:\"lib/foundry-devops/src/ZkSyncChainChecker.sol\", 57:\"test/MerkleAirdrop.t.sol\"\nobject \"MerkleAirdropTest_46195\" {\n    code {\n        {\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            /// @src 26:196:199  \"324\"\n            let _2 := 0x00\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 26:196:199  \"324\" */ _2, 0x0144)\n            /// @src 26:236:239  \"300\"\n            let _3 := 0x01\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 26:236:239  \"300\" */ _3, 0x012c)\n            /// @src 26:281:284  \"260\"\n            let _4 := 0x02\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 26:281:284  \"260\" */ _4, 0x0104)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let _5 := not(255)\n            sstore(/** @src 3:3166:3170  \"true\" */ 0x0f, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ 0x0f), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _5), /** @src 26:236:239  \"300\" */ _3))\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 13:1038:1042  \"true\" */ 0x22, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ or(and(sload(/** @src 13:1038:1042  \"true\" */ 0x22), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _5), /** @src 26:236:239  \"300\" */ _3))\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 57:514:580  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0x24, 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 57:608:617  \"25 * 1e18\" */ 0x25, 0x015af1d78b58c40000)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 57:653:663  \"AMOUNT * 4\" */ 0x26, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0x056bc75e2d63100000)\n            /// @src 57:693:759  \"0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\"\n            let _6 := 0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 57:693:759  \"0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\" */ 0x27, _6)\n            /// @src 57:789:855  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\"\n            let _7 := 0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 57:789:855  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ 0x28, _7)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let newFreePtr := add(_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src 26:196:199  \"324\" */ _2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 57:662:663  \"4\" */ 0x04, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0x41)\n                revert(/** @src 26:196:199  \"324\" */ _2, /** @src 57:514:580  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0x24)\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            mstore(64, newFreePtr)\n            mstore(_1, /** @src 57:693:759  \"0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\" */ _6)\n            /// @src 57:884:904  \"[proofOne, proofTwo]\"\n            let _8 := 32\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            mstore(/** @src 57:884:904  \"[proofOne, proofTwo]\" */ add(_1, _8), /** @src 57:789:855  \"0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ _7)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let oldLen := sload(/** @src 57:884:904  \"[proofOne, proofTwo]\" */ 0x29)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            sstore(/** @src 57:884:904  \"[proofOne, proofTwo]\" */ 0x29, /** @src 26:281:284  \"260\" */ _4)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            if lt(/** @src 26:281:284  \"260\" */ _4, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ oldLen)\n            {\n                mstore(/** @src 26:196:199  \"324\" */ _2, /** @src 57:884:904  \"[proofOne, proofTwo]\" */ 0x29)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let data := keccak256(/** @src 26:196:199  \"324\" */ _2, /** @src 57:884:904  \"[proofOne, proofTwo]\" */ _8)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _9 := add(data, oldLen)\n                let start := add(data, /** @src 26:281:284  \"260\" */ _4)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                for { }\n                lt(start, _9)\n                {\n                    start := add(start, /** @src 26:236:239  \"300\" */ _3)\n                }\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                {\n                    sstore(start, /** @src 26:196:199  \"324\" */ _2)\n                }\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let srcPtr := _1\n            mstore(/** @src 26:196:199  \"324\" */ _2, /** @src 57:884:904  \"[proofOne, proofTwo]\" */ 0x29)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let data_1 := keccak256(/** @src 26:196:199  \"324\" */ _2, /** @src 57:884:904  \"[proofOne, proofTwo]\" */ _8)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            let i := /** @src 26:196:199  \"324\" */ _2\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            for { }\n            lt(i, /** @src 26:281:284  \"260\" */ _4)\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            {\n                i := add(i, /** @src 26:236:239  \"300\" */ _3)\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            {\n                let _10 := mload(srcPtr)\n                srcPtr := add(srcPtr, /** @src 57:884:904  \"[proofOne, proofTwo]\" */ _8)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                sstore(add(data_1, i), _10)\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"MerkleAirdropTest_46195_deployed\")\n            codecopy(_11, dataoffset(\"MerkleAirdropTest_46195_deployed\"), _12)\n            return(_11, _12)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 2:\"lib/forge-std/src/StdAssertions.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 6:\"lib/forge-std/src/StdInvariant.sol\", 13:\"lib/forge-std/src/Test.sol\", 26:\"lib/foundry-devops/src/ZkSyncChainChecker.sol\", 57:\"test/MerkleAirdrop.t.sol\"\n    object \"MerkleAirdropTest_46195_deployed\" {\n        code {\n            {\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0852749b { external_fun_isZkSyncChain() }\n                    case 0x0a9254e4 { external_fun_setUp() }\n                    case 0x0fd3f0bd {\n                        external_fun_testUsersCanClaim()\n                    }\n                    case 0x173e3139 { external_fun_gasPayer() }\n                    case 0x1ed7831c { external_fun_excludeSenders() }\n                    case 0x2ade3880 {\n                        external_fun_targetInterfaces()\n                    }\n                    case 0x3884d635 { external_fun_airdrop() }\n                    case 0x3e5e3c23 { external_fun_targetSenders() }\n                    case 0x3f7286f4 {\n                        external_fun_targetContracts()\n                    }\n                    case 0x45bb5aae {\n                        external_fun_isOnZkSyncChainId()\n                    }\n                    case 0x5909c12f { external_fun_ROOT() }\n                    case 0x66d9a9a0 {\n                        external_fun_targetArtifactSelectors()\n                    }\n                    case 0x801804c8 { external_fun_PROOF() }\n                    case 0x85226c81 {\n                        external_fun_targetArtifacts()\n                    }\n                    case 0x916a17c6 {\n                        external_fun_targetSelectors()\n                    }\n                    case 0xb0464fdc {\n                        external_fun_excludeSelectors()\n                    }\n                    case 0xb5508aa9 {\n                        external_fun_excludeArtifacts()\n                    }\n                    case 0xba414fa6 { external_fun_failed() }\n                    case 0xbb641b3e { external_fun_AMOUNT_TO_SEND() }\n                    case 0xd1789176 { external_fun_AMOUNT() }\n                    case 0xd995ad61 { external_fun_proofOne() }\n                    case 0xd9a34b21 {\n                        external_fun_isOnZkSyncPrecompiles()\n                    }\n                    case 0xe20c9f71 {\n                        external_fun_excludeContracts()\n                    }\n                    case 0xf9ab365c { external_fun_proofTwo() }\n                    case 0xfa7626d4 { external_fun_IS_TEST() }\n                    case 0xfc0c546a { external_fun_token() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_isZkSyncChain()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isZkSyncChain()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_setUp()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 57:1006:1354  \"if (!isZkSyncChain()) {...\"\n                switch /** @src 57:1010:1026  \"!isZkSyncChain()\" */ cleanup_bool(iszero(/** @src 57:1011:1026  \"isZkSyncChain()\" */ fun_isZkSyncChain()))\n                case /** @src 57:1006:1354  \"if (!isZkSyncChain()) {...\" */ 0 {\n                    /// @src 57:1178:1194  \"new BagelToken()\"\n                    let _2 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1178:1194  \"new BagelToken()\"\n                    let _3 := datasize(\"BagelToken_45776\")\n                    let _4 := add(_2, _3)\n                    let _5 := 0xffffffffffffffff\n                    if or(gt(_4, _5), lt(_4, _2)) { panic_error_0x41() }\n                    datacopy(_2, dataoffset(\"BagelToken_45776\"), _3)\n                    let expr_address := create(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1178:1194  \"new BagelToken()\" */ _2, sub(_4, _2))\n                    if iszero(expr_address) { revert_forward() }\n                    /// @src 57:1170:1194  \"token = new BagelToken()\"\n                    update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken_9520(expr_address)\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    let _6 := sload(/** @src 57:1230:1234  \"ROOT\" */ 0x24)\n                    /// @src 57:1236:1241  \"token\"\n                    let _address := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1170:1194  \"token = new BagelToken()\" */ 0x23))\n                    /// @src 57:1212:1242  \"new MerkleAirdrop(ROOT, token)\"\n                    let _7 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1212:1242  \"new MerkleAirdrop(ROOT, token)\"\n                    let _8 := datasize(\"MerkleAirdrop_46003\")\n                    let _9 := add(_7, _8)\n                    if or(gt(_9, /** @src 57:1178:1194  \"new BagelToken()\" */ _5), /** @src 57:1212:1242  \"new MerkleAirdrop(ROOT, token)\" */ lt(_9, _7)) { panic_error_0x41() }\n                    datacopy(_7, dataoffset(\"MerkleAirdrop_46003\"), _8)\n                    let expr_address_1 := create(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1212:1242  \"new MerkleAirdrop(ROOT, token)\" */ _7, sub(abi_encode_bytes32_contract_BagelToken(_9, _6, _address), _7))\n                    if iszero(expr_address_1) { revert_forward() }\n                    /// @src 57:1202:1242  \"airdrop = new MerkleAirdrop(ROOT, token)\"\n                    update_storage_value_offsett_contract_MerkleAirdrop_to_contract_MerkleAirdrop(expr_address_1)\n                    /// @src 57:1250:1260  \"token.mint\"\n                    let expr_address_2 := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1170:1194  \"token = new BagelToken()\" */ 0x23)))\n                    /// @src 57:1261:1274  \"token.owner()\"\n                    let _10 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1261:1274  \"token.owner()\"\n                    mstore(_10, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x8da5cb5b))\n                    /// @src 57:1261:1274  \"token.owner()\"\n                    let _11 := 32\n                    let _12 := staticcall(gas(), expr_address_2, _10, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 4, /** @src 57:1261:1274  \"token.owner()\" */ _10, _11)\n                    if iszero(_12) { revert_forward() }\n                    let expr := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1\n                    /// @src 57:1261:1274  \"token.owner()\"\n                    if _12\n                    {\n                        let _13 := _11\n                        if gt(_11, returndatasize()) { _13 := returndatasize() }\n                        finalize_allocation(_10, _13)\n                        expr := abi_decode_address_fromMemory(_10, add(_10, _13))\n                    }\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    let _14 := sload(/** @src 57:1276:1290  \"AMOUNT_TO_SEND\" */ 0x26)\n                    /// @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\"\n                    if iszero(extcodesize(expr_address_2))\n                    {\n                        /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                        revert(_1, _1)\n                    }\n                    /// @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\"\n                    let _15 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\"\n                    mstore(_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x40c10f19))\n                    /// @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\"\n                    let _16 := call(gas(), expr_address_2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\" */ _15, sub(abi_encode_address_uint256(add(_15, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 4), /** @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\" */ expr, _14), _15), _15, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1)\n                    /// @src 57:1250:1291  \"token.mint(token.owner(), AMOUNT_TO_SEND)\"\n                    if iszero(_16) { revert_forward() }\n                    if _16\n                    {\n                        finalize_allocation_9522(_15)\n                        abi_decode(_15, _15)\n                    }\n                    /// @src 57:1299:1313  \"token.transfer\"\n                    let expr_address_3 := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1170:1194  \"token = new BagelToken()\" */ 0x23)))\n                    /// @src 57:1314:1330  \"address(airdrop)\"\n                    let expr_1 := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ extract_from_storage_value_offsett_contract_MerkleAirdrop(sload(/** @src 57:1202:1242  \"airdrop = new MerkleAirdrop(ROOT, token)\" */ 0x22)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    let _17 := sload(/** @src 57:1276:1290  \"AMOUNT_TO_SEND\" */ 0x26)\n                    /// @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\"\n                    let _18 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\"\n                    mstore(_18, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xa9059cbb))\n                    /// @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\"\n                    let _19 := call(gas(), expr_address_3, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\" */ _18, sub(abi_encode_address_uint256(add(_18, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 4), /** @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\" */ expr_1, _17), _18), _18, /** @src 57:1261:1274  \"token.owner()\" */ _11)\n                    /// @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\"\n                    if iszero(_19) { revert_forward() }\n                    if _19\n                    {\n                        let _20 := /** @src 57:1261:1274  \"token.owner()\" */ _11\n                        /// @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\"\n                        if gt(/** @src 57:1261:1274  \"token.owner()\" */ _11, /** @src 57:1299:1347  \"token.transfer(address(airdrop), AMOUNT_TO_SEND)\" */ returndatasize()) { _20 := returndatasize() }\n                        finalize_allocation(_18, _20)\n                        pop(abi_decode_bool_fromMemory(_18, add(_18, _20)))\n                    }\n                }\n                default /// @src 57:1006:1354  \"if (!isZkSyncChain()) {...\"\n                {\n                    /// @src 57:1067:1092  \"new DeployMerkleAirdrop()\"\n                    let _21 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1067:1092  \"new DeployMerkleAirdrop()\"\n                    let _22 := datasize(\"DeployMerkleAirdrop_44802\")\n                    let _23 := add(_21, _22)\n                    if or(gt(_23, 0xffffffffffffffff), lt(_23, _21)) { panic_error_0x41() }\n                    datacopy(_21, dataoffset(\"DeployMerkleAirdrop_44802\"), _22)\n                    let expr_address_4 := create(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1067:1092  \"new DeployMerkleAirdrop()\" */ _21, sub(_23, _21))\n                    if iszero(expr_address_4) { revert_forward() }\n                    /// @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\"\n                    let _24 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\"\n                    mstore(_24, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 15437239))\n                    /// @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\"\n                    let _25 := call(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ and(/** @src 57:1119:1147  \"deployer.deployMerkleAirdrop\" */ expr_address_4, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\" */ _24, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 4, /** @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\" */ _24, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 64)\n                    /// @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\"\n                    if iszero(_25) { revert_forward() }\n                    let expr_component_address := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1\n                    let expr_component_address_1 := _1\n                    /// @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\"\n                    if _25\n                    {\n                        let _26 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 64\n                        /// @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\"\n                        if gt(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _26, /** @src 57:1119:1149  \"deployer.deployMerkleAirdrop()\" */ returndatasize()) { _26 := returndatasize() }\n                        finalize_allocation(_24, _26)\n                        let expr_component_address_2, expr_component_address_3 := abi_decode_contract_MerkleAirdropt_contract_BagelToken_fromMemory(_24, add(_24, _26))\n                        expr_component_address := expr_component_address_2\n                        expr_component_address_1 := expr_component_address_3\n                    }\n                    /// @src 57:1100:1149  \"(airdrop, token) = deployer.deployMerkleAirdrop()\"\n                    update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken_9520(expr_component_address_1)\n                    update_storage_value_offsett_contract_MerkleAirdrop_to_contract_MerkleAirdrop(expr_component_address)\n                }\n                /// @src 57:1386:1408  \"makeAddrAndKey(\\\"user\\\")\"\n                let expr_component, expr_component_1 := fun_makeAddrAndKey(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ copy_literal_to_memory_cb61ad33d3763aed2bc16c0f57ff251ac638d3d03ab7550adfd3e166c2e7adb6())\n                /// @src 57:1364:1408  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\"\n                update_storage_value_offsett_uint256_to_uint256(expr_component_1)\n                update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken_9526(expr_component)\n                /// @src 4:20537:20557  \"makeAddrAndKey(name)\"\n                let expr_component_2, expr_component_3 := fun_makeAddrAndKey(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ copy_literal_to_memory_7cede0978de42de3b97afbdb4feff1b5451d354e0c9f0fee9bd7873a4f5db0bb())\n                /// @src 57:1414:1445  \"gasPayer = makeAddr(\\\"gasPayer\\\")\"\n                update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken(/** @src 57:1425:1445  \"makeAddr(\\\"gasPayer\\\")\" */ expr_component_2)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                return(_1, _1)\n            }\n            function external_fun_testUsersCanClaim()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 57:1522:1537  \"token.balanceOf\"\n                let expr_address := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1522:1527  \"token\" */ 0x23)))\n                /// @src 57:1538:1542  \"user\"\n                let _2 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1538:1542  \"user\" */ 0x2b))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _3 := 64\n                /// @src 57:1522:1543  \"token.balanceOf(user)\"\n                let _4 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(_3)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let _5 := shl(224, 0x70a08231)\n                /// @src 57:1522:1543  \"token.balanceOf(user)\"\n                mstore(_4, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _5)\n                /// @src 57:1522:1543  \"token.balanceOf(user)\"\n                let _6 := 32\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _7 := 4\n                /// @src 57:1522:1543  \"token.balanceOf(user)\"\n                let _8 := staticcall(gas(), expr_address, _4, sub(abi_encode_address(add(_4, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7), /** @src 57:1522:1543  \"token.balanceOf(user)\" */ _2), _4), _4, _6)\n                if iszero(_8) { revert_forward() }\n                let expr := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1\n                /// @src 57:1522:1543  \"token.balanceOf(user)\"\n                if _8\n                {\n                    let _9 := _6\n                    if gt(_6, returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_4, _9)\n                    expr := abi_decode_bytes32_fromMemory(_4, add(_4, _9))\n                }\n                /// @src 57:1566:1588  \"airdrop.getMessageHash\"\n                let expr_address_1 := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ extract_from_storage_value_offsett_contract_MerkleAirdrop(sload(/** @src 57:1566:1573  \"airdrop\" */ 0x22)))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _10 := sload(/** @src 57:1595:1601  \"AMOUNT\" */ 0x25)\n                /// @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\"\n                let _11 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(_3)\n                /// @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\"\n                mstore(_11, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x512c91df))\n                /// @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\"\n                let _12 := staticcall(gas(), expr_address_1, _11, sub(abi_encode_address_uint256(add(_11, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7), /** @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\" */ _2, _10), _11), _11, /** @src 57:1522:1543  \"token.balanceOf(user)\" */ _6)\n                /// @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\"\n                if iszero(_12) { revert_forward() }\n                let expr_1 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1\n                /// @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\"\n                if _12\n                {\n                    let _13 := /** @src 57:1522:1543  \"token.balanceOf(user)\" */ _6\n                    /// @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\"\n                    if gt(/** @src 57:1522:1543  \"token.balanceOf(user)\" */ _6, /** @src 57:1566:1602  \"airdrop.getMessageHash(user, AMOUNT)\" */ returndatasize()) { _13 := returndatasize() }\n                    finalize_allocation(_11, _13)\n                    expr_1 := abi_decode_bytes32_fromMemory(_11, add(_11, _13))\n                }\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _14 := sload(/** @src 57:1652:1663  \"userPrivKey\" */ 0x2c)\n                /// @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\"\n                let _15 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(_3)\n                /// @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\"\n                mstore(_15, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x38d07aa9))\n                /// @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\"\n                let _16 := sub(abi_encode_uint256_bytes32(add(_15, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7), /** @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\" */ _14, expr_1), _15)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _17 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\"\n                let _18 := staticcall(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _17, /** @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\" */ _15, _16, _15, 96)\n                if iszero(_18) { revert_forward() }\n                let expr_component := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1\n                let expr_component_1 := _1\n                let expr_component_2 := _1\n                /// @src 57:1644:1672  \"vm.sign(userPrivKey, digest)\"\n                if _18\n                {\n                    let _19 := 96\n                    if gt(_19, returndatasize()) { _19 := returndatasize() }\n                    finalize_allocation(_15, _19)\n                    let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_15, add(_15, _19))\n                    expr_component := expr_component_3\n                    expr_component_1 := expr_component_4\n                    expr_component_2 := expr_component_5\n                }\n                /// @src 57:1688:1696  \"gasPayer\"\n                let _20 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1688:1696  \"gasPayer\" */ 0x2a))\n                /// @src 57:1679:1697  \"vm.prank(gasPayer)\"\n                if iszero(extcodesize(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _17))\n                /// @src 57:1679:1697  \"vm.prank(gasPayer)\"\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 57:1679:1697  \"vm.prank(gasPayer)\"\n                let _21 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(_3)\n                /// @src 57:1679:1697  \"vm.prank(gasPayer)\"\n                mstore(_21, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xca669fa7))\n                /// @src 57:1679:1697  \"vm.prank(gasPayer)\"\n                let _22 := call(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _17, _1, /** @src 57:1679:1697  \"vm.prank(gasPayer)\" */ _21, sub(abi_encode_address(add(_21, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7), /** @src 57:1679:1697  \"vm.prank(gasPayer)\" */ _20), _21), _21, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1)\n                /// @src 57:1679:1697  \"vm.prank(gasPayer)\"\n                if iszero(_22) { revert_forward() }\n                if _22\n                {\n                    finalize_allocation_9522(_21)\n                    abi_decode(_21, _21)\n                }\n                /// @src 57:1703:1716  \"airdrop.claim\"\n                let expr_address_2 := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ extract_from_storage_value_offsett_contract_MerkleAirdrop(sload(/** @src 57:1566:1573  \"airdrop\" */ 0x22)))\n                /// @src 57:1717:1721  \"user\"\n                let _23 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1538:1542  \"user\" */ 0x2b))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _24 := sload(/** @src 57:1595:1601  \"AMOUNT\" */ 0x25)\n                /// @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\"\n                if iszero(extcodesize(expr_address_2))\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\"\n                let _25 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(_3)\n                /// @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\"\n                mstore(_25, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4497a169))\n                /// @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\"\n                let _26 := call(gas(), expr_address_2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\" */ _25, sub(abi_encode_address_uint256_array_bytes32_dyn_storage_uint8_bytes32_bytes32(add(_25, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7), /** @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\" */ _23, _24, expr_component, expr_component_1, expr_component_2), _25), _25, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1)\n                /// @src 57:1703:1746  \"airdrop.claim(user, AMOUNT, PROOF, v, r, s)\"\n                if iszero(_26) { revert_forward() }\n                if _26\n                {\n                    finalize_allocation_9522(_25)\n                    abi_decode(_25, _25)\n                }\n                /// @src 57:1777:1792  \"token.balanceOf\"\n                let expr_address_3 := cleanup_address(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1522:1527  \"token\" */ 0x23)))\n                /// @src 57:1793:1797  \"user\"\n                let _27 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ cleanup_address(sload(/** @src 57:1538:1542  \"user\" */ 0x2b))\n                /// @src 57:1777:1798  \"token.balanceOf(user)\"\n                let _28 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(_3)\n                /// @src 57:1777:1798  \"token.balanceOf(user)\"\n                mstore(_28, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _5)\n                /// @src 57:1777:1798  \"token.balanceOf(user)\"\n                let _29 := staticcall(gas(), expr_address_3, _28, sub(abi_encode_address(add(_28, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7), /** @src 57:1777:1798  \"token.balanceOf(user)\" */ _27), _28), _28, /** @src 57:1522:1543  \"token.balanceOf(user)\" */ _6)\n                /// @src 57:1777:1798  \"token.balanceOf(user)\"\n                if iszero(_29) { revert_forward() }\n                let expr_2 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1\n                /// @src 57:1777:1798  \"token.balanceOf(user)\"\n                if _29\n                {\n                    let _30 := /** @src 57:1522:1543  \"token.balanceOf(user)\" */ _6\n                    /// @src 57:1777:1798  \"token.balanceOf(user)\"\n                    if gt(/** @src 57:1522:1543  \"token.balanceOf(user)\" */ _6, /** @src 57:1777:1798  \"token.balanceOf(user)\" */ returndatasize()) { _30 := returndatasize() }\n                    finalize_allocation(_28, _30)\n                    expr_2 := abi_decode_bytes32_fromMemory(_28, add(_28, _30))\n                }\n                /// @src 57:1837:1852  \"startingBalance\"\n                fun_assertEq(/** @src 57:1813:1835  \"endingBalance - AMOUNT\" */ checked_sub_uint256(expr_2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sload(/** @src 57:1595:1601  \"AMOUNT\" */ 0x25)), /** @src 57:1837:1852  \"startingBalance\" */ expr)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                return(_1, _1)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function external_fun_gasPayer()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 57:908:931  \"address public gasPayer\" */ 42), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function array_storeLengthForEncoding_array_address_dyn(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function external_fun_excludeSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 6:3018:3034  \"_excludedSenders\" */ 0x19)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                mstore(0, /** @src 6:3018:3034  \"_excludedSenders\" */ 0x19)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let srcPtr := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_array_struct_FuzzInterface_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, _2)\n                let _3 := 5\n                let tail_2 := add(add(headStart, shl(_3, length)), _2)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                let i_1 := i\n                for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _4 := mload(srcPtr)\n                    let tail_3 := add(tail_2, _2)\n                    mstore(tail_2, and(mload(_4), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    let memberValue0 := mload(add(_4, _1))\n                    mstore(add(tail_2, _1), _2)\n                    let pos_1 := tail_3\n                    let length_1 := mload(memberValue0)\n                    mstore(tail_3, length_1)\n                    let _5 := 96\n                    pos_1 := add(tail_2, _5)\n                    let tail_4 := add(add(tail_2, shl(_3, length_1)), _5)\n                    let srcPtr_1 := add(memberValue0, _1)\n                    let i_2 := i\n                    for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                    {\n                        mstore(pos_1, add(sub(tail_4, tail_2), not(95)))\n                        tail_4 := abi_encode_string_to_string(mload(srcPtr_1), tail_4)\n                        srcPtr_1 := add(srcPtr_1, _1)\n                        pos_1 := add(pos_1, _1)\n                    }\n                    tail_2 := tail_4\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetInterfaces()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 6:3948:3967  \"_targetedInterfaces\" */ 0x21)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let _2 := 64\n                let memPtr := mload(_2)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, _3)\n                mstore(0, /** @src 6:3948:3967  \"_targetedInterfaces\" */ 0x21)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let spos := 26409663560779159245957853369630291191693597991513560285392977449354095080816\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_9531(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_string__dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(_2)\n                return(memPos, sub(abi_encode_array_struct_FuzzInterface_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_airdrop()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(shr(8, sload(/** @src 57:432:460  \"MerkleAirdrop public airdrop\" */ 34)), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_targetSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 6:3794:3810  \"_targetedSenders\" */ 0x1b)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                mstore(0, /** @src 6:3794:3810  \"_targetedSenders\" */ 0x1b)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let srcPtr := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_targetContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 6:3501:3519  \"_targetedContracts\" */ 0x1a)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                mstore(0, /** @src 6:3501:3519  \"_targetedContracts\" */ 0x1a)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let srcPtr := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_isOnZkSyncChainId()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isOnZkSyncChainId()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function abi_encode_bytes32(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_ROOT()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 57:492:580  \"bytes32 public ROOT = 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 36)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function abi_encode_bytes4(value, pos)\n            {\n                mstore(pos, and(value, shl(224, 0xffffffff)))\n            }\n            function abi_encode_array_bytes4_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_encode_array_struct_FuzzArtifactSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, _2)\n                let tail_2 := add(add(headStart, shl(5, length)), _2)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    let memberValue0 := mload(_3)\n                    mstore(tail_2, _2)\n                    let tail_3 := abi_encode_string_to_string(memberValue0, add(tail_2, _2))\n                    let memberValue0_1 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), sub(tail_3, tail_2))\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0_1, tail_3)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifactSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 6:3346:3372  \"_targetedArtifactSelectors\" */ 0x1e)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let _2 := 64\n                let memPtr := mload(_2)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, _3)\n                mstore(0, /** @src 6:3346:3372  \"_targetedArtifactSelectors\" */ 0x1e)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let spos := 36516136433507714556481507284757523525550975291680945358964353894568634540880\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_9531(memPtr_1)\n                    mstore(memPtr_1, copy_array_from_storage_to_memory_string(spos))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(_2)\n                return(memPos, sub(abi_encode_array_struct_FuzzArtifactSelector_dyn(memPos, memPtr), memPos))\n            }\n            function array_dataslot_array_bytes32_dyn_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function external_fun_PROOF()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let value := calldataload(4)\n                /// @src 57:859:904  \"bytes32[] public PROOF = [proofOne, proofTwo]\"\n                if iszero(lt(value, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sload(/** @src 57:859:904  \"bytes32[] public PROOF = [proofOne, proofTwo]\" */ 41)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 57:859:904  \"bytes32[] public PROOF = [proofOne, proofTwo]\" */ 41)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := sload(add(92038740889592694858267878744606412364501637938221086577620191212259273460396, value))\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function abi_encode_array_string_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    tail_2 := abi_encode_string_to_string(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 6:3162:3180  \"_targetedArtifacts\" */ 0x1d)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, _2)\n                mstore(0, /** @src 6:3162:3180  \"_targetedArtifacts\" */ 0x1d)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, _2)\n                let tail_2 := add(add(headStart, shl(5, length)), _2)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    mstore(tail_2, and(mload(_3), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    let memberValue0 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), _2)\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0, add(tail_2, _2))\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 6:3653:3671  \"_targetedSelectors\"\n                let _1 := 0x20\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let length := sload(/** @src 6:3653:3671  \"_targetedSelectors\" */ _1)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _2 := array_allocation_size_array_string_dyn(length)\n                let _3 := 64\n                let memPtr := mload(_3)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                mpos := add(memPtr, /** @src 6:3653:3671  \"_targetedSelectors\" */ _1)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(0, /** @src 6:3653:3671  \"_targetedSelectors\" */ _1)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let spos := 91133936741313613138979099233183624079145362272383890875495047371972076398267\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_3)\n                    finalize_allocation_9531(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    mstore(add(memPtr_1, /** @src 6:3653:3671  \"_targetedSelectors\" */ _1), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, /** @src 6:3653:3671  \"_targetedSelectors\" */ _1)\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(_3)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_excludeSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 6:2876:2894  \"_excludedSelectors\" */ 0x1f)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let _2 := 64\n                let memPtr := mload(_2)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, _3)\n                mstore(0, /** @src 6:2876:2894  \"_excludedSelectors\" */ 0x1f)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let spos := 72469383181153217859287470524408136624600596745406682853122032531702882555911\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_9531(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(_2)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_excludeArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 6:2575:2593  \"_excludedArtifacts\" */ 0x1c)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, _2)\n                mstore(0, /** @src 6:2575:2593  \"_excludedArtifacts\" */ 0x1c)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let spos := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_failed()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_failed()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_AMOUNT_TO_SEND()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 57:621:663  \"uint256 public AMOUNT_TO_SEND = AMOUNT * 4\" */ 38)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_AMOUNT()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 57:584:617  \"uint256 public AMOUNT = 25 * 1e18\" */ 37)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_proofOne()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 57:667:759  \"bytes32 public proofOne = 0x0fd7c981d39bece61f7499702bf59b3114a90e66b51ba2c53abdf7b62986c00a\" */ 39)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_isOnZkSyncPrecompiles()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isOnZkSyncPrecompiles()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_excludeContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 6:2723:2741  \"_excludedContracts\" */ 0x18)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                mstore(0, /** @src 6:2723:2741  \"_excludedContracts\" */ 0x18)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let srcPtr := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_proofTwo()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 57:763:855  \"bytes32 public proofTwo = 0xe5ebd1e1b5a5478a944ecab36a9a954ac3b6b8216875f6524caa7a1d87096576\" */ 40)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_IS_TEST()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 13:1016:1042  \"bool public IS_TEST = true\" */ 34), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function external_fun_token()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 57:464:487  \"BagelToken public token\" */ 35), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_9522(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_9531(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 64)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ and(add(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ size, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 31), not(31)))\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_bytes32_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @ast-id 286 @src 2:1243:1447  \"function failed() public view returns (bool) {...\"\n            function fun_failed() -> var_\n            {\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let value := and(sload(/** @src 2:1302:1309  \"_failed\" */ 0x0b), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0xff)\n                /// @src 2:1298:1441  \"if (_failed) {...\"\n                switch /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ value\n                case /** @src 2:1298:1441  \"if (_failed) {...\" */ 0 {\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _1 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    mstore(_1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(228, 0x0667f9d7))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    mstore(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _2)\n                    mstore(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _3 := staticcall(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _2, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                    if iszero(_3) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 2:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        expr := abi_decode_bytes32_fromMemory(_1, add(_1, _4))\n                    }\n                    /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    var_ := /** @src 2:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                    /// @src 2:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    leave\n                }\n                default /// @src 2:1298:1441  \"if (_failed) {...\"\n                {\n                    /// @src 2:1325:1339  \"return _failed\"\n                    var_ := value\n                    leave\n                }\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let slotValue := sload(slot)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, shl(5, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_array_bytes32_dyn_storage(slot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_array_string__dyn(slot) -> memPtr\n            {\n                let length := sload(slot)\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let mpos := memPtr_1\n                let _2 := 0x20\n                mpos := add(memPtr_1, _2)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ slot)\n                let spos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n            }\n            function copy_array_from_storage_to_memory_array_bytes4_dyn(slot) -> memPtr\n            {\n                let _1 := 64\n                memPtr := mload(_1)\n                let pos := memPtr\n                let length := sload(slot)\n                pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                let srcPtr := array_dataslot_array_bytes32_dyn_storage(slot)\n                let itemCounter := /** @src -1:-1:-1 */ 0\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                for { }\n                lt(add(itemCounter, 7), length)\n                {\n                    itemCounter := add(itemCounter, 8)\n                }\n                {\n                    let data := sload(srcPtr)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _2 := 224\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(_2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data), pos)\n                    let _3 := 0x20\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _4 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ shl(224, 0xffffffff)\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _5 := 192\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_5, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, _3))\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _6 := 160\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_6, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, _1))\n                    let _7 := 96\n                    /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _8 := 128\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(_8, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, _7))\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _7, data), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _8))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, data), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _6))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _3, data), /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _5))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(pos, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _2))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    pos := add(pos, 256)\n                    srcPtr := add(srcPtr, 1)\n                }\n                let data_1 := sload(srcPtr)\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data_1), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(192, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(160, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(128, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 96, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(shl(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ and(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ data_1, shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            /// @ast-id 39248 @src 26:291:623  \"function isOnZkSyncChainId() public view returns (bool) {...\"\n            function fun_isOnZkSyncChainId() -> var\n            {\n                /// @src 26:480:558  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId\"\n                let expr := /** @src 26:480:517  \"block.chainid == zkSyncMainnetChainId\" */ eq(/** @src 26:480:493  \"block.chainid\" */ chainid(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sload(/** @src 26:497:517  \"zkSyncMainnetChainId\" */ 0x00))\n                /// @src 26:480:558  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId\"\n                if iszero(expr)\n                {\n                    expr := /** @src 26:521:558  \"block.chainid == zkSyncSepoliaChainId\" */ eq(/** @src 26:480:493  \"block.chainid\" */ chainid(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sload(/** @src 26:538:558  \"zkSyncSepoliaChainId\" */ 0x01))\n                }\n                /// @src 26:480:616  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 26:574:616  \"block.chainid == zkSyncInMemoryNodeChainId\" */ eq(/** @src 26:480:493  \"block.chainid\" */ chainid(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sload(/** @src 26:591:616  \"zkSyncInMemoryNodeChainId\" */ 0x02))\n                }\n                /// @src 26:473:616  \"return block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId...\"\n                var := expr_1\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function panic_error_0x11()\n            {\n                mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_address(baseRef, index) -> addr\n            {\n                if iszero(lt(index, 0x04))\n                {\n                    mstore(0, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0x4e487b71))\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    mstore(0x04, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(baseRef, shl(5, index))\n            }\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))\n            }\n            /// @ast-id 39345 @src 26:629:1726  \"function isOnZkSyncPrecompiles() public returns (bool isZkSync) {...\"\n            function fun_isOnZkSyncPrecompiles() -> var_isZkSync\n            {\n                /// @src 26:678:691  \"bool isZkSync\"\n                var_isZkSync := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0\n                /// @src 26:678:691  \"bool isZkSync\"\n                let var_isZkSync_1 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0\n                let memPtr := mload(64)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let newFreePtr := add(memPtr, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 128)\n                /// @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 64, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ newFreePtr)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(memPtr, 3)\n                let _1 := 4\n                mstore(/** @src 26:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, 32), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1)\n                mstore(/** @src 26:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 64), 5)\n                mstore(/** @src 26:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, 96), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 8)\n                /// @src 26:1366:1379  \"uint256 i = 0\"\n                let var_i := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ var_isZkSync_1\n                /// @src 26:1361:1695  \"for (uint256 i = 0; i < targets.length; i++) {...\"\n                for { }\n                /** @src 26:1381:1399  \"i < targets.length\" */ lt(var_i, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1)\n                /// @src 26:1366:1379  \"uint256 i = 0\"\n                {\n                    /// @src 26:1401:1404  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 26:1084:1085  \"1\"\n                    let _2 := 0x01\n                    /// @src 26:1590:1685  \"if (!success) {...\"\n                    if /** @src 26:1594:1602  \"!success\" */ cleanup_bool(iszero(/** @src 26:1487:1577  \"assembly {...\" */ call(gas(), /** @src 26:1463:1473  \"targets[i]\" */ read_from_memoryt_address(memory_array_index_access_address(memPtr, var_i)), /** @src 26:1084:1085  \"1\" */ _2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ var_isZkSync_1, var_isZkSync_1, var_isZkSync_1, var_isZkSync_1)))\n                    /// @src 26:1590:1685  \"if (!success) {...\"\n                    {\n                        /// @src 26:1655:1670  \"return isZkSync\"\n                        var_isZkSync := /** @src 26:1084:1085  \"1\" */ _2\n                        /// @src 26:1655:1670  \"return isZkSync\"\n                        leave\n                    }\n                }\n                /// @src 26:1704:1719  \"return isZkSync\"\n                var_isZkSync := var_isZkSync\n            }\n            /// @ast-id 39360 @src 26:1732:1909  \"function isZkSyncChain() public returns (bool isZkSync) {...\"\n            function fun_isZkSyncChain() -> var_isZkSync\n            {\n                /// @src 26:1798:1863  \"if (isOnZkSyncChainId()) {...\"\n                if /** @src 26:1802:1821  \"isOnZkSyncChainId()\" */ fun_isOnZkSyncChainId()\n                /// @src 26:1798:1863  \"if (isOnZkSyncChainId()) {...\"\n                {\n                    /// @src 26:1837:1852  \"return isZkSync\"\n                    var_isZkSync := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0\n                    /// @src 26:1837:1852  \"return isZkSync\"\n                    leave\n                }\n                /// @src 26:1872:1902  \"return isOnZkSyncPrecompiles()\"\n                var_isZkSync := /** @src 26:1879:1902  \"isOnZkSyncPrecompiles()\" */ fun_isOnZkSyncPrecompiles()\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken_9520(value)\n            {\n                sstore(/** @src 57:1170:1194  \"token = new BagelToken()\" */ 0x23, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ or(and(sload(/** @src 57:1170:1194  \"token = new BagelToken()\" */ 0x23), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken_9526(value)\n            {\n                sstore(/** @src 57:1364:1408  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\" */ 0x2b, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ or(and(sload(/** @src 57:1364:1408  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\" */ 0x2b), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function update_storage_value_offsett_contract_BagelToken_to_contract_BagelToken(value)\n            {\n                sstore(/** @src 57:1414:1445  \"gasPayer = makeAddr(\\\"gasPayer\\\")\" */ 0x2a, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ or(and(sload(/** @src 57:1414:1445  \"gasPayer = makeAddr(\\\"gasPayer\\\")\" */ 0x2a), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function abi_encode_bytes32_contract_BagelToken(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function update_storage_value_offsett_contract_MerkleAirdrop_to_contract_MerkleAirdrop(value)\n            {\n                let _1 := sload(/** @src 57:1202:1242  \"airdrop = new MerkleAirdrop(ROOT, token)\" */ 0x22)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                sstore(/** @src 57:1202:1242  \"airdrop = new MerkleAirdrop(ROOT, token)\" */ 0x22, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ or(and(_1, not(sub(shl(168, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 256))), and(shl(8, value), sub(shl(168, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 256))))\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                { revert(0, 0) }\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_address(value)\n                value0 := value\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(add(headStart, 32), value1)\n            }\n            function extract_from_storage_value_offsett_contract_MerkleAirdrop(slot_value) -> value\n            {\n                value := and(shr(8, slot_value), sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1))\n            }\n            /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                value0 := value\n            }\n            function abi_decode_contract_MerkleAirdropt_contract_BagelToken_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_address(value)\n                value0 := value\n                let value_1 := mload(add(headStart, 32))\n                validator_revert_address(value_1)\n                value1 := value_1\n            }\n            function copy_literal_to_memory_cb61ad33d3763aed2bc16c0f57ff251ac638d3d03ab7550adfd3e166c2e7adb6() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_9531(memPtr_1)\n                mstore(memPtr_1, 4)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"user\")\n            }\n            function update_storage_value_offsett_uint256_to_uint256(value)\n            {\n                sstore(/** @src 57:1364:1408  \"(user, userPrivKey) = makeAddrAndKey(\\\"user\\\")\" */ 0x2c, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ value)\n            }\n            function copy_literal_to_memory_7cede0978de42de3b97afbdb4feff1b5451d354e0c9f0fee9bd7873a4f5db0bb() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_9531(memPtr_1)\n                mstore(memPtr_1, 8)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"gasPayer\")\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_address_string(headStart, value0, value1) -> tail\n            {\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                /// @src 4:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(add(headStart, 32), 64)\n                tail := abi_encode_string_to_string(value1, add(headStart, 64))\n            }\n            /// @ast-id 5368 @src 4:20158:20400  \"function makeAddrAndKey(string memory name) internal virtual returns (address addr, uint256 privateKey) {...\"\n            function fun_makeAddrAndKey(var_name_mpos) -> var_addr, var_privateKey\n            {\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let expr_mpos := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                let _1 := add(expr_mpos, 0x20)\n                let _2 := sub(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ abi_encode_string(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ var_name_mpos, _1), expr_mpos)\n                mstore(expr_mpos, add(_2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ not(31)))\n                /// @src 4:20303:20325  \"abi.encodePacked(name)\"\n                finalize_allocation(expr_mpos, _2)\n                /// @src 4:20272:20327  \"privateKey = uint256(keccak256(abi.encodePacked(name)))\"\n                var_privateKey := /** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ keccak256(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, mload(/** @src 4:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _3 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                mstore(_3, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _4 := sub(abi_encode_bytes32(add(_3, 4), var_privateKey), _3)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _5 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                let _6 := staticcall(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _5, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ _3, _4, _3, /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ 0x20)\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if iszero(_6) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                if _6\n                {\n                    let _7 := /** @src 4:20303:20325  \"abi.encodePacked(name)\" */ 0x20\n                    /// @src 4:20344:20363  \"vm.addr(privateKey)\"\n                    if gt(/** @src 4:20303:20325  \"abi.encodePacked(name)\" */ _7, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_3, _7)\n                    expr := abi_decode_address_fromMemory(_3, add(_3, _7))\n                }\n                /// @src 4:20337:20363  \"addr = vm.addr(privateKey)\"\n                var_addr := expr\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(extcodesize(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _5))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _8 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                mstore(_8, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                let _9 := call(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _5, /** @src -1:-1:-1 */ 0, /** @src 4:20373:20393  \"vm.label(addr, name)\" */ _8, sub(abi_encode_address_string(add(_8, /** @src 4:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 4:20373:20393  \"vm.label(addr, name)\" */ expr, var_name_mpos), _8), _8, /** @src -1:-1:-1 */ 0)\n                /// @src 4:20373:20393  \"vm.label(addr, name)\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation_9522(_8)\n                    abi_decode(_8, _8)\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_decode_uint8t_bytes32t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let value := mload(headStart)\n                if iszero(eq(value, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0xff)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := value\n                value1 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 32))\n                value2 := /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 64))\n            }\n            function abi_encode_uint256_bytes32(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(headStart, value0)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 32), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ value1)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_encode_address_uint256_array_bytes32_dyn_storage_uint8_bytes32_bytes32(headStart, value0, value1, value3, value4, value5) -> tail\n            {\n                let tail_1 := add(headStart, 192)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, /** @src 57:1178:1194  \"new BagelToken()\" */ 1), 1)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := 32\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, _1), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ value1)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(add(headStart, 64), 192)\n                let pos := tail_1\n                let length := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ sload(/** @src 57:1731:1736  \"PROOF\" */ 0x29)\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(tail_1, length)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                pos := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ headStart, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 224)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0, /** @src 57:1731:1736  \"PROOF\" */ 0x29)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 92038740889592694858267878744606412364501637938221086577620191212259273460396\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    mstore(pos, sload(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ srcPtr, 1)\n                }\n                tail := pos\n                mstore(add(headStart, 96), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value3, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 0xff))\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 128), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ value4)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 160), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ value5)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            /// @ast-id 416 @src 2:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq(var_left, var_right)\n            {\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1))\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ mload(64)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 2:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(226, 0x260a5b15))\n                /// @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\"\n                mstore(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ var_left)\n                mstore(add(/** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 36), var_right)\n                /// @src 2:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ _1, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 57:373:1860  \"contract MerkleAirdropTest is ZkSyncChainChecker, Test {...\" */ 68, /** @src 2:2349:2373  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3) { revert_forward() }\n                if _3 { finalize_allocation_9522(_2) }\n            }\n        }\n        /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 49:\"script/DeployMerkleAirdrop.s.sol\"\n        object \"DeployMerkleAirdrop_44802\" {\n            code {\n                {\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 3:3166:3170  \"true\" */ 0x0c, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ 0x0c), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ not(16711935)), 65537))\n                    sstore(/** @src 49:298:364  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0x0d, 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    sstore(/** @src 49:393:406  \"4 * 25 * 1e18\" */ 0x0e, 0x056bc75e2d63100000)\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    let _2 := datasize(\"DeployMerkleAirdrop_44802_deployed\")\n                    codecopy(_1, dataoffset(\"DeployMerkleAirdrop_44802_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 49:\"script/DeployMerkleAirdrop.s.sol\"\n            object \"DeployMerkleAirdrop_44802_deployed\" {\n                code {\n                    {\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _1 := 0\n                            switch shr(224, calldataload(_1))\n                            case 0x075c6db8 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let ret, ret_1 := fun_deployMerkleAirdrop()\n                                let memPos := mload(64)\n                                return(memPos, sub(abi_encode_contract_MerkleAirdrop_contract_BagelToken(memPos, ret, ret_1), memPos))\n                            }\n                            case 0xc0406226 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                /// @src 49:860:881  \"deployMerkleAirdrop()\"\n                                let expr_component_address, expr_component_address_1 := fun_deployMerkleAirdrop()\n                                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                                let memPos_1 := mload(64)\n                                return(memPos_1, sub(abi_encode_contract_MerkleAirdrop_contract_BagelToken(memPos_1, expr_component_address, expr_component_address_1), memPos_1))\n                            }\n                            case 0xf8ccbf47 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ 0xff)\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, iszero(iszero(value)))\n                                return(memPos_2, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_contract_MerkleAirdrop_contract_BagelToken(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    function finalize_allocation_1020(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value0, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(headStart, 32), value1)\n                    }\n                    /// @ast-id 44788 @src 49:411:783  \"function deployMerkleAirdrop() public returns (MerkleAirdrop, BagelToken) {...\"\n                    function fun_deployMerkleAirdrop() -> var_address, var__address\n                    {\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 49:491:510  \"vm.startBroadcast()\"\n                        if iszero(extcodesize(/** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                        /// @src 49:491:510  \"vm.startBroadcast()\"\n                        {\n                            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                            revert(0, 0)\n                        }\n                        let _2 := 64\n                        /// @src 49:491:510  \"vm.startBroadcast()\"\n                        let _3 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:491:510  \"vm.startBroadcast()\"\n                        mstore(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x7fb5297f))\n                        /// @src 49:491:510  \"vm.startBroadcast()\"\n                        let _4 := 0\n                        let _5 := 4\n                        let _6 := call(gas(), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _3, _5, _3, _4)\n                        if iszero(_6)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 49:491:510  \"vm.startBroadcast()\"\n                        if _6\n                        {\n                            finalize_allocation_1020(_3)\n                            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                            _4 := /** @src 49:491:510  \"vm.startBroadcast()\" */ _4\n                        }\n                        /// @src 49:535:551  \"new BagelToken()\"\n                        let _7 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:535:551  \"new BagelToken()\"\n                        let _8 := datasize(\"BagelToken_45776\")\n                        let _9 := add(_7, _8)\n                        let _10 := 0xffffffffffffffff\n                        if or(gt(_9, _10), lt(_9, _7))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                        }\n                        /// @src 49:535:551  \"new BagelToken()\"\n                        datacopy(_7, dataoffset(\"BagelToken_45776\"), _8)\n                        let expr_44742_address := create(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:535:551  \"new BagelToken()\" */ _7, sub(_9, _7))\n                        if iszero(expr_44742_address)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_1 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_1, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        let _11 := sload(/** @src 49:599:611  \"s_merkleRoot\" */ 0x0d)\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        let _12 := sub(shl(160, 1), 1)\n                        let _13 := and(/** @src 49:620:634  \"address(token)\" */ expr_44742_address, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _12)\n                        /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        let _14 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        let _15 := datasize(\"MerkleAirdrop_46003\")\n                        let _16 := add(_14, _15)\n                        if or(gt(_16, /** @src 49:535:551  \"new BagelToken()\" */ _10), /** @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ lt(_16, _14))\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                            revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                        }\n                        /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        datacopy(_14, dataoffset(\"MerkleAirdrop_46003\"), _15)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(_16, _11)\n                        let _17 := 32\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_16, _17), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _13)\n                        /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        let expr_address := create(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _14, add(sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16, /** @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _14), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _2))\n                        /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                        if iszero(expr_address)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_2 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_2, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 49:653:666  \"token.owner()\"\n                        let _18 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:653:666  \"token.owner()\"\n                        mstore(_18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x8da5cb5b))\n                        /// @src 49:653:666  \"token.owner()\"\n                        let _19 := staticcall(gas(), _13, _18, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 49:653:666  \"token.owner()\" */ _18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17)\n                        /// @src 49:653:666  \"token.owner()\"\n                        if iszero(_19)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_3 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_3, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 49:653:666  \"token.owner()\"\n                        let expr := _4\n                        if _19\n                        {\n                            let _20 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17\n                            /// @src 49:653:666  \"token.owner()\"\n                            if gt(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17, /** @src 49:653:666  \"token.owner()\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 49:653:666  \"token.owner()\" */ add(_18, _20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _18), _17)\n                            {\n                                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                                revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let value := mload(_18)\n                            if iszero(eq(value, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _12)))\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                            /// @src 49:653:666  \"token.owner()\"\n                            expr := value\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _21 := sload(/** @src 49:668:674  \"AMOUNT\" */ 0x0e)\n                        /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                        if iszero(extcodesize(_13))\n                        {\n                            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                            revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                        }\n                        /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                        let _22 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                        mstore(_22, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x40c10f19))\n                        /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                        let _23 := call(gas(), _13, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\" */ _22, sub(abi_encode_address_uint256(add(_22, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5), /** @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\" */ expr, _21), _22), _22, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4)\n                        /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                        if iszero(_23)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_4 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_4, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                        if _23\n                        {\n                            finalize_allocation_1020(_22)\n                            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                            if _4\n                            {\n                                revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _24 := sload(/** @src 49:668:674  \"AMOUNT\" */ 0x0e)\n                        /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                        let _25 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                        mstore(_25, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xa9059cbb))\n                        /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                        let _26 := call(gas(), _13, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ _25, sub(abi_encode_address_uint256(add(_25, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 49:696:712  \"address(airdrop)\" */ expr_address, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _12), /** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ _24), _25), _25, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17)\n                        /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                        if iszero(_26)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_5 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_5, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                        if _26\n                        {\n                            let _27 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17\n                            /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                            if gt(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17, /** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ returndatasize()) { _27 := returndatasize() }\n                            finalize_allocation(_25, _27)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ add(_25, _27), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _25), _17)\n                            {\n                                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                                revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let value_1 := mload(_25)\n                            if iszero(eq(value_1, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ iszero(iszero(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value_1))))\n                            {\n                                revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                        }\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                            revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                        }\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        let _28 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        mstore(_28, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3b756e9b))\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        let _29 := call(gas(), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:727:745  \"vm.stopBroadcast()\" */ _28, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 49:727:745  \"vm.stopBroadcast()\" */ _28, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4)\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        if iszero(_29)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_6 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_6, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 49:727:745  \"vm.stopBroadcast()\"\n                        if _29\n                        {\n                            finalize_allocation_1020(_28)\n                            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                            if _4\n                            {\n                                revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                            }\n                        }\n                        /// @src 49:756:778  \"return(airdrop, token)\"\n                        var_address := expr_address\n                        var__address := expr_44742_address\n                    }\n                }\n                /// @use-src 30:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 32:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 34:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 39:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 55:\"src/BagelToken.sol\"\n                object \"BagelToken_45776\" {\n                    code {\n                        {\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(64, memoryguard(0x80))\n                            if callvalue() { revert(0, 0) }\n                            let memPtr := allocate_memory_array_string()\n                            let _1 := 32\n                            mstore(add(memPtr, _1), \"Bagel\")\n                            let memPtr_1 := allocate_memory_array_string()\n                            mstore(add(memPtr_1, _1), \"BAGEL\")\n                            let newLen := mload(memPtr)\n                            let _2 := sub(shl(64, 1), 1)\n                            if gt(newLen, _2)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            /// @src 33:1962:1975  \"_name = name_\"\n                            let _3 := 0x03\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let _4 := sload(/** @src 33:1962:1975  \"_name = name_\" */ _3)\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let length := /** @src -1:-1:-1 */ 0\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let _5 := 1\n                            length := shr(_5, _4)\n                            let outOfPlaceEncoding := and(_4, _5)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            if eq(outOfPlaceEncoding, lt(length, _1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            let _6 := 31\n                            if gt(length, _6)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1962:1975  \"_name = name_\" */ _3)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                                let deleteStart := add(data, shr(5, add(newLen, _6)))\n                                if lt(newLen, _1) { deleteStart := data }\n                                let _7 := add(data, shr(5, add(length, _6)))\n                                let start := deleteStart\n                                for { } lt(start, _7) { start := add(start, _5) }\n                                {\n                                    sstore(start, /** @src -1:-1:-1 */ 0)\n                                }\n                            }\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let srcOffset := /** @src -1:-1:-1 */ 0\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            srcOffset := _1\n                            switch gt(newLen, _6)\n                            case 1 {\n                                let loopEnd := and(newLen, not(31))\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1962:1975  \"_name = name_\" */ _3)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                for { } lt(i, loopEnd) { i := add(i, _1) }\n                                {\n                                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                                    dstPtr := add(dstPtr, _5)\n                                    srcOffset := add(srcOffset, _1)\n                                }\n                                if lt(loopEnd, newLen)\n                                {\n                                    let lastValue := mload(add(memPtr, srcOffset))\n                                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen), 248), not(0)))))\n                                }\n                                sstore(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ add(shl(_5, newLen), _5))\n                            }\n                            default {\n                                let value := /** @src -1:-1:-1 */ 0\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                if newLen\n                                {\n                                    value := mload(add(memPtr, srcOffset))\n                                }\n                                sstore(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(value, not(shr(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen), not(0)))), shl(_5, newLen)))\n                            }\n                            let newLen_1 := mload(memPtr_1)\n                            if gt(newLen_1, _2)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ 0x04, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            /// @src 33:1985:2002  \"_symbol = symbol_\"\n                            let _8 := 0x04\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let _9 := sload(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let length_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            length_1 := shr(_5, _9)\n                            let outOfPlaceEncoding_1 := and(_9, _5)\n                            if iszero(outOfPlaceEncoding_1)\n                            {\n                                length_1 := and(length_1, 0x7f)\n                            }\n                            if eq(outOfPlaceEncoding_1, lt(length_1, _1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                            }\n                            if gt(length_1, _6)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _6)))\n                                if lt(newLen_1, _1) { deleteStart_1 := data_1 }\n                                let _10 := add(data_1, shr(5, add(length_1, _6)))\n                                let start_1 := deleteStart_1\n                                for { } lt(start_1, _10) { start_1 := add(start_1, _5) }\n                                {\n                                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                                }\n                            }\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            srcOffset_1 := _1\n                            switch gt(newLen_1, _6)\n                            case 1 {\n                                let loopEnd_1 := and(newLen_1, not(31))\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                                let i_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _1) }\n                                {\n                                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                                    dstPtr_1 := add(dstPtr_1, _5)\n                                    srcOffset_1 := add(srcOffset_1, _1)\n                                }\n                                if lt(loopEnd_1, newLen_1)\n                                {\n                                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen_1), 248), not(0)))))\n                                }\n                                sstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ add(shl(_5, newLen_1), _5))\n                            }\n                            default {\n                                let value_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                if newLen_1\n                                {\n                                    value_1 := mload(add(memPtr_1, srcOffset_1))\n                                }\n                                sstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen_1), not(0)))), shl(_5, newLen_1)))\n                            }\n                            /// @src 30:1269:1364  \"if (initialOwner == address(0)) {...\"\n                            if /** @src 30:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 55:284:294  \"msg.sender\" */ caller())\n                            /// @src 30:1269:1364  \"if (initialOwner == address(0)) {...\"\n                            {\n                                /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                let _11 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                                /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                mstore(_11, shl(224, 0x1e4fbdf7))\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(/** @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_11, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8), /** @src -1:-1:-1 */ 0)\n                                /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                revert(_11, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                            }\n                            let _12 := sload(5)\n                            sstore(5, or(and(_12, not(sub(shl(160, 1), 1))), /** @src 55:284:294  \"msg.sender\" */ caller()))\n                            /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            let _13 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_12, sub(shl(160, 1), 1)), /** @src 55:284:294  \"msg.sender\" */ caller())\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            let _14 := datasize(\"BagelToken_45776_deployed\")\n                            codecopy(_13, dataoffset(\"BagelToken_45776_deployed\"), _14)\n                            return(_13, _14)\n                        }\n                        function allocate_memory_array_string() -> memPtr\n                        {\n                            let memPtr_1 := mload(64)\n                            let newFreePtr := add(memPtr_1, 64)\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                            }\n                            mstore(64, newFreePtr)\n                            memPtr := memPtr_1\n                            mstore(memPtr_1, 5)\n                        }\n                    }\n                    /// @use-src 30:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 39:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 55:\"src/BagelToken.sol\"\n                    object \"BagelToken_45776_deployed\" {\n                        code {\n                            {\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _1 := memoryguard(0x80)\n                                let _2 := 64\n                                mstore(_2, _1)\n                                let _3 := 4\n                                if iszero(lt(calldatasize(), _3))\n                                {\n                                    let _4 := 0\n                                    switch shr(224, calldataload(_4))\n                                    case 0x06fdde03 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let ret := _4\n                                        let slotValue := sload(/** @src 33:2151:2156  \"_name\" */ 0x03)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let length := _4\n                                        let _5 := 1\n                                        length := shr(_5, slotValue)\n                                        let outOfPlaceEncoding := and(slotValue, _5)\n                                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                        let _6 := 32\n                                        if eq(outOfPlaceEncoding, lt(length, _6))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x22)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_1, length)\n                                        switch outOfPlaceEncoding\n                                        case 0 {\n                                            mstore(add(_1, _6), and(slotValue, not(255)))\n                                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                        }\n                                        case 1 {\n                                            mstore(_4, /** @src 33:2151:2156  \"_name\" */ 0x03)\n                                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                            let i := _4\n                                            for { } lt(i, length) { i := add(i, _6) }\n                                            {\n                                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                                dataPos := add(dataPos, _5)\n                                            }\n                                            ret := add(add(_1, i), _6)\n                                        }\n                                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr)\n                                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                                    }\n                                    case 0x095ea7b3 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0 := abi_decode_address()\n                                        let _7 := calldataload(36)\n                                        /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                        if /** @src 33:10061:10080  \"owner == address(0)\" */ iszero(/** @src 39:735:745  \"msg.sender\" */ caller())\n                                        /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                        {\n                                            /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                            let _8 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                            mstore(_8, shl(224, 0xe602df05))\n                                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                            mstore(/** @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                            /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                            revert(_8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        let _9 := and(/** @src 33:10159:10180  \"spender == address(0)\" */ value0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                        if /** @src 33:10159:10180  \"spender == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _9)\n                                        /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                        {\n                                            /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                            let _10 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                            mstore(_10, shl(225, 0x4a1406b1))\n                                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                            mstore(/** @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                            /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                            revert(_10, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        mstore(0x20, /** @src 33:9105:9109  \"true\" */ 0x01)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let _11 := keccak256(_4, _2)\n                                        mstore(_4, _9)\n                                        mstore(0x20, _11)\n                                        sstore(keccak256(_4, _2), _7)\n                                        /// @src 33:10333:10364  \"Approval(owner, spender, value)\"\n                                        let _12 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        mstore(_12, _7)\n                                        /// @src 33:10333:10364  \"Approval(owner, spender, value)\"\n                                        log3(_12, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let memPos := mload(_2)\n                                        mstore(memPos, /** @src 33:9105:9109  \"true\" */ 0x01)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        return(memPos, 0x20)\n                                    }\n                                    case 0x18160ddd {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let _13 := sload(/** @src 33:3222:3234  \"_totalSupply\" */ 0x02)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let memPos_1 := mload(_2)\n                                        mstore(memPos_1, _13)\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x23b872dd {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                        let value0_1 := abi_decode_address()\n                                        let value1 := abi_decode_address_4059()\n                                        let value := calldataload(68)\n                                        let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                        mstore(_4, _14)\n                                        mstore(32, 1)\n                                        let _15 := keccak256(_4, _2)\n                                        mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        mstore(32, _15)\n                                        let _16 := sload(keccak256(_4, _2))\n                                        /// @src 33:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                        if /** @src 33:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 33:10848:10865  \"type(uint256).max\" */ not(0)))\n                                        /// @src 33:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                        {\n                                            /// @src 33:10881:11011  \"if (currentAllowance < value) {...\"\n                                            if /** @src 33:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                            /// @src 33:10881:11011  \"if (currentAllowance < value) {...\"\n                                            {\n                                                /// @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                let _17 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                                /// @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                mstore(_17, shl(225, 0x7dc7a0d9))\n                                                revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), /** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                            }\n                                            /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                            if /** @src 33:10061:10080  \"owner == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _14)\n                                            /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                            {\n                                                /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                let _18 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                                /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                mstore(_18, shl(224, 0xe602df05))\n                                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                                mstore(/** @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                                /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                revert(_18, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                            }\n                                            /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                            if /** @src 33:10159:10180  \"spender == address(0)\" */ iszero(/** @src 39:735:745  \"msg.sender\" */ caller())\n                                            /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                            {\n                                                /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                let _19 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                                /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                mstore(_19, shl(225, 0x4a1406b1))\n                                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                                mstore(/** @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                                /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                revert(_19, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                            }\n                                            mstore(_4, _14)\n                                            mstore(32, 1)\n                                            let _20 := keccak256(_4, _2)\n                                            mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                            mstore(32, _20)\n                                            sstore(keccak256(_4, _2), sub(/** @src 33:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                        }\n                                        /// @src 33:5249:5254  \"value\"\n                                        fun_transfer(value0_1, value1, value)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let memPos_2 := mload(_2)\n                                        mstore(memPos_2, 1)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x313ce567 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPos_3 := mload(_2)\n                                        mstore(memPos_3, /** @src 33:3075:3077  \"18\" */ 0x12)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x40c10f19 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_2 := abi_decode_address()\n                                        let value_1 := calldataload(36)\n                                        /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let _21 := and(/** @src 33:7791:7812  \"account == address(0)\" */ value0_2, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 33:7787:7878  \"if (account == address(0)) {...\"\n                                        if /** @src 33:7791:7812  \"account == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _21)\n                                        /// @src 33:7787:7878  \"if (account == address(0)) {...\"\n                                        {\n                                            /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                            let _22 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                            mstore(_22, shl(224, 0xec442f05))\n                                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                            mstore(/** @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                            /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                            revert(_22, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        let _23 := sload(/** @src 33:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let sum := add(_23, value_1)\n                                        if gt(_23, sum)\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x11)\n                                            revert(_4, 36)\n                                        }\n                                        sstore(/** @src 33:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sum)\n                                        mstore(_4, _21)\n                                        mstore(0x20, _4)\n                                        let dataSlot := keccak256(_4, _2)\n                                        sstore(dataSlot, add(sload(/** @src 33:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ value_1))\n                                        /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                        let _24 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        mstore(_24, value_1)\n                                        /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                        log3(_24, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        return(_4, _4)\n                                    }\n                                    case 0x70a08231 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, _4)\n                                        let _25 := sload(keccak256(_4, _2))\n                                        let memPos_4 := mload(_2)\n                                        mstore(memPos_4, _25)\n                                        return(memPos_4, 32)\n                                    }\n                                    case 0x715018a6 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let _26 := sload(/** @src 30:3004:3010  \"_owner\" */ 0x05)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        sstore(/** @src 30:3004:3010  \"_owner\" */ 0x05, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_26, shl(160, 0xffffffffffffffffffffffff)))\n                                        /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                        log3(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, _4, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_26, sub(shl(160, 1), 1)), _4)\n                                        return(_4, _4)\n                                    }\n                                    case 0x8da5cb5b {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let value_2 := and(sload(/** @src 30:1710:1716  \"_owner\" */ 0x05), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                        let memPos_5 := mload(_2)\n                                        mstore(memPos_5, value_2)\n                                        return(memPos_5, 32)\n                                    }\n                                    case 0x95d89b41 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPtr := mload(_2)\n                                        let ret_1 := _4\n                                        let slotValue_1 := sload(_3)\n                                        let length_1 := _4\n                                        let _27 := 1\n                                        length_1 := shr(_27, slotValue_1)\n                                        let outOfPlaceEncoding_1 := and(slotValue_1, _27)\n                                        if iszero(outOfPlaceEncoding_1)\n                                        {\n                                            length_1 := and(length_1, 0x7f)\n                                        }\n                                        let _28 := 32\n                                        if eq(outOfPlaceEncoding_1, lt(length_1, _28))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x22)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(memPtr, length_1)\n                                        switch outOfPlaceEncoding_1\n                                        case 0 {\n                                            mstore(add(memPtr, _28), and(slotValue_1, not(255)))\n                                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _28)\n                                        }\n                                        case 1 {\n                                            mstore(_4, _3)\n                                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                            let i_1 := _4\n                                            for { } lt(i_1, length_1) { i_1 := add(i_1, _28) }\n                                            {\n                                                mstore(add(add(memPtr, i_1), _28), sload(dataPos_1))\n                                                dataPos_1 := add(dataPos_1, _27)\n                                            }\n                                            ret_1 := add(add(memPtr, i_1), _28)\n                                        }\n                                        let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr_1)\n                                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                                    }\n                                    case 0xa9059cbb {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_3 := abi_decode_address()\n                                        /// @src 33:3754:3759  \"value\"\n                                        fun_transfer(/** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:3754:3759  \"value\" */ value0_3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ calldataload(36))\n                                        let memPos_6 := mload(_2)\n                                        mstore(memPos_6, 1)\n                                        return(memPos_6, 32)\n                                    }\n                                    case 0xdd62ed3e {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_4 := abi_decode_address()\n                                        let value1_1 := abi_decode_address_4059()\n                                        let _29 := sub(shl(160, 1), 1)\n                                        mstore(_4, and(value0_4, _29))\n                                        mstore(32, /** @src 33:3952:3963  \"_allowances\" */ 0x01)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let _30 := keccak256(_4, _2)\n                                        mstore(_4, and(value1_1, _29))\n                                        mstore(32, _30)\n                                        let _31 := sload(keccak256(_4, _2))\n                                        let memPos_7 := mload(_2)\n                                        mstore(memPos_7, _31)\n                                        return(memPos_7, 32)\n                                    }\n                                    case 0xf2fde38b {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                        let value0_5 := abi_decode_address()\n                                        /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        let _32 := sub(shl(160, 1), 1)\n                                        let _33 := and(/** @src 30:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _32)\n                                        /// @src 30:2623:2714  \"if (newOwner == address(0)) {...\"\n                                        if /** @src 30:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _33)\n                                        /// @src 30:2623:2714  \"if (newOwner == address(0)) {...\"\n                                        {\n                                            /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            let _34 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                            /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            mstore(_34, shl(224, 0x1e4fbdf7))\n                                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                            mstore(/** @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_34, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                            /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            revert(_34, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                        }\n                                        let _35 := sload(/** @src 30:3004:3010  \"_owner\" */ 0x05)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        sstore(/** @src 30:3004:3010  \"_owner\" */ 0x05, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(_35, shl(160, 0xffffffffffffffffffffffff)), _33))\n                                        /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                        log3(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, _4, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_35, _32), /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _33)\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        return(_4, _4)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_encode_string(headStart, value0) -> tail\n                            {\n                                let _1 := 32\n                                mstore(headStart, _1)\n                                let length := mload(value0)\n                                mstore(add(headStart, _1), length)\n                                let i := 0\n                                for { } lt(i, length) { i := add(i, _1) }\n                                {\n                                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                                }\n                                mstore(add(add(headStart, length), 64), 0)\n                                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_address_4059() -> value\n                            {\n                                value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            /// @ast-id 40321 @src 30:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                            function fun_checkOwner()\n                            {\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let value := and(sload(/** @src 30:1710:1716  \"_owner\" */ 0x05), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 30:1851:1952  \"if (owner() != _msgSender()) {...\"\n                                if /** @src 30:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ value, /** @src 39:735:745  \"msg.sender\" */ caller()))\n                                /// @src 30:1851:1952  \"if (owner() != _msgSender()) {...\"\n                                {\n                                    /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    let _1 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                                    /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    mstore(_1, shl(224, 0x118cdaa7))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 39:735:745  \"msg.sender\" */ caller())\n                                    /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    revert(_1, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                            }\n                            /// @ast-id 40791 @src 33:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                            function fun_transfer(var_from, var_to, var_value)\n                            {\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _1 := sub(shl(160, 1), 1)\n                                let _2 := and(/** @src 33:5739:5757  \"from == address(0)\" */ var_from, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                                /// @src 33:5735:5821  \"if (from == address(0)) {...\"\n                                if /** @src 33:5739:5757  \"from == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                                /// @src 33:5735:5821  \"if (from == address(0)) {...\"\n                                {\n                                    /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                    let _3 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                                    /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_3, shl(225, 0x4b637e8f))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 33:5755:5756  \"0\" */ 0x00)\n                                    /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                    revert(_3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _4 := and(/** @src 33:5834:5850  \"to == address(0)\" */ var_to, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                                /// @src 33:5830:5916  \"if (to == address(0)) {...\"\n                                if /** @src 33:5834:5850  \"to == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4)\n                                /// @src 33:5830:5916  \"if (to == address(0)) {...\"\n                                {\n                                    /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                    let _5 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                                    /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_5, /** @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 33:5755:5756  \"0\" */ 0x00)\n                                    /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_5, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                /// @src 33:6356:6896  \"if (from == address(0)) {...\"\n                                let _6 := 0\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                                mstore(0x20, /** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _7 := sload(keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40))\n                                /// @src 33:6599:6714  \"if (fromBalance < value) {...\"\n                                if /** @src 33:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                                /// @src 33:6599:6714  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 33:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _8 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(0x40)\n                                    /// @src 33:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_8, shl(226, 0x391434e3))\n                                    revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                                }\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                                mstore(0x20, /** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                sstore(keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40), sub(/** @src 33:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4)\n                                let dataSlot := keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40)\n                                sstore(dataSlot, add(sload(/** @src 33:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ var_value))\n                                /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                let _9 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(0x40)\n                                mstore(_9, var_value)\n                                /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_9, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                            }\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                                mstore(add(headStart, 64), value2)\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000814000a\"\n                    }\n                }\n                /// @use-src 31:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 41:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 56:\"src/MerkleAirdrop.sol\"\n                object \"MerkleAirdrop_46003\" {\n                    code {\n                        {\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let _1 := memoryguard(0x01a0)\n                            if callvalue() { revert(0, 0) }\n                            let programSize := datasize(\"MerkleAirdrop_46003\")\n                            let argSize := sub(codesize(), programSize)\n                            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                            let _2 := sub(shl(64, 1), 1)\n                            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            let _3 := 64\n                            mstore(_3, newFreePtr)\n                            codecopy(_1, programSize, argSize)\n                            if slt(sub(add(_1, argSize), _1), _3)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let value := mload(_1)\n                            let value_1 := mload(add(_1, 32))\n                            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let memPtr := mload(_3)\n                            finalize_allocation(memPtr)\n                            mstore(memPtr, 13)\n                            let _4 := add(memPtr, 32)\n                            mstore(_4, \"MerkleAirdrop\")\n                            let memPtr_1 := mload(_3)\n                            finalize_allocation(memPtr_1)\n                            mstore(memPtr_1, 1)\n                            let _5 := add(memPtr_1, 32)\n                            mstore(_5, \"1\")\n                            /// @src 44:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                            let _6 := fun_toShortStringWithFallback(memPtr)\n                            /// @src 44:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                            let _7 := 288\n                            mstore(_7, /** @src 44:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _6)\n                            /// @src 44:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                            let _8 := fun_toShortStringWithFallback_2443(memPtr_1)\n                            /// @src 44:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                            let _9 := 320\n                            mstore(_9, /** @src 44:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _8)\n                            /// @src 44:3542:3564  \"keccak256(bytes(name))\"\n                            let _10 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, mload(/** @src 44:3542:3564  \"keccak256(bytes(name))\" */ memPtr))\n                            /// @src 44:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                            mstore(224, /** @src 44:3542:3564  \"keccak256(bytes(name))\" */ _10)\n                            /// @src 44:3591:3616  \"keccak256(bytes(version))\"\n                            let _11 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5, mload(/** @src 44:3591:3616  \"keccak256(bytes(version))\" */ memPtr_1))\n                            /// @src 44:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                            let _12 := 256\n                            mstore(_12, /** @src 44:3591:3616  \"keccak256(bytes(version))\" */ _11)\n                            /// @src 44:3627:3657  \"_cachedChainId = block.chainid\"\n                            mstore(160, /** @src 44:3644:3657  \"block.chainid\" */ chainid())\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_3)\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _13 := add(expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 32)\n                            /// @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                            mstore(_13, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3), /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _10)\n                            mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _11)\n                            mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 44:3644:3657  \"block.chainid\" */ chainid())\n                            /// @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                            mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 44:4278:4282  \"this\" */ address())\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let newFreePtr_1 := add(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(_3, newFreePtr_1)\n                            /// @src 44:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _13, mload(/** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                            /// @src 44:3725:3752  \"_cachedThis = address(this)\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 44:4278:4282  \"this\" */ address())\n                            /// @src 56:1113:1139  \"i_merkleRoot = _merkleRoot\"\n                            let _14 := 352\n                            mstore(_14, value)\n                            /// @src 56:1149:1179  \"i_airdropToken = _airdropToken\"\n                            let _15 := 384\n                            mstore(_15, value_1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let _16 := datasize(\"MerkleAirdrop_46003_deployed\")\n                            codecopy(newFreePtr_1, dataoffset(\"MerkleAirdrop_46003_deployed\"), _16)\n                            setimmutable(newFreePtr_1, \"42725\", mload(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"42727\", mload(/** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"42729\", mload(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"42731\", mload(/** @src 44:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"42733\", mload(/** @src 44:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _12))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"42736\", mload(/** @src 44:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _7))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"42739\", mload(/** @src 44:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _9))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"45804\", mload(/** @src 56:1113:1139  \"i_merkleRoot = _merkleRoot\" */ _14))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            setimmutable(newFreePtr_1, \"45807\", mload(/** @src 56:1149:1179  \"i_airdropToken = _airdropToken\" */ _15))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            return(newFreePtr_1, _16)\n                        }\n                        function finalize_allocation(memPtr)\n                        {\n                            let newFreePtr := add(memPtr, 64)\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        /// @ast-id 41932 @src 40:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                        function fun_toShortStringWithFallback(var_value_mpos) -> var\n                        {\n                            /// @src 40:3037:3056  \"bytes(value).length\"\n                            let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                            /// @src 40:3059:3061  \"32\"\n                            let _1 := 0x20\n                            /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            switch /** @src 40:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 40:3059:3061  \"32\" */ _1)\n                            case /** @src 40:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                if gt(expr, sub(shl(64, 1), 1))\n                                {\n                                    mstore(/** @src 44:3432:3445  \"_nameFallback\" */ 0x00, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src 44:3432:3445  \"_nameFallback\" */ 0x00, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                                }\n                                /// @src 44:3432:3445  \"_nameFallback\"\n                                let _2 := 0x00\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let _3 := sload(/** @src 44:3432:3445  \"_nameFallback\" */ _2)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let length := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let _4 := 1\n                                length := shr(_4, _3)\n                                let outOfPlaceEncoding := and(_3, _4)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                if eq(outOfPlaceEncoding, lt(length, /** @src 40:3059:3061  \"32\" */ _1))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                {\n                                    mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                                }\n                                if gt(length, 31)\n                                {\n                                    mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, _2)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let data := keccak256(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 40:3059:3061  \"32\" */ _1)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let _5 := add(data, shr(5, add(length, 31)))\n                                    let start := add(data, shr(5, add(expr, 31)))\n                                    for { } lt(start, _5) { start := add(start, _4) }\n                                    {\n                                        sstore(start, /** @src 44:3432:3445  \"_nameFallback\" */ _2)\n                                    }\n                                }\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let srcOffset := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                srcOffset := /** @src 40:3059:3061  \"32\" */ _1\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                switch gt(expr, 31)\n                                case 1 {\n                                    let loopEnd := and(expr, not(31))\n                                    mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, _2)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let dstPtr := keccak256(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 40:3059:3061  \"32\" */ _1)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let i := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    for { }\n                                    lt(i, loopEnd)\n                                    {\n                                        i := add(i, /** @src 40:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    {\n                                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                        dstPtr := add(dstPtr, _4)\n                                        srcOffset := add(srcOffset, /** @src 40:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if lt(loopEnd, expr)\n                                    {\n                                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(shl(_4, expr), _4))\n                                }\n                                default {\n                                    let value := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if expr\n                                    {\n                                        value := mload(add(var_value_mpos, srcOffset))\n                                    }\n                                    sstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                                }\n                                /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                var := /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                                /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                leave\n                            }\n                            default /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            {\n                                /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                                if /** @src 40:1840:1856  \"bstr.length > 31\" */ gt(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 40:1854:1856  \"31\" */ 0x1f)\n                                /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                                {\n                                    /// @src 40:1879:1897  \"StringTooLong(str)\"\n                                    let _6 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                    /// @src 40:1879:1897  \"StringTooLong(str)\"\n                                    mstore(_6, shl(224, 0x305a27a9))\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 40:1879:1897  \"StringTooLong(str)\" */ add(_6, 4), /** @src 40:3059:3061  \"32\" */ _1)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let length_1 := mload(var_value_mpos)\n                                    mstore(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36), length_1)\n                                    let i_1 := /** @src 44:3432:3445  \"_nameFallback\" */ 0x00\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    for { }\n                                    lt(i_1, length_1)\n                                    {\n                                        i_1 := add(i_1, /** @src 40:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    {\n                                        mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 40:3059:3061  \"32\" */ _1)))\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_1), 68), /** @src 44:3432:3445  \"_nameFallback\" */ 0x00)\n                                    /// @src 40:1879:1897  \"StringTooLong(str)\"\n                                    revert(_6, add(sub(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(add(length_1, /** @src 40:1854:1856  \"31\" */ 0x1f), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(31))), /** @src 40:1879:1897  \"StringTooLong(str)\" */ _6), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 68))\n                                }\n                                /// @src 40:1957:1970  \"bytes32(bstr)\"\n                                let value_1 := /** @src 44:3432:3445  \"_nameFallback\" */ 0x00\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let length_2 := mload(var_value_mpos)\n                                value_1 := mload(add(var_value_mpos, /** @src 40:3059:3061  \"32\" */ _1))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                if lt(length_2, /** @src 40:3059:3061  \"32\" */ _1)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                {\n                                    value_1 := and(value_1, shl(shl(3, sub(/** @src 40:3059:3061  \"32\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)), not(0)))\n                                }\n                                /// @src 40:3077:3104  \"return toShortString(value)\"\n                                var := /** @src 40:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)\n                                /// @src 40:3077:3104  \"return toShortString(value)\"\n                                leave\n                            }\n                        }\n                        /// @ast-id 41932 @src 40:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                        function fun_toShortStringWithFallback_2443(var_value_mpos) -> var\n                        {\n                            /// @src 40:3037:3056  \"bytes(value).length\"\n                            let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                            /// @src 40:3059:3061  \"32\"\n                            let _1 := 0x20\n                            /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            switch /** @src 40:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 40:3059:3061  \"32\" */ _1)\n                            case /** @src 40:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                if gt(expr, sub(shl(64, 1), 1))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                let _2 := 1\n                                let _3 := sload(_2)\n                                let length := /** @src -1:-1:-1 */ 0\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                length := shr(_2, _3)\n                                let outOfPlaceEncoding := and(_3, _2)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                if eq(outOfPlaceEncoding, lt(length, /** @src 40:3059:3061  \"32\" */ _1))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x22)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                                }\n                                if gt(length, 31)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _2)\n                                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:3059:3061  \"32\" */ _1)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let _4 := add(data, shr(5, add(length, 31)))\n                                    let start := add(data, shr(5, add(expr, 31)))\n                                    for { } lt(start, _4) { start := add(start, _2) }\n                                    {\n                                        sstore(start, /** @src -1:-1:-1 */ 0)\n                                    }\n                                }\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let srcOffset := /** @src -1:-1:-1 */ 0\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                srcOffset := /** @src 40:3059:3061  \"32\" */ _1\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                switch gt(expr, 31)\n                                case 1 {\n                                    let loopEnd := and(expr, not(31))\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _2)\n                                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:3059:3061  \"32\" */ _1)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let i := /** @src -1:-1:-1 */ 0\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    for { }\n                                    lt(i, loopEnd)\n                                    {\n                                        i := add(i, /** @src 40:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    {\n                                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                        dstPtr := add(dstPtr, _2)\n                                        srcOffset := add(srcOffset, /** @src 40:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if lt(loopEnd, expr)\n                                    {\n                                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                                    }\n                                    sstore(_2, add(shl(_2, expr), _2))\n                                }\n                                default {\n                                    let value := /** @src -1:-1:-1 */ 0\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if expr\n                                    {\n                                        value := mload(add(var_value_mpos, srcOffset))\n                                    }\n                                    sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_2, expr)))\n                                }\n                                /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                var := /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                                /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                                leave\n                            }\n                            default /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                            {\n                                /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                                if /** @src 40:1840:1856  \"bstr.length > 31\" */ gt(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 40:1854:1856  \"31\" */ 0x1f)\n                                /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                                {\n                                    /// @src 40:1879:1897  \"StringTooLong(str)\"\n                                    let _5 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                    /// @src 40:1879:1897  \"StringTooLong(str)\"\n                                    mstore(_5, shl(224, 0x305a27a9))\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 40:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 40:3059:3061  \"32\" */ _1)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let length_1 := mload(var_value_mpos)\n                                    mstore(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36), length_1)\n                                    let i_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    for { }\n                                    lt(i_1, length_1)\n                                    {\n                                        i_1 := add(i_1, /** @src 40:3059:3061  \"32\" */ _1)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    {\n                                        mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 40:3059:3061  \"32\" */ _1)))\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                                    /// @src 40:1879:1897  \"StringTooLong(str)\"\n                                    revert(_5, add(sub(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(add(length_1, /** @src 40:1854:1856  \"31\" */ 0x1f), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(31))), /** @src 40:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 68))\n                                }\n                                /// @src 40:1957:1970  \"bytes32(bstr)\"\n                                let value_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let length_2 := mload(var_value_mpos)\n                                value_1 := mload(add(var_value_mpos, /** @src 40:3059:3061  \"32\" */ _1))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                if lt(length_2, /** @src 40:3059:3061  \"32\" */ _1)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                {\n                                    value_1 := and(value_1, shl(shl(3, sub(/** @src 40:3059:3061  \"32\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)), not(0)))\n                                }\n                                /// @src 40:3077:3104  \"return toShortString(value)\"\n                                var := /** @src 40:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)\n                                /// @src 40:3077:3104  \"return toShortString(value)\"\n                                leave\n                            }\n                        }\n                    }\n                    /// @use-src 37:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 38:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 45:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 46:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 56:\"src/MerkleAirdrop.sol\"\n                    object \"MerkleAirdrop_46003_deployed\" {\n                        code {\n                            {\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let _1 := memoryguard(0x80)\n                                let _2 := 64\n                                mstore(_2, _1)\n                                let _3 := 4\n                                if iszero(lt(calldatasize(), _3))\n                                {\n                                    let _4 := 0\n                                    switch shr(224, calldataload(_4))\n                                    case 0x4497a169 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 192) { revert(_4, _4) }\n                                        let value0 := abi_decode_address()\n                                        let _5 := 36\n                                        let value := calldataload(_5)\n                                        let offset := calldataload(68)\n                                        let _6 := 0xffffffffffffffff\n                                        if gt(offset, _6) { revert(_4, _4) }\n                                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                        let length := calldataload(add(_3, offset))\n                                        if gt(length, _6) { revert(_4, _4) }\n                                        let _7 := 5\n                                        let _8 := shl(_7, length)\n                                        let _9 := add(add(offset, _8), _5)\n                                        if gt(_9, calldatasize()) { revert(_4, _4) }\n                                        let value_1 := calldataload(100)\n                                        if iszero(eq(value_1, and(value_1, 0xff))) { revert(_4, _4) }\n                                        let _10 := sub(shl(160, 1), 1)\n                                        let _11 := and(value0, _10)\n                                        mstore(_4, _11)\n                                        let _12 := 32\n                                        mstore(_12, /** @src 56:1329:1341  \"s_hasClaimed\" */ 0x03)\n                                        /// @src 56:1325:1391  \"if (s_hasClaimed[_account]) revert MerkleAirdrop__AlreadyClaimed()\"\n                                        if /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                                        /// @src 56:1325:1391  \"if (s_hasClaimed[_account]) revert MerkleAirdrop__AlreadyClaimed()\"\n                                        {\n                                            /// @src 56:1360:1391  \"MerkleAirdrop__AlreadyClaimed()\"\n                                            mstore(_1, shl(224, 0x1ac2170b))\n                                            revert(_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                        }\n                                        /// @src 56:2465:2498  \"ECDSA.tryRecover(digest, v, r, s)\"\n                                        let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 56:1434:1467  \"getMessageHash(_account, _amount)\" */ fun_getMessageHash(value0, value), /** @src 56:2465:2498  \"ECDSA.tryRecover(digest, v, r, s)\" */ value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ calldataload(132), calldataload(164))\n                                        /// @src 56:1401:1519  \"if (!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)) revert MerkleAirdrop__InvalidSignature()\"\n                                        if /** @src 56:1405:1477  \"!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)\" */ iszero(/** @src 56:2515:2538  \"actualSigner == account\" */ eq(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:2515:2538  \"actualSigner == account\" */ expr_component, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _10), _11))\n                                        /// @src 56:1401:1519  \"if (!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)) revert MerkleAirdrop__InvalidSignature()\"\n                                        {\n                                            /// @src 56:1486:1519  \"MerkleAirdrop__InvalidSignature()\"\n                                            let _13 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                            /// @src 56:1486:1519  \"MerkleAirdrop__InvalidSignature()\"\n                                            mstore(_13, shl(224, 0xab8b8565))\n                                            revert(_13, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                        }\n                                        /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                        let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                        /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                        let _14 := add(expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12)\n                                        /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                        let _15 := sub(abi_encode_address_uint256(_14, value0, value), expr_mpos)\n                                        let _16 := not(31)\n                                        mstore(expr_mpos, add(_15, _16))\n                                        finalize_allocation(expr_mpos, _15)\n                                        /// @src 56:1567:1607  \"keccak256(abi.encode(_account, _amount))\"\n                                        let _17 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _14, mload(/** @src 56:1567:1607  \"keccak256(abi.encode(_account, _amount))\" */ expr_mpos))\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        let outPtr := mload(_2)\n                                        let _18 := add(outPtr, _12)\n                                        mstore(_18, _17)\n                                        mstore(outPtr, _12)\n                                        finalize_allocation_9850(outPtr)\n                                        /// @src 56:1544:1609  \"keccak256(bytes.concat(keccak256(abi.encode(_account, _amount))))\"\n                                        let _19 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _18, mload(/** @src 56:1544:1609  \"keccak256(bytes.concat(keccak256(abi.encode(_account, _amount))))\" */ outPtr))\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        let memPtr := mload(_2)\n                                        finalize_allocation(memPtr, add(_8, _12))\n                                        let dst := memPtr\n                                        mstore(memPtr, length)\n                                        dst := add(memPtr, _12)\n                                        let src := add(offset, _5)\n                                        for { } lt(src, _9) { src := add(src, _12) }\n                                        {\n                                            mstore(dst, calldataload(src))\n                                            dst := add(dst, _12)\n                                        }\n                                        /// @src 45:2069:2096  \"bytes32 computedHash = leaf\"\n                                        let var_computedHash := _19\n                                        /// @src 45:2111:2124  \"uint256 i = 0\"\n                                        let var_i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                        /// @src 45:2106:2222  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                                        for { }\n                                        /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 1\n                                        /// @src 45:2111:2124  \"uint256 i = 0\"\n                                        {\n                                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                            if eq(var_i, not(0))\n                                            {\n                                                mstore(_4, shl(224, 0x4e487b71))\n                                                mstore(_3, 0x11)\n                                                revert(_4, _5)\n                                            }\n                                            /// @src 45:2144:2147  \"i++\"\n                                            var_i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(var_i, 1)\n                                        }\n                                        /// @src 45:2144:2147  \"i++\"\n                                        {\n                                            /// @src 45:2126:2142  \"i < proof.length\"\n                                            if iszero(lt(var_i, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 45:2130:2142  \"proof.length\" */ memPtr)))\n                                            /// @src 45:2126:2142  \"i < proof.length\"\n                                            { break }\n                                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                            let _20 := mload(add(add(memPtr, shl(_7, var_i)), _12))\n                                            /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                            let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                            /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                            switch /** @src 45:9318:9323  \"a < b\" */ lt(var_computedHash, _20)\n                                            case /** @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                                                /// @src 45:9632:9751  \"assembly {...\"\n                                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 45:9632:9751  \"assembly {...\" */ _20)\n                                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12, /** @src 45:9632:9751  \"assembly {...\" */ var_computedHash)\n                                                /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                                expr := /** @src 45:9632:9751  \"assembly {...\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _2)\n                                            }\n                                            default /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                            {\n                                                /// @src 45:9632:9751  \"assembly {...\"\n                                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 45:9632:9751  \"assembly {...\" */ var_computedHash)\n                                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12, /** @src 45:9632:9751  \"assembly {...\" */ _20)\n                                                /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                                expr := /** @src 45:9632:9751  \"assembly {...\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _2)\n                                            }\n                                            /// @src 45:2163:2211  \"computedHash = _hashPair(computedHash, proof[i])\"\n                                            var_computedHash := expr\n                                        }\n                                        /// @src 56:1619:1714  \"if (!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)) revert MerkleAirdrop__InvalidProof()\"\n                                        if /** @src 56:1623:1676  \"!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 45:1379:1412  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, /** @src 56:1657:1669  \"i_merkleRoot\" */ loadimmutable(\"45804\")))\n                                        /// @src 56:1619:1714  \"if (!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)) revert MerkleAirdrop__InvalidProof()\"\n                                        {\n                                            /// @src 56:1685:1714  \"MerkleAirdrop__InvalidProof()\"\n                                            let _21 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                            /// @src 56:1685:1714  \"MerkleAirdrop__InvalidProof()\"\n                                            mstore(_21, shl(226, 0x30f109b7))\n                                            revert(_21, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                        }\n                                        mstore(_4, _11)\n                                        mstore(_12, /** @src 56:1329:1341  \"s_hasClaimed\" */ 0x03)\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        let dataSlot := keccak256(_4, _2)\n                                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                                        /// @src 56:1777:1801  \"Claim(_account, _amount)\"\n                                        let _22 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                        /// @src 56:1777:1801  \"Claim(_account, _amount)\"\n                                        log1(_22, sub(abi_encode_address_uint256(_22, value0, value), _22), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                                        /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                        let expr_mpos_1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                        /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                        let _23 := add(expr_mpos_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12)\n                                        /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                        mstore(_23, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0xa9059cbb))\n                                        /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                        let _24 := sub(abi_encode_address_uint256(add(expr_mpos_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5), /** @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ value0, value), expr_mpos_1)\n                                        mstore(expr_mpos_1, add(_24, /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ _16))\n                                        /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                        finalize_allocation(expr_mpos_1, _24)\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        let _25 := and(/** @src 56:1811:1825  \"i_airdropToken\" */ loadimmutable(\"45807\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _10)\n                                        /// @src 38:3462:3493  \"target.call{value: value}(data)\"\n                                        let expr_component_3 := call(gas(), _25, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 38:3462:3493  \"target.call{value: value}(data)\" */ _23, mload(expr_mpos_1), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _4)\n                                        /// @src 38:3462:3493  \"target.call{value: value}(data)\"\n                                        let data := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                        switch returndatasize()\n                                        case 0 { data := 96 }\n                                        default {\n                                            let _26 := returndatasize()\n                                            if gt(_26, _6)\n                                            {\n                                                mstore(_4, shl(224, 0x4e487b71))\n                                                mstore(_3, 0x41)\n                                                revert(_4, _5)\n                                            }\n                                            let memPtr_1 := mload(_2)\n                                            finalize_allocation(memPtr_1, add(and(add(_26, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ _16), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12))\n                                            mstore(memPtr_1, _26)\n                                            data := memPtr_1\n                                            returndatacopy(add(memPtr_1, _12), _4, returndatasize())\n                                        }\n                                        /// @src 38:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                        let var_mpos := /** @src 38:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_25, expr_component_3, /** @src 38:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                        /// @src 37:4551:4568  \"returndata.length\"\n                                        let expr_1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 37:4551:4568  \"returndata.length\" */ var_mpos)\n                                        /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                        let expr_2 := /** @src 37:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr_1))\n                                        /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                        if expr_2\n                                        {\n                                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                            if slt(sub(/** @src 37:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr_1), var_mpos), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12) { revert(_4, _4) }\n                                            let value_2 := mload(/** @src 37:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12))\n                                            let _27 := iszero(value_2)\n                                            if iszero(eq(value_2, iszero(_27))) { revert(_4, _4) }\n                                            /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                            expr_2 := _27\n                                        }\n                                        /// @src 37:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                        if expr_2\n                                        {\n                                            /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                            let _28 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                            /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                            mstore(_28, shl(224, 0x5274afe7))\n                                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                            mstore(/** @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_28, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3), _25)\n                                            /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                            revert(_28, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5)\n                                        }\n                                        return(_4, _4)\n                                    }\n                                    case 0x49590657 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPos := mload(_2)\n                                        mstore(memPos, /** @src 56:2179:2191  \"i_merkleRoot\" */ loadimmutable(\"45804\"))\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        return(memPos, 32)\n                                    }\n                                    case 0x512c91df {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_1 := abi_decode_address()\n                                        let ret := fun_getMessageHash(value0_1, calldataload(36))\n                                        let memPos_1 := mload(_2)\n                                        mstore(memPos_1, ret)\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x548efba2 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPos_2 := mload(_2)\n                                        mstore(memPos_2, and(/** @src 56:2279:2293  \"i_airdropToken\" */ loadimmutable(\"45807\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x84b0196e {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        /// @src 44:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                        let var_mpos_1 := /** @src 44:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 44:6099:6104  \"_name\" */ loadimmutable(\"42736\"))\n                                        /// @src 44:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                        let var_mpos_2 := /** @src 44:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_6373(/** @src 44:6554:6562  \"_version\" */ loadimmutable(\"42739\"))\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        let memPtr_2 := mload(_2)\n                                        let _29 := 0x20\n                                        let newFreePtr := add(memPtr_2, _29)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_2))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr)\n                                        mstore(memPtr_2, _4)\n                                        let memPos_3 := mload(_2)\n                                        mstore(memPos_3, shl(248, 15))\n                                        mstore(add(memPos_3, _29), 224)\n                                        let tail := abi_encode_string(var_mpos_1, add(memPos_3, 224))\n                                        mstore(add(memPos_3, _2), sub(tail, memPos_3))\n                                        let tail_1 := abi_encode_string(var_mpos_2, tail)\n                                        mstore(add(memPos_3, 96), /** @src 44:5590:5603  \"block.chainid\" */ chainid())\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        mstore(add(memPos_3, 128), /** @src 44:5625:5629  \"this\" */ address())\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        mstore(add(memPos_3, 160), _4)\n                                        mstore(add(memPos_3, 192), sub(tail_1, memPos_3))\n                                        let pos := tail_1\n                                        let length_1 := mload(memPtr_2)\n                                        mstore(tail_1, length_1)\n                                        pos := add(tail_1, _29)\n                                        let srcPtr := newFreePtr\n                                        let i := _4\n                                        for { }\n                                        lt(i, length_1)\n                                        {\n                                            i := add(i, /** @src 44:6584:6600  \"_versionFallback\" */ 0x01)\n                                        }\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        {\n                                            mstore(pos, mload(srcPtr))\n                                            pos := add(pos, _29)\n                                            srcPtr := add(srcPtr, _29)\n                                        }\n                                        return(memPos_3, sub(pos, memPos_3))\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_encode_string(value, pos) -> end\n                            {\n                                let length := mload(value)\n                                mstore(pos, length)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                for { } lt(i, length) { i := add(i, 0x20) }\n                                {\n                                    let _1 := 0x20\n                                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                                }\n                                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                end := add(add(pos, and(add(length, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ not(31))), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x20)\n                            }\n                            function finalize_allocation_9850(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 64)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation(memPtr, size)\n                            {\n                                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ not(31)))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            /// @ast-id 41959 @src 40:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                            function fun_toStringWithFallback(var_value) -> var_mpos\n                            {\n                                /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                switch /** @src 40:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                                case /** @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let memPtr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let ret := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let slotValue := sload(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let length := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let _1 := 1\n                                    length := shr(_1, slotValue)\n                                    let outOfPlaceEncoding := and(slotValue, _1)\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    let _2 := 32\n                                    if eq(outOfPlaceEncoding, lt(length, _2))\n                                    {\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret, shl(224, 0x4e487b71))\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        mstore(4, 0x22)\n                                        revert(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(memPtr, length)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    switch outOfPlaceEncoding\n                                    case 0 {\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(255)))\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                                    }\n                                    case 1 {\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0, 0)\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                                        let i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        for { } lt(i, length) { i := add(i, _2) }\n                                        {\n                                            mstore(add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                            dataPos := add(dataPos, _1)\n                                        }\n                                        ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                                    }\n                                    finalize_allocation(memPtr, sub(ret, memPtr))\n                                    /// @src 40:3623:3635  \"return store\"\n                                    var_mpos := memPtr\n                                    leave\n                                }\n                                default /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                {\n                                    /// @src 40:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                                    let expr := and(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                                    /// @src 40:2702:2771  \"if (result > 31) {...\"\n                                    if /** @src 40:2706:2717  \"result > 31\" */ gt(expr, /** @src 40:2715:2717  \"31\" */ 0x1f)\n                                    /// @src 40:2702:2771  \"if (result > 31) {...\"\n                                    {\n                                        /// @src 40:2740:2760  \"InvalidShortString()\"\n                                        let _3 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                        /// @src 40:2740:2760  \"InvalidShortString()\"\n                                        mstore(_3, shl(226, 0x2cd44ac3))\n                                        revert(_3, 4)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation_9850(memPtr_1)\n                                    /// @src 40:2367:2457  \"assembly {...\"\n                                    mstore(memPtr_1, expr)\n                                    mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr_1, /** @src 40:2311:2313  \"32\" */ 0x20), /** @src 40:2367:2457  \"assembly {...\" */ var_value)\n                                    /// @src 40:3570:3592  \"return toString(value)\"\n                                    var_mpos := memPtr_1\n                                    leave\n                                }\n                            }\n                            /// @ast-id 41959 @src 40:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                            function fun_toStringWithFallback_6373(var_value) -> var_mpos\n                            {\n                                /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                switch /** @src 40:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                                case /** @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let memPtr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let ret := /** @src -1:-1:-1 */ 0\n                                    /// @src 44:6584:6600  \"_versionFallback\"\n                                    let _1 := 0x01\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let slotValue := sload(/** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let length := /** @src -1:-1:-1 */ ret\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    length := shr(/** @src 44:6584:6600  \"_versionFallback\" */ _1, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ slotValue)\n                                    let outOfPlaceEncoding := and(slotValue, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    let _2 := 32\n                                    if eq(outOfPlaceEncoding, lt(length, _2))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ ret, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        mstore(4, 0x22)\n                                        revert(/** @src -1:-1:-1 */ ret, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(memPtr, length)\n                                    /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    switch outOfPlaceEncoding\n                                    case 0 {\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(255)))\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                                    }\n                                    case 1 {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                        let i := /** @src -1:-1:-1 */ 0\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        for { } lt(i, length) { i := add(i, _2) }\n                                        {\n                                            mstore(add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                            dataPos := add(dataPos, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                        }\n                                        /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                        ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                                    }\n                                    finalize_allocation(memPtr, sub(ret, memPtr))\n                                    /// @src 40:3623:3635  \"return store\"\n                                    var_mpos := memPtr\n                                    leave\n                                }\n                                default /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                                {\n                                    /// @src 40:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                                    let expr := and(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                                    /// @src 40:2702:2771  \"if (result > 31) {...\"\n                                    if /** @src 40:2706:2717  \"result > 31\" */ gt(expr, /** @src 40:2715:2717  \"31\" */ 0x1f)\n                                    /// @src 40:2702:2771  \"if (result > 31) {...\"\n                                    {\n                                        /// @src 40:2740:2760  \"InvalidShortString()\"\n                                        let _3 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                        /// @src 40:2740:2760  \"InvalidShortString()\"\n                                        mstore(_3, shl(226, 0x2cd44ac3))\n                                        revert(_3, 4)\n                                    }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation_9850(memPtr_1)\n                                    /// @src 40:2367:2457  \"assembly {...\"\n                                    mstore(memPtr_1, expr)\n                                    mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr_1, /** @src 40:2311:2313  \"32\" */ 0x20), /** @src 40:2367:2457  \"assembly {...\" */ var_value)\n                                    /// @src 40:3570:3592  \"return toString(value)\"\n                                    var_mpos := memPtr_1\n                                    leave\n                                }\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                            {\n                                tail := add(headStart, 64)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                            }\n                            /// @ast-id 41703 @src 38:4625:5207  \"function verifyCallResultFromTarget(...\"\n                            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                            {\n                                /// @src 38:4793:5201  \"if (!success) {...\"\n                                switch /** @src 38:4797:4805  \"!success\" */ iszero(var_success)\n                                case /** @src 38:4793:5201  \"if (!success) {...\" */ 0 {\n                                    /// @src 38:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                    let expr := /** @src 38:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 38:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                    /// @src 38:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                    if expr\n                                    {\n                                        expr := /** @src 38:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 38:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                    }\n                                    /// @src 38:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                    if expr\n                                    {\n                                        /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                        let _1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                        /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                        mstore(_1, shl(224, 0x9996b315))\n                                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                        mstore(/** @src 38:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                        /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                        revert(_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36)\n                                    }\n                                    /// @src 38:5173:5190  \"return returndata\"\n                                    var_mpos := var_returndata_mpos\n                                    leave\n                                }\n                                default /// @src 38:4793:5201  \"if (!success) {...\"\n                                {\n                                    /// @src 38:5870:6253  \"if (returndata.length > 0) {...\"\n                                    switch /** @src 38:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 38:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                    case /** @src 38:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                        /// @src 38:6225:6242  \"FailedInnerCall()\"\n                                        let _2 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                        /// @src 38:6225:6242  \"FailedInnerCall()\"\n                                        mstore(_2, shl(225, 0x0a12f521))\n                                        revert(_2, 4)\n                                    }\n                                    default /// @src 38:5870:6253  \"if (returndata.length > 0) {...\"\n                                    {\n                                        /// @src 38:6046:6188  \"assembly {...\"\n                                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                    }\n                                }\n                            }\n                            /// @ast-id 45955 @src 56:1870:2099  \"function getMessageHash(address _account, uint256 _amount) public view returns (bytes32 digest) {...\"\n                            function fun_getMessageHash(var_account, var_amount) -> var_digest\n                            {\n                                /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                                let _1 := 64\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let memPtr := mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let newFreePtr := add(memPtr, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let _2 := 0xffffffffffffffff\n                                if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ newFreePtr)\n                                let _3 := sub(shl(160, 1), 1)\n                                /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                                mstore(memPtr, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ var_account, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3))\n                                /// @src 56:2039:2089  \"AirdropClaim({account: _account, amount: _amount})\"\n                                let _4 := add(memPtr, 32)\n                                /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                                mstore(_4, var_amount)\n                                /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                                let expr_45950_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                                /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                                let _5 := add(expr_45950_mpos, /** @src 56:2039:2089  \"AirdropClaim({account: _account, amount: _amount})\" */ 32)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(_5, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 0x09802f0ca4ee1104f0a37279d766e5ec79c8f84a93b8691fb36c54ded00e070c)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ add(/** @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\" */ expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ mload(memPtr), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3))\n                                mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ add(/** @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\" */ expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 96), mload(_4))\n                                /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                                mstore(expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 96)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let newFreePtr_1 := add(expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 128)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_45950_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ newFreePtr_1)\n                                /// @src 56:2000:2091  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount})))\"\n                                let _6 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5, mload(/** @src 56:2000:2091  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount})))\" */ expr_45950_mpos))\n                                /// @src 44:5053:5073  \"_domainSeparatorV4()\"\n                                let _7 := fun_domainSeparatorV4()\n                                /// @src 46:3515:3748  \"assembly {...\"\n                                let usr$ptr := mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                                /// @src 46:3515:3748  \"assembly {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _7)\n                                mstore(add(usr$ptr, 0x22), _6)\n                                /// @src 56:1976:2092  \"return _hashTypedDataV4(keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))))\"\n                                var_digest := /** @src 46:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42)\n                            }\n                            /// @ast-id 42827 @src 44:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                            function fun_domainSeparatorV4() -> var\n                            {\n                                /// @src 44:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                                let expr := /** @src 44:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 44:3929:3933  \"this\" */ address(), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 44:3938:3949  \"_cachedThis\" */ loadimmutable(\"42729\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 44:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                                if expr\n                                {\n                                    expr := /** @src 44:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 44:3953:3966  \"block.chainid\" */ chainid(), /** @src 44:3970:3984  \"_cachedChainId\" */ loadimmutable(\"42727\"))\n                                }\n                                /// @src 44:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                                switch expr\n                                case 0 {\n                                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                                    let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                                    let _1 := add(expr_mpos, 0x20)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(_1, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 64), /** @src 44:4226:4237  \"_hashedName\" */ loadimmutable(\"42731\"))\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 44:4239:4253  \"_hashedVersion\" */ loadimmutable(\"42733\"))\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 44:4255:4268  \"block.chainid\" */ chainid())\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 44:3929:3933  \"this\" */ address())\n                                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                                    mstore(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let newFreePtr := add(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    /// @src 44:4060:4090  \"return _buildDomainSeparator()\"\n                                    var := /** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _1, mload(/** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                                    /// @src 44:4060:4090  \"return _buildDomainSeparator()\"\n                                    leave\n                                }\n                                default /// @src 44:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                                {\n                                    /// @src 44:4000:4029  \"return _cachedDomainSeparator\"\n                                    var := /** @src 44:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"42725\")\n                                    /// @src 44:4000:4029  \"return _cachedDomainSeparator\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 42618 @src 43:5140:6670  \"function tryRecover(...\"\n                            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                            {\n                                /// @src 43:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                if /** @src 43:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 43:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                                /// @src 43:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                {\n                                    /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var := /** @src 43:6297:6298  \"0\" */ 0x00\n                                    /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_1 := /** @src 43:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                                    /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_2 := var_s\n                                    leave\n                                }\n                                /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                mstore(_1, var_hash)\n                                mstore(add(_1, 32), and(var_v, 0xff))\n                                mstore(add(_1, 64), var_r)\n                                mstore(add(_1, 96), var_s)\n                                /// @src -1:-1:-1\n                                let _2 := 0\n                                /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                mstore(/** @src -1:-1:-1 */ _2, _2)\n                                /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                if iszero(staticcall(gas(), 1, _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 32))\n                                /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                {\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let pos := mload(64)\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                                /// @src 43:6491:6604  \"if (signer == address(0)) {...\"\n                                if /** @src 43:6495:6515  \"signer == address(0)\" */ iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 43:6495:6515  \"signer == address(0)\" */ _3, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 43:6491:6604  \"if (signer == address(0)) {...\"\n                                {\n                                    /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var := /** @src -1:-1:-1 */ _2\n                                    /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_1 := /** @src 43:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                                    /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_2 := /** @src -1:-1:-1 */ _2\n                                    /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    leave\n                                }\n                                /// @src 43:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var := _3\n                                var_1 := /** @src -1:-1:-1 */ _2\n                                /// @src 43:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var_2 := /** @src -1:-1:-1 */ _2\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000814000a\"\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000814000a\"\n            }\n        }\n        /// @use-src 30:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 32:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 34:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 39:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 55:\"src/BagelToken.sol\"\n        object \"BagelToken_45776\" {\n            code {\n                {\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    let memPtr := allocate_memory_array_string()\n                    let _1 := 32\n                    mstore(add(memPtr, _1), \"Bagel\")\n                    let memPtr_1 := allocate_memory_array_string()\n                    mstore(add(memPtr_1, _1), \"BAGEL\")\n                    let newLen := mload(memPtr)\n                    let _2 := sub(shl(64, 1), 1)\n                    if gt(newLen, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 33:1962:1975  \"_name = name_\"\n                    let _3 := 0x03\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _4 := sload(/** @src 33:1962:1975  \"_name = name_\" */ _3)\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _5 := 1\n                    length := shr(_5, _4)\n                    let outOfPlaceEncoding := and(_4, _5)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    let _6 := 31\n                    if gt(length, _6)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1962:1975  \"_name = name_\" */ _3)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let deleteStart := add(data, shr(5, add(newLen, _6)))\n                        if lt(newLen, _1) { deleteStart := data }\n                        let _7 := add(data, shr(5, add(length, _6)))\n                        let start := deleteStart\n                        for { } lt(start, _7) { start := add(start, _5) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    srcOffset := _1\n                    switch gt(newLen, _6)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1962:1975  \"_name = name_\" */ _3)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _1) }\n                        {\n                            sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                            dstPtr := add(dstPtr, _5)\n                            srcOffset := add(srcOffset, _1)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(memPtr, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ add(shl(_5, newLen), _5))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        if newLen\n                        {\n                            value := mload(add(memPtr, srcOffset))\n                        }\n                        sstore(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(value, not(shr(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen), not(0)))), shl(_5, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr_1)\n                    if gt(newLen_1, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ 0x04, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 33:1985:2002  \"_symbol = symbol_\"\n                    let _8 := 0x04\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _9 := sload(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    length_1 := shr(_5, _9)\n                    let outOfPlaceEncoding_1 := and(_9, _5)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_1, _6)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _6)))\n                        if lt(newLen_1, _1) { deleteStart_1 := data_1 }\n                        let _10 := add(data_1, shr(5, add(length_1, _6)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _10) { start_1 := add(start_1, _5) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    srcOffset_1 := _1\n                    switch gt(newLen_1, _6)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _1) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _5)\n                            srcOffset_1 := add(srcOffset_1, _1)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ add(shl(_5, newLen_1), _5))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr_1, srcOffset_1))\n                        }\n                        sstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen_1), not(0)))), shl(_5, newLen_1)))\n                    }\n                    /// @src 30:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 30:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 55:284:294  \"msg.sender\" */ caller())\n                    /// @src 30:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        let _11 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                        /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_11, shl(224, 0x1e4fbdf7))\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_11, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8), /** @src -1:-1:-1 */ 0)\n                        /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_11, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                    }\n                    let _12 := sload(5)\n                    sstore(5, or(and(_12, not(sub(shl(160, 1), 1))), /** @src 55:284:294  \"msg.sender\" */ caller()))\n                    /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _13 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                    /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_12, sub(shl(160, 1), 1)), /** @src 55:284:294  \"msg.sender\" */ caller())\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _14 := datasize(\"BagelToken_45776_deployed\")\n                    codecopy(_13, dataoffset(\"BagelToken_45776_deployed\"), _14)\n                    return(_13, _14)\n                }\n                function allocate_memory_array_string() -> memPtr\n                {\n                    let memPtr_1 := mload(64)\n                    let newFreePtr := add(memPtr_1, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                    }\n                    mstore(64, newFreePtr)\n                    memPtr := memPtr_1\n                    mstore(memPtr_1, 5)\n                }\n            }\n            /// @use-src 30:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 39:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 55:\"src/BagelToken.sol\"\n            object \"BagelToken_45776_deployed\" {\n                code {\n                    {\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 33:2151:2156  \"_name\" */ 0x03)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(_5, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, _5)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 33:2151:2156  \"_name\" */ 0x03)\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let _7 := calldataload(36)\n                                /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                if /** @src 33:10061:10080  \"owner == address(0)\" */ iszero(/** @src 39:735:745  \"msg.sender\" */ caller())\n                                /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    let _8 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_8, shl(224, 0xe602df05))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _9 := and(/** @src 33:10159:10180  \"spender == address(0)\" */ value0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                if /** @src 33:10159:10180  \"spender == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _9)\n                                /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    let _10 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_10, shl(225, 0x4a1406b1))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_10, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(0x20, /** @src 33:9105:9109  \"true\" */ 0x01)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _11 := keccak256(_4, _2)\n                                mstore(_4, _9)\n                                mstore(0x20, _11)\n                                sstore(keccak256(_4, _2), _7)\n                                /// @src 33:10333:10364  \"Approval(owner, spender, value)\"\n                                let _12 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_12, _7)\n                                /// @src 33:10333:10364  \"Approval(owner, spender, value)\"\n                                log3(_12, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 33:9105:9109  \"true\" */ 0x01)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(memPos, 0x20)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _13 := sload(/** @src 33:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _13)\n                                return(memPos_1, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                let value1 := abi_decode_address_4059()\n                                let value := calldataload(68)\n                                let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                mstore(_4, _14)\n                                mstore(32, 1)\n                                let _15 := keccak256(_4, _2)\n                                mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(32, _15)\n                                let _16 := sload(keccak256(_4, _2))\n                                /// @src 33:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 33:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 33:10848:10865  \"type(uint256).max\" */ not(0)))\n                                /// @src 33:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 33:10881:11011  \"if (currentAllowance < value) {...\"\n                                    if /** @src 33:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                    /// @src 33:10881:11011  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _17 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_17, shl(225, 0x7dc7a0d9))\n                                        revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), /** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                    }\n                                    /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                    if /** @src 33:10061:10080  \"owner == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _14)\n                                    /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        let _18 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_18, shl(224, 0xe602df05))\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        mstore(/** @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                        /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_18, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                    if /** @src 33:10159:10180  \"spender == address(0)\" */ iszero(/** @src 39:735:745  \"msg.sender\" */ caller())\n                                    /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        let _19 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_19, shl(225, 0x4a1406b1))\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        mstore(/** @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                        /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_19, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    mstore(_4, _14)\n                                    mstore(32, 1)\n                                    let _20 := keccak256(_4, _2)\n                                    mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(32, _20)\n                                    sstore(keccak256(_4, _2), sub(/** @src 33:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                }\n                                /// @src 33:5249:5254  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 33:3075:3077  \"18\" */ 0x12)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address()\n                                let value_1 := calldataload(36)\n                                /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _21 := and(/** @src 33:7791:7812  \"account == address(0)\" */ value0_2, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 33:7787:7878  \"if (account == address(0)) {...\"\n                                if /** @src 33:7791:7812  \"account == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _21)\n                                /// @src 33:7787:7878  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    let _22 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_22, shl(224, 0xec442f05))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_22, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _23 := sload(/** @src 33:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let sum := add(_23, value_1)\n                                if gt(_23, sum)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, 36)\n                                }\n                                sstore(/** @src 33:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sum)\n                                mstore(_4, _21)\n                                mstore(0x20, _4)\n                                let dataSlot := keccak256(_4, _2)\n                                sstore(dataSlot, add(sload(/** @src 33:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ value_1))\n                                /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                let _24 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_24, value_1)\n                                /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_24, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, _4)\n                                let _25 := sload(keccak256(_4, _2))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _25)\n                                return(memPos_4, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _26 := sload(/** @src 30:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                sstore(/** @src 30:3004:3010  \"_owner\" */ 0x05, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_26, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, _4, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_26, sub(shl(160, 1), 1)), _4)\n                                return(_4, _4)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_2 := and(sload(/** @src 30:1710:1716  \"_owner\" */ 0x05), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, value_2)\n                                return(memPos_5, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr := mload(_2)\n                                let ret_1 := _4\n                                let slotValue_1 := sload(_3)\n                                let length_1 := _4\n                                let _27 := 1\n                                length_1 := shr(_27, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, _27)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _28 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _28))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(memPtr, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr, _28), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _28)\n                                }\n                                case 1 {\n                                    mstore(_4, _3)\n                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                    let i_1 := _4\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _28) }\n                                    {\n                                        mstore(add(add(memPtr, i_1), _28), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _27)\n                                    }\n                                    ret_1 := add(add(memPtr, i_1), _28)\n                                }\n                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr_1)\n                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address()\n                                /// @src 33:3754:3759  \"value\"\n                                fun_transfer(/** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:3754:3759  \"value\" */ value0_3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ calldataload(36))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, 1)\n                                return(memPos_6, 32)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address()\n                                let value1_1 := abi_decode_address_4059()\n                                let _29 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_4, _29))\n                                mstore(32, /** @src 33:3952:3963  \"_allowances\" */ 0x01)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _30 := keccak256(_4, _2)\n                                mstore(_4, and(value1_1, _29))\n                                mstore(32, _30)\n                                let _31 := sload(keccak256(_4, _2))\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _31)\n                                return(memPos_7, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address()\n                                /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _32 := sub(shl(160, 1), 1)\n                                let _33 := and(/** @src 30:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _32)\n                                /// @src 30:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 30:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _33)\n                                /// @src 30:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    let _34 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(_34, shl(224, 0x1e4fbdf7))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_34, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(_34, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _35 := sload(/** @src 30:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                sstore(/** @src 30:3004:3010  \"_owner\" */ 0x05, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(_35, shl(160, 0xffffffffffffffffffffffff)), _33))\n                                /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, _4, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_35, _32), /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _33)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(_4, _4)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, _1)\n                        let length := mload(value0)\n                        mstore(add(headStart, _1), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_4059() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    /// @ast-id 40321 @src 30:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let value := and(sload(/** @src 30:1710:1716  \"_owner\" */ 0x05), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 30:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 30:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ value, /** @src 39:735:745  \"msg.sender\" */ caller()))\n                        /// @src 30:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(/** @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 39:735:745  \"msg.sender\" */ caller())\n                            /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 40791 @src 33:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 33:5739:5757  \"from == address(0)\" */ var_from, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        /// @src 33:5735:5821  \"if (from == address(0)) {...\"\n                        if /** @src 33:5739:5757  \"from == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                        /// @src 33:5735:5821  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, shl(225, 0x4b637e8f))\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(/** @src 33:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 33:5755:5756  \"0\" */ 0x00)\n                            /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 33:5834:5850  \"to == address(0)\" */ var_to, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        /// @src 33:5830:5916  \"if (to == address(0)) {...\"\n                        if /** @src 33:5834:5850  \"to == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4)\n                        /// @src 33:5830:5916  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(/** @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 33:5755:5756  \"0\" */ 0x00)\n                            /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                        }\n                        /// @src 33:6356:6896  \"if (from == address(0)) {...\"\n                        let _6 := 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let _7 := sload(keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40))\n                        /// @src 33:6599:6714  \"if (fromBalance < value) {...\"\n                        if /** @src 33:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                        /// @src 33:6599:6714  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 33:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _8 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(0x40)\n                            /// @src 33:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_8, shl(226, 0x391434e3))\n                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                        }\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        sstore(keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40), sub(/** @src 33:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 33:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ var_value))\n                        /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                        let _9 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(0x40)\n                        mstore(_9, var_value)\n                        /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_9, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000814000a\"\n            }\n        }\n        /// @use-src 31:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 41:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 56:\"src/MerkleAirdrop.sol\"\n        object \"MerkleAirdrop_46003\" {\n            code {\n                {\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let _1 := memoryguard(0x01a0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"MerkleAirdrop_46003\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    let _2 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    let _3 := 64\n                    mstore(_3, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), _3)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let value := mload(_1)\n                    let value_1 := mload(add(_1, 32))\n                    if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let memPtr := mload(_3)\n                    finalize_allocation(memPtr)\n                    mstore(memPtr, 13)\n                    let _4 := add(memPtr, 32)\n                    mstore(_4, \"MerkleAirdrop\")\n                    let memPtr_1 := mload(_3)\n                    finalize_allocation(memPtr_1)\n                    mstore(memPtr_1, 1)\n                    let _5 := add(memPtr_1, 32)\n                    mstore(_5, \"1\")\n                    /// @src 44:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                    let _6 := fun_toShortStringWithFallback(memPtr)\n                    /// @src 44:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    let _7 := 288\n                    mstore(_7, /** @src 44:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _6)\n                    /// @src 44:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                    let _8 := fun_toShortStringWithFallback_2443(memPtr_1)\n                    /// @src 44:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    let _9 := 320\n                    mstore(_9, /** @src 44:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _8)\n                    /// @src 44:3542:3564  \"keccak256(bytes(name))\"\n                    let _10 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, mload(/** @src 44:3542:3564  \"keccak256(bytes(name))\" */ memPtr))\n                    /// @src 44:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 44:3542:3564  \"keccak256(bytes(name))\" */ _10)\n                    /// @src 44:3591:3616  \"keccak256(bytes(version))\"\n                    let _11 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5, mload(/** @src 44:3591:3616  \"keccak256(bytes(version))\" */ memPtr_1))\n                    /// @src 44:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                    let _12 := 256\n                    mstore(_12, /** @src 44:3591:3616  \"keccak256(bytes(version))\" */ _11)\n                    /// @src 44:3627:3657  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 44:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_3)\n                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _13 := add(expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 32)\n                    /// @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_13, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3), /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _10)\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _11)\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 44:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 44:4278:4282  \"this\" */ address())\n                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let newFreePtr_1 := add(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_mpos))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(_3, newFreePtr_1)\n                    /// @src 44:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _13, mload(/** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 44:3725:3752  \"_cachedThis = address(this)\"\n                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 44:4278:4282  \"this\" */ address())\n                    /// @src 56:1113:1139  \"i_merkleRoot = _merkleRoot\"\n                    let _14 := 352\n                    mstore(_14, value)\n                    /// @src 56:1149:1179  \"i_airdropToken = _airdropToken\"\n                    let _15 := 384\n                    mstore(_15, value_1)\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let _16 := datasize(\"MerkleAirdrop_46003_deployed\")\n                    codecopy(newFreePtr_1, dataoffset(\"MerkleAirdrop_46003_deployed\"), _16)\n                    setimmutable(newFreePtr_1, \"42725\", mload(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42727\", mload(/** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42729\", mload(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42731\", mload(/** @src 44:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42733\", mload(/** @src 44:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _12))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42736\", mload(/** @src 44:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _7))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42739\", mload(/** @src 44:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _9))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"45804\", mload(/** @src 56:1113:1139  \"i_merkleRoot = _merkleRoot\" */ _14))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"45807\", mload(/** @src 56:1149:1179  \"i_airdropToken = _airdropToken\" */ _15))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    return(newFreePtr_1, _16)\n                }\n                function finalize_allocation(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                /// @ast-id 41932 @src 40:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var\n                {\n                    /// @src 40:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 40:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 40:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 40:3059:3061  \"32\" */ _1)\n                    case /** @src 40:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ 0x00, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src 44:3432:3445  \"_nameFallback\" */ 0x00, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                        }\n                        /// @src 44:3432:3445  \"_nameFallback\"\n                        let _2 := 0x00\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _3 := sload(/** @src 44:3432:3445  \"_nameFallback\" */ _2)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let length := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _4 := 1\n                        length := shr(_4, _3)\n                        let outOfPlaceEncoding := and(_3, _4)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, _2)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let data := keccak256(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let _5 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _5) { start := add(start, _4) }\n                            {\n                                sstore(start, /** @src 44:3432:3445  \"_nameFallback\" */ _2)\n                            }\n                        }\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let srcOffset := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        srcOffset := /** @src 40:3059:3061  \"32\" */ _1\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, _2)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let dstPtr := keccak256(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let i := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _4)\n                                srcOffset := add(srcOffset, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(shl(_4, expr), _4))\n                        }\n                        default {\n                            let value := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                        }\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 40:1840:1856  \"bstr.length > 31\" */ gt(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 40:1854:1856  \"31\" */ 0x1f)\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            let _6 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            mstore(_6, shl(224, 0x305a27a9))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 40:1879:1897  \"StringTooLong(str)\" */ add(_6, 4), /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36), length_1)\n                            let i_1 := /** @src 44:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 40:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_1), 68), /** @src 44:3432:3445  \"_nameFallback\" */ 0x00)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            revert(_6, add(sub(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(add(length_1, /** @src 40:1854:1856  \"31\" */ 0x1f), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(31))), /** @src 40:1879:1897  \"StringTooLong(str)\" */ _6), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 68))\n                        }\n                        /// @src 40:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 44:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := mload(add(var_value_mpos, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if lt(length_2, /** @src 40:3059:3061  \"32\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 40:3059:3061  \"32\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 40:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 41932 @src 40:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_2443(var_value_mpos) -> var\n                {\n                    /// @src 40:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 40:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 40:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 40:3059:3061  \"32\" */ _1)\n                    case /** @src 40:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _2 := 1\n                        let _3 := sload(_2)\n                        let length := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        length := shr(_2, _3)\n                        let outOfPlaceEncoding := and(_3, _2)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _2)\n                            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _2) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let srcOffset := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        srcOffset := /** @src 40:3059:3061  \"32\" */ _1\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _2)\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _2)\n                                srcOffset := add(srcOffset, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(_2, add(shl(_2, expr), _2))\n                        }\n                        default {\n                            let value := /** @src -1:-1:-1 */ 0\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_2, expr)))\n                        }\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 40:1840:1856  \"bstr.length > 31\" */ gt(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 40:1854:1856  \"31\" */ 0x1f)\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 40:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36), length_1)\n                            let i_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 40:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(add(length_1, /** @src 40:1854:1856  \"31\" */ 0x1f), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(31))), /** @src 40:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 68))\n                        }\n                        /// @src 40:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := mload(add(var_value_mpos, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if lt(length_2, /** @src 40:3059:3061  \"32\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 40:3059:3061  \"32\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 40:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 37:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 38:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 45:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 46:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 56:\"src/MerkleAirdrop.sol\"\n            object \"MerkleAirdrop_46003_deployed\" {\n                code {\n                    {\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x4497a169 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 192) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let _5 := 36\n                                let value := calldataload(_5)\n                                let offset := calldataload(68)\n                                let _6 := 0xffffffffffffffff\n                                if gt(offset, _6) { revert(_4, _4) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                let length := calldataload(add(_3, offset))\n                                if gt(length, _6) { revert(_4, _4) }\n                                let _7 := 5\n                                let _8 := shl(_7, length)\n                                let _9 := add(add(offset, _8), _5)\n                                if gt(_9, calldatasize()) { revert(_4, _4) }\n                                let value_1 := calldataload(100)\n                                if iszero(eq(value_1, and(value_1, 0xff))) { revert(_4, _4) }\n                                let _10 := sub(shl(160, 1), 1)\n                                let _11 := and(value0, _10)\n                                mstore(_4, _11)\n                                let _12 := 32\n                                mstore(_12, /** @src 56:1329:1341  \"s_hasClaimed\" */ 0x03)\n                                /// @src 56:1325:1391  \"if (s_hasClaimed[_account]) revert MerkleAirdrop__AlreadyClaimed()\"\n                                if /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                                /// @src 56:1325:1391  \"if (s_hasClaimed[_account]) revert MerkleAirdrop__AlreadyClaimed()\"\n                                {\n                                    /// @src 56:1360:1391  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    mstore(_1, shl(224, 0x1ac2170b))\n                                    revert(_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                }\n                                /// @src 56:2465:2498  \"ECDSA.tryRecover(digest, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 56:1434:1467  \"getMessageHash(_account, _amount)\" */ fun_getMessageHash(value0, value), /** @src 56:2465:2498  \"ECDSA.tryRecover(digest, v, r, s)\" */ value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ calldataload(132), calldataload(164))\n                                /// @src 56:1401:1519  \"if (!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)) revert MerkleAirdrop__InvalidSignature()\"\n                                if /** @src 56:1405:1477  \"!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)\" */ iszero(/** @src 56:2515:2538  \"actualSigner == account\" */ eq(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:2515:2538  \"actualSigner == account\" */ expr_component, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _10), _11))\n                                /// @src 56:1401:1519  \"if (!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)) revert MerkleAirdrop__InvalidSignature()\"\n                                {\n                                    /// @src 56:1486:1519  \"MerkleAirdrop__InvalidSignature()\"\n                                    let _13 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                    /// @src 56:1486:1519  \"MerkleAirdrop__InvalidSignature()\"\n                                    mstore(_13, shl(224, 0xab8b8565))\n                                    revert(_13, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                }\n                                /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                let _14 := add(expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12)\n                                /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                let _15 := sub(abi_encode_address_uint256(_14, value0, value), expr_mpos)\n                                let _16 := not(31)\n                                mstore(expr_mpos, add(_15, _16))\n                                finalize_allocation(expr_mpos, _15)\n                                /// @src 56:1567:1607  \"keccak256(abi.encode(_account, _amount))\"\n                                let _17 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _14, mload(/** @src 56:1567:1607  \"keccak256(abi.encode(_account, _amount))\" */ expr_mpos))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let outPtr := mload(_2)\n                                let _18 := add(outPtr, _12)\n                                mstore(_18, _17)\n                                mstore(outPtr, _12)\n                                finalize_allocation_9850(outPtr)\n                                /// @src 56:1544:1609  \"keccak256(bytes.concat(keccak256(abi.encode(_account, _amount))))\"\n                                let _19 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _18, mload(/** @src 56:1544:1609  \"keccak256(bytes.concat(keccak256(abi.encode(_account, _amount))))\" */ outPtr))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let memPtr := mload(_2)\n                                finalize_allocation(memPtr, add(_8, _12))\n                                let dst := memPtr\n                                mstore(memPtr, length)\n                                dst := add(memPtr, _12)\n                                let src := add(offset, _5)\n                                for { } lt(src, _9) { src := add(src, _12) }\n                                {\n                                    mstore(dst, calldataload(src))\n                                    dst := add(dst, _12)\n                                }\n                                /// @src 45:2069:2096  \"bytes32 computedHash = leaf\"\n                                let var_computedHash := _19\n                                /// @src 45:2111:2124  \"uint256 i = 0\"\n                                let var_i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                /// @src 45:2106:2222  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                                for { }\n                                /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 1\n                                /// @src 45:2111:2124  \"uint256 i = 0\"\n                                {\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if eq(var_i, not(0))\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x11)\n                                        revert(_4, _5)\n                                    }\n                                    /// @src 45:2144:2147  \"i++\"\n                                    var_i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(var_i, 1)\n                                }\n                                /// @src 45:2144:2147  \"i++\"\n                                {\n                                    /// @src 45:2126:2142  \"i < proof.length\"\n                                    if iszero(lt(var_i, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 45:2130:2142  \"proof.length\" */ memPtr)))\n                                    /// @src 45:2126:2142  \"i < proof.length\"\n                                    { break }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let _20 := mload(add(add(memPtr, shl(_7, var_i)), _12))\n                                    /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                    let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                    /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                    switch /** @src 45:9318:9323  \"a < b\" */ lt(var_computedHash, _20)\n                                    case /** @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                                        /// @src 45:9632:9751  \"assembly {...\"\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 45:9632:9751  \"assembly {...\" */ _20)\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12, /** @src 45:9632:9751  \"assembly {...\" */ var_computedHash)\n                                        /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                        expr := /** @src 45:9632:9751  \"assembly {...\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _2)\n                                    }\n                                    default /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                    {\n                                        /// @src 45:9632:9751  \"assembly {...\"\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 45:9632:9751  \"assembly {...\" */ var_computedHash)\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12, /** @src 45:9632:9751  \"assembly {...\" */ _20)\n                                        /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                        expr := /** @src 45:9632:9751  \"assembly {...\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _2)\n                                    }\n                                    /// @src 45:2163:2211  \"computedHash = _hashPair(computedHash, proof[i])\"\n                                    var_computedHash := expr\n                                }\n                                /// @src 56:1619:1714  \"if (!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)) revert MerkleAirdrop__InvalidProof()\"\n                                if /** @src 56:1623:1676  \"!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 45:1379:1412  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, /** @src 56:1657:1669  \"i_merkleRoot\" */ loadimmutable(\"45804\")))\n                                /// @src 56:1619:1714  \"if (!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)) revert MerkleAirdrop__InvalidProof()\"\n                                {\n                                    /// @src 56:1685:1714  \"MerkleAirdrop__InvalidProof()\"\n                                    let _21 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                    /// @src 56:1685:1714  \"MerkleAirdrop__InvalidProof()\"\n                                    mstore(_21, shl(226, 0x30f109b7))\n                                    revert(_21, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                }\n                                mstore(_4, _11)\n                                mstore(_12, /** @src 56:1329:1341  \"s_hasClaimed\" */ 0x03)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let dataSlot := keccak256(_4, _2)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                                /// @src 56:1777:1801  \"Claim(_account, _amount)\"\n                                let _22 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                /// @src 56:1777:1801  \"Claim(_account, _amount)\"\n                                log1(_22, sub(abi_encode_address_uint256(_22, value0, value), _22), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_mpos_1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _23 := add(expr_mpos_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12)\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                mstore(_23, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _24 := sub(abi_encode_address_uint256(add(expr_mpos_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5), /** @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ value0, value), expr_mpos_1)\n                                mstore(expr_mpos_1, add(_24, /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ _16))\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                finalize_allocation(expr_mpos_1, _24)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let _25 := and(/** @src 56:1811:1825  \"i_airdropToken\" */ loadimmutable(\"45807\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _10)\n                                /// @src 38:3462:3493  \"target.call{value: value}(data)\"\n                                let expr_component_3 := call(gas(), _25, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 38:3462:3493  \"target.call{value: value}(data)\" */ _23, mload(expr_mpos_1), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _4)\n                                /// @src 38:3462:3493  \"target.call{value: value}(data)\"\n                                let data := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _26 := returndatasize()\n                                    if gt(_26, _6)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, _5)\n                                    }\n                                    let memPtr_1 := mload(_2)\n                                    finalize_allocation(memPtr_1, add(and(add(_26, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ _16), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12))\n                                    mstore(memPtr_1, _26)\n                                    data := memPtr_1\n                                    returndatacopy(add(memPtr_1, _12), _4, returndatasize())\n                                }\n                                /// @src 38:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                let var_mpos := /** @src 38:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_25, expr_component_3, /** @src 38:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                /// @src 37:4551:4568  \"returndata.length\"\n                                let expr_1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 37:4551:4568  \"returndata.length\" */ var_mpos)\n                                /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                let expr_2 := /** @src 37:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr_1))\n                                /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                if expr_2\n                                {\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if slt(sub(/** @src 37:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr_1), var_mpos), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12) { revert(_4, _4) }\n                                    let value_2 := mload(/** @src 37:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12))\n                                    let _27 := iszero(value_2)\n                                    if iszero(eq(value_2, iszero(_27))) { revert(_4, _4) }\n                                    /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                    expr_2 := _27\n                                }\n                                /// @src 37:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                if expr_2\n                                {\n                                    /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    let _28 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                    /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_28, shl(224, 0x5274afe7))\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_28, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3), _25)\n                                    /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_28, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5)\n                                }\n                                return(_4, _4)\n                            }\n                            case 0x49590657 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 56:2179:2191  \"i_merkleRoot\" */ loadimmutable(\"45804\"))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                return(memPos, 32)\n                            }\n                            case 0x512c91df {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                let ret := fun_getMessageHash(value0_1, calldataload(36))\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, ret)\n                                return(memPos_1, 32)\n                            }\n                            case 0x548efba2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, and(/** @src 56:2279:2293  \"i_airdropToken\" */ loadimmutable(\"45807\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_2, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 44:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos_1 := /** @src 44:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 44:6099:6104  \"_name\" */ loadimmutable(\"42736\"))\n                                /// @src 44:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_2 := /** @src 44:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_6373(/** @src 44:6554:6562  \"_version\" */ loadimmutable(\"42739\"))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let memPtr_2 := mload(_2)\n                                let _29 := 0x20\n                                let newFreePtr := add(memPtr_2, _29)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_2))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                mstore(memPtr_2, _4)\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, shl(248, 15))\n                                mstore(add(memPos_3, _29), 224)\n                                let tail := abi_encode_string(var_mpos_1, add(memPos_3, 224))\n                                mstore(add(memPos_3, _2), sub(tail, memPos_3))\n                                let tail_1 := abi_encode_string(var_mpos_2, tail)\n                                mstore(add(memPos_3, 96), /** @src 44:5590:5603  \"block.chainid\" */ chainid())\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(add(memPos_3, 128), /** @src 44:5625:5629  \"this\" */ address())\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(add(memPos_3, 160), _4)\n                                mstore(add(memPos_3, 192), sub(tail_1, memPos_3))\n                                let pos := tail_1\n                                let length_1 := mload(memPtr_2)\n                                mstore(tail_1, length_1)\n                                pos := add(tail_1, _29)\n                                let srcPtr := newFreePtr\n                                let i := _4\n                                for { }\n                                lt(i, length_1)\n                                {\n                                    i := add(i, /** @src 44:6584:6600  \"_versionFallback\" */ 0x01)\n                                }\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, _29)\n                                    srcPtr := add(srcPtr, _29)\n                                }\n                                return(memPos_3, sub(pos, memPos_3))\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            let _1 := 0x20\n                            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                        }\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        end := add(add(pos, and(add(length, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ not(31))), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x20)\n                    }\n                    function finalize_allocation_9850(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ not(31)))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 41959 @src 40:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var_mpos\n                    {\n                        /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 40:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let _1 := 1\n                            length := shr(_1, slotValue)\n                            let outOfPlaceEncoding := and(slotValue, _1)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret, shl(224, 0x4e487b71))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(memPtr, length)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(255)))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0, 0)\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                                let i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, _1)\n                                }\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 40:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 40:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 40:2706:2717  \"result > 31\" */ gt(expr, /** @src 40:2715:2717  \"31\" */ 0x1f)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9850(memPtr_1)\n                            /// @src 40:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr_1, /** @src 40:2311:2313  \"32\" */ 0x20), /** @src 40:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 40:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 41959 @src 40:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_6373(var_value) -> var_mpos\n                    {\n                        /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 40:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 44:6584:6600  \"_versionFallback\"\n                            let _1 := 0x01\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src -1:-1:-1 */ ret\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            length := shr(/** @src 44:6584:6600  \"_versionFallback\" */ _1, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ slotValue)\n                            let outOfPlaceEncoding := and(slotValue, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src -1:-1:-1 */ ret, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src -1:-1:-1 */ ret, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(memPtr, length)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(255)))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                }\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 40:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 40:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 40:2706:2717  \"result > 31\" */ gt(expr, /** @src 40:2715:2717  \"31\" */ 0x1f)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9850(memPtr_1)\n                            /// @src 40:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr_1, /** @src 40:2311:2313  \"32\" */ 0x20), /** @src 40:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 40:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    /// @ast-id 41703 @src 38:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 38:4793:5201  \"if (!success) {...\"\n                        switch /** @src 38:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 38:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 38:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 38:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 38:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 38:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 38:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 38:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 38:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(/** @src 38:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36)\n                            }\n                            /// @src 38:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 38:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 38:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 38:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 38:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 38:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 38:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 38:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 38:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 38:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @ast-id 45955 @src 56:1870:2099  \"function getMessageHash(address _account, uint256 _amount) public view returns (bytes32 digest) {...\"\n                    function fun_getMessageHash(var_account, var_amount) -> var_digest\n                    {\n                        /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                        let _1 := 64\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let memPtr := mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let newFreePtr := add(memPtr, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _2 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ newFreePtr)\n                        let _3 := sub(shl(160, 1), 1)\n                        /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                        mstore(memPtr, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ var_account, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3))\n                        /// @src 56:2039:2089  \"AirdropClaim({account: _account, amount: _amount})\"\n                        let _4 := add(memPtr, 32)\n                        /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                        mstore(_4, var_amount)\n                        /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                        let expr_45950_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                        let _5 := add(expr_45950_mpos, /** @src 56:2039:2089  \"AirdropClaim({account: _account, amount: _amount})\" */ 32)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        mstore(_5, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 0x09802f0ca4ee1104f0a37279d766e5ec79c8f84a93b8691fb36c54ded00e070c)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ add(/** @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\" */ expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ mload(memPtr), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3))\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ add(/** @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\" */ expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 96), mload(_4))\n                        /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                        mstore(expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 96)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let newFreePtr_1 := add(expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 128)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_45950_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ newFreePtr_1)\n                        /// @src 56:2000:2091  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount})))\"\n                        let _6 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5, mload(/** @src 56:2000:2091  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount})))\" */ expr_45950_mpos))\n                        /// @src 44:5053:5073  \"_domainSeparatorV4()\"\n                        let _7 := fun_domainSeparatorV4()\n                        /// @src 46:3515:3748  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 46:3515:3748  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _7)\n                        mstore(add(usr$ptr, 0x22), _6)\n                        /// @src 56:1976:2092  \"return _hashTypedDataV4(keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))))\"\n                        var_digest := /** @src 46:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42)\n                    }\n                    /// @ast-id 42827 @src 44:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 44:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 44:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 44:3929:3933  \"this\" */ address(), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 44:3938:3949  \"_cachedThis\" */ loadimmutable(\"42729\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 44:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 44:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 44:3953:3966  \"block.chainid\" */ chainid(), /** @src 44:3970:3984  \"_cachedChainId\" */ loadimmutable(\"42727\"))\n                        }\n                        /// @src 44:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(_1, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 64), /** @src 44:4226:4237  \"_hashedName\" */ loadimmutable(\"42731\"))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 44:4239:4253  \"_hashedVersion\" */ loadimmutable(\"42733\"))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 44:4255:4268  \"block.chainid\" */ chainid())\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 44:3929:3933  \"this\" */ address())\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let newFreePtr := add(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 44:4060:4090  \"return _buildDomainSeparator()\"\n                            var := /** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _1, mload(/** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 44:4060:4090  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 44:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 44:4000:4029  \"return _cachedDomainSeparator\"\n                            var := /** @src 44:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"42725\")\n                            /// @src 44:4000:4029  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 42618 @src 43:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 43:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 43:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 43:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 43:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 43:6297:6298  \"0\" */ 0x00\n                            /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 43:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 32))\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _3 := mload(/** @src -1:-1:-1 */ _2)\n                        /// @src 43:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 43:6495:6515  \"signer == address(0)\" */ iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 43:6495:6515  \"signer == address(0)\" */ _3, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 43:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 43:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 43:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _3\n                        var_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 43:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ _2\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000814000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000814000a\"\n    }\n}\n","hash":"010004270c202ad98f762dd6f415596e0b7dcf5ec33ecd8a89fde7439bf17ac9","factoryDependencies":{"010000c9687ab5da3c77e861b084bf516b02092d49c4ebc4ff7641eb248cb43c":"script/DeployMerkleAirdrop.s.sol:DeployMerkleAirdrop","01000129aebadf99b2559e94c1229c365f0583d796da5a75140c314a3707c43f":"src/BagelToken.sol:BagelToken","010001dfda5447b5db0ea98d3c0a19c887f27544706b53f93591301fb4cc82af":"src/MerkleAirdrop.sol:MerkleAirdrop"},"id":57}