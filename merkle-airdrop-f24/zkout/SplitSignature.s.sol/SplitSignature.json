{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"SplitSignature.s.sol:SplitSignature\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_3[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_69\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t132, r1\n\tadd\t13, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t@CPI0_12[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_10[0], r3, r3\n\tshr.s\t5, r3, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_9\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_73\n\tadd\tr0, r0, r2\n.BB0_19:\n\tshl.s\t5, r2, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_19\n.BB0_73:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_21\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tshl.s\t3, r4, r4\n\tadd\t128, r2, r2\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_21:\n\tadd\t31, r3, r1\n\tand\t@CPI0_13[0], r1, r2\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_14[0], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r4\n\tadd\t@CPI0_15[0], r0, r6\n\tsub!\tr4, r3, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_15[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.ge\tr0, r0, r6\n\tsub.s!\t@CPI0_15[0], r4, r4\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_16[0], r4, r6\n\tjump.ge\t@.BB0_25\n\tadd\t31, r4, r6\n\tsub.s\t32, r0, r8\n\tand\tr6, r8, r6\n\tadd\t63, r6, r6\n\tand\tr6, r8, r6\n\tadd\tr6, r1, r6\n\tsub.s!\t@CPI0_14[0], r6, r7\n\tjump.le\t@.BB0_27\n.BB0_25:\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_0[0], r2, r2\n\tor\t@CPI0_1[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_69:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_6[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_74\n\tadd\tr0, r0, r6\n.BB0_11:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_11\n.BB0_74:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_13\n.BB0_12:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_13:\n\tadd\t@CPI0_10[0], r0, r1\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_27:\n\tadd\t128, r3, r7\n\tadd\t160, r5, r3\n\tst.1\t64, r6\n\tst.1\tr1, r4\n\tadd\tr4, r3, r5\n\tsub!\tr5, r7, r5\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\t160, r2, r2\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_14\n\tadd\tr0, r0, r5\n.BB0_30:\n\tadd\tr5, r2, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_30\n.BB0_14:\n\tadd\tr4, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI0_17[0], r0, r3\n\tld.1\t64, r7\n\tst.1\tr7, r3\n\tadd\t4, r7, r3\n\tadd\tstack-[6], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r1\n\tadd\t36, r7, r3\n\tst.1\tr3, r1\n\tadd\t68, r7, r3\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_31\n\tadd\tr0, r0, r4\n.BB0_16:\n\tadd\tr4, r3, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_16\n.BB0_31:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tadd\tr8, r0, stack-[5]\n\tand\tr1, r8, r1\n\tadd\t@CPI0_10[0], r0, r2\n\tsub.s!\t@CPI0_10[0], r7, r3\n\tadd\tr7, r0, stack-[4]\n\tadd\tr2, r0, r3\n\tadd.lt\tr7, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t68, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_10[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_12[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_10[0], r3, r3\n\tshr.s\t5, r3, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_32\n\tsub!\tr5, r0, r2\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB0_71\n\tadd\tr0, r0, r2\n.BB0_56:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_56\n.BB0_71:\n\tsub!\tr4, r0, r2\n\tadd\tstack-[5], r0, r9\n\tjump.eq\t@.BB0_58\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_58:\n\tadd\t31, r3, r1\n\tand\t@CPI0_13[0], r1, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r4\n\tjump.gt\t@.BB0_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_25\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r2\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r4\n\tadd\tr2, r8, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI0_15[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_15[0], r3, r3\n\tand\t@CPI0_15[0], r4, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_15[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r2, r3\n\tsub.s!\t@CPI0_14[0], r2, r5\n\tjump.gt\t@.BB0_25\n\tadd\t31, r2, r5\n\tand\tr5, r9, r5\n\tadd\t63, r5, r5\n\tand\tr5, r9, r5\n\tadd\tr5, r1, r5\n\tsub.s!\t@CPI0_14[0], r5, r6\n\tjump.gt\t@.BB0_25\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r3, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_36\n\tadd\tr0, r0, r4\n.BB0_68:\n\tadd\tr4, r5, r6\n\tadd\tr4, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB0_68\n.BB0_36:\n\tadd\tr2, r5, r2\n\tst.1\tr2, r0\n\tld.1\t64, r4\n\tld.1\tr1, r2\n\tsub.s!\t65, r2, r2\n\tjump.ne\t@.BB0_37\n\tld.1\tr5, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_20[0], r4, r2\n\tjump.gt\t@.BB0_25\n\tadd\t64, r4, r2\n\tst.1\t64, r2\n\tadd\t32, r4, r5\n\tadd\t@CPI0_21[0], r0, r2\n\tst.1\tr5, r2\n\tadd\t8, r0, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr4, r2\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI0_22[0], r0, r6\n\tst.1\tr3, r6\n\tadd\t36, r2, r6\n\tadd\tstack-[6], r0, r7\n\tst.1\tr6, r7\n\tld.1\tr4, r4\n\tadd\t68, r2, r6\n\tst.1\tr6, r4\n\tadd\t100, r2, r6\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_42\n\tadd\tr0, r0, r7\n.BB0_41:\n\tadd\tr7, r6, r8\n\tadd\tr7, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_41\n.BB0_42:\n\tadd\tr4, r6, r5\n\tst.1\tr5, r0\n\tadd\t31, r4, r4\n\tand\tstack-[5], r4, r4\n\tadd\t68, r4, r5\n\tst.1\tr2, r5\n\tadd\t131, r4, r4\n\tand\tstack-[5], r4, r5\n\tadd\tr5, r2, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_14[0], r4, r6\n\tjump.gt\t@.BB0_25\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_25\n\tshr.s\t248, r1, stack-[1]\n\tst.1\t64, r4\n\tadd\t@CPI0_10[0], r0, r4\n\tsub.s!\t@CPI0_10[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t@CPI0_24[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_25[0], r1, r3\n\tjump.gt\t@.BB0_25\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_20[0], r4, r1\n\tjump.gt\t@.BB0_25\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r3\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_22[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[6], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_49\n\tadd\tr0, r0, r6\n.BB0_48:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_48\n.BB0_49:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tand\tstack-[5], r3, r3\n\tadd\t68, r3, r4\n\tst.1\tr1, r4\n\tadd\t131, r3, r3\n\tand\tstack-[5], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_14[0], r3, r5\n\tjump.gt\t@.BB0_25\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_25\n\tst.1\t64, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t@CPI0_27[0], r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t36, r1, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\tstack-[1], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_25[0], r1, r3\n\tjump.gt\t@.BB0_25\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.gt\t@.BB0_25\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI0_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tnear_call\tr0, @fun_log_16613, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @fun_logBytes32, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r6\n.BB0_34:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_34\n.BB0_72:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_13\n\tjump\t@.BB0_12\n.BB0_37:\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tsub.s!\t@CPI0_10[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_19[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfun_logBytes32:\n.func_begin1:\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r2, r4\n\tst.1\tr4, r1\n\tadd\t36, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI1_1[0], r2, r1\n\tjump.ge\t@.BB1_1\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI1_3[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tret\n.BB1_1:\n\tadd\t@CPI1_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_log_16613:\n.func_begin2:\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI2_0[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t36, r2, r4\n\tadd\t32, r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r2, r5\n\tld.1.inc\tr1, r1, r4\n\tst.1\tr5, r1\n\tadd\t100, r2, r5\n\tsub!\tr1, r0, r6\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r6\n.BB2_2:\n\tadd\tr6, r5, r7\n\tadd\tr4, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r5, r4\n\tst.1\tr4, r0\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\t68, r1, r5\n\tst.1\tr2, r5\n\tadd\t131, r1, r1\n\tand\tr1, r4, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI2_1[0], r1, r5\n\tjump.gt\t@.BB2_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB2_5\n\tst.1\t64, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tsub.s!\t@CPI2_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI2_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI2_3[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tret\n.BB2_5:\n\tadd\t@CPI2_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell -16711936\nCPI0_1:\n\t.cell 65537\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_3:\n\t.cell 340282366604025813406317257057592410112\nCPI0_4:\n\t.cell 4174167879\nCPI0_5:\n\t.cell 3225444902\nCPI0_6:\n\t.cell 16711680\nCPI0_7:\n\t.cell 2535301202817642044428229017600\nCPI0_8:\n\t.cell 43863269468009334158894487264628454438510617549146491680844421517880510644224\nCPI0_9:\n\t.cell 52202210384608418486013108369053717347550825148231946012506306842940844015616\nCPI0_10:\nCPI1_2:\nCPI2_2:\n\t.cell 4294967295\nCPI0_11:\n\t.cell 7922816253787617000789217640448\nCPI0_12:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_13:\n\t.cell 8589934560\nCPI0_14:\nCPI2_1:\n\t.cell 18446744073709551615\nCPI0_15:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_16:\n\t.cell 18446744073709551616\nCPI0_17:\n\t.cell -50946792338564974452023032457451196792111282063922947679581322476262397050880\nCPI0_18:\n\t.cell -15942942424227480703949623968675648015437402033059700727019567685805136674816\nCPI0_19:\n\t.cell 316912650057057350374175801344\nCPI0_20:\n\t.cell 18446744073709551551\nCPI0_21:\n\t.cell 53430272271504111300058086056911561927603999811359364589414485439456324091904\nCPI0_22:\nCPI2_0:\n\t.cell 29485693692093900896535320720837539044516270774257971310649688876405881831424\nCPI0_23:\nCPI1_3:\nCPI2_3:\n\t.cell 120209876281281145568259943\nCPI0_24:\n\t.cell -4661414221152319661883946506388766453191537801799555158840354066671241003008\nCPI0_25:\n\t.cell 18446744073709551519\nCPI0_26:\n\t.cell 51621020877171045746564789416150813367396656300958730776297960689332681441280\nCPI0_27:\nCPI1_0:\n\t.cell 17964966354768525856612477375229750468297565752831865415135428877836554862592\nCPI0_28:\n\t.cell 52073333725754312134938113576341000507448492178558889229577091876863592103936\nCPI0_29:\nCPI1_4:\nCPI2_4:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_30:\nCPI1_5:\nCPI2_5:\n\t.cell 2852213850513516153367582212096\nCPI1_1:\n\t.cell 18446744073709551520\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","run()":"c0406226"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.9f2a5241\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"__SplitSignatureScript__InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/SplitSignature.s.sol\":\"SplitSignature\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x0b7475858d62180b6ccbea2181cf9fa0ed6773fdb8b0f5cbd946d13c5660579f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba7fa71d8d3ace512ee0a3d9d4d5923a6eb01fcbd93219726e40eeb50a8e52f\",\"dweb:/ipfs/QmScHyHRhrWp21Gazmzq1HR1YDjkbpya6SPTHEs5wzjhwg\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"script/SplitSignature.s.sol\":{\"keccak256\":\"0xd43c35c0d01056cef43a7624670bf3b5f2f5d72626202a282c50fc5e30763da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff817d80a74ea9f7cf7c36657f87dbe175c087a86b8d11a61e3dc4bd961f538b\",\"dweb:/ipfs/QmbKAB4Xe9ATVEMXoLnqXycUMFFnYfGsjt9YEUDnBoaG3a\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 54:\"script/SplitSignature.s.sol\"\nobject \"SplitSignature_45738\" {\n    code {\n        {\n            /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 3:3166:3170  \"true\" */ 0x0c, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ 0x0c), /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ not(16711935)), 65537))\n            let _2 := datasize(\"SplitSignature_45738_deployed\")\n            codecopy(_1, dataoffset(\"SplitSignature_45738_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 15:\"lib/forge-std/src/console.sol\", 54:\"script/SplitSignature.s.sol\"\n    object \"SplitSignature_45738_deployed\" {\n        code {\n            {\n                /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                let _1 := 128\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0xc0406226 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\"\n                        mstore(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x60f9bb11))\n                        /// @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\"\n                        let _3 := add(abi_encode_stringliteral_0e8a(), not(127))\n                        /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                        let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\"\n                        let _5 := staticcall(gas(), /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _4, _1, /** @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\" */ _3, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _1, _2)\n                        /// @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\"\n                        if iszero(_5) { revert_forward() }\n                        let expr_mpos := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _2\n                        /// @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\"\n                        if _5\n                        {\n                            let _6 := returndatasize()\n                            returndatacopy(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _1, _2, /** @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\" */ _6)\n                            finalize_allocation_1135(_6)\n                            expr_mpos := abi_decode_string_fromMemory(add(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _1, /** @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\" */ _6))\n                        }\n                        /// @src 54:776:794  \"vm.parseBytes(sig)\"\n                        let _7 := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                        /// @src 54:776:794  \"vm.parseBytes(sig)\"\n                        mstore(_7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x8f5d232d))\n                        /// @src 54:776:794  \"vm.parseBytes(sig)\"\n                        let _8 := staticcall(gas(), /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _4, /** @src 54:776:794  \"vm.parseBytes(sig)\" */ _7, sub(abi_encode_string(add(_7, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 4), /** @src 54:776:794  \"vm.parseBytes(sig)\" */ expr_mpos), _7), _7, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _2)\n                        /// @src 54:776:794  \"vm.parseBytes(sig)\"\n                        if iszero(_8) { revert_forward() }\n                        let expr_mpos_1 := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _2\n                        /// @src 54:776:794  \"vm.parseBytes(sig)\"\n                        if _8\n                        {\n                            let _9 := returndatasize()\n                            returndatacopy(_7, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ _2, /** @src 54:776:794  \"vm.parseBytes(sig)\" */ _9)\n                            finalize_allocation(_7, _9)\n                            expr_mpos_1 := abi_decode_bytes_fromMemory(_7, add(_7, _9))\n                        }\n                        /// @src 54:838:862  \"splitSignature(sigBytes)\"\n                        let expr_component, expr_component_1, expr_component_2 := fun_splitSignature(expr_mpos_1)\n                        /// @src 54:872:895  \"console.log(\\\"v value:\\\")\"\n                        fun_log_16613(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_literal_to_memory_d412dcc9aa15b4cfbbc946f91389c3e79b9d8958bb96658420c1f1c4e665793d())\n                        /// @src 54:905:919  \"console.log(v)\"\n                        fun_log(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ and(/** @src 54:905:919  \"console.log(v)\" */ expr_component, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 0xff))\n                        /// @src 54:929:952  \"console.log(\\\"r value:\\\")\"\n                        fun_log_16613(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_literal_to_memory_2ebfb8c66c9dcad6098974be9c2def75668354cc3c3a3e544680072a3c054daf())\n                        /// @src 54:981:982  \"r\"\n                        fun_logBytes32(expr_component_1)\n                        /// @src 54:993:1016  \"console.log(\\\"s value:\\\")\"\n                        fun_log_16613(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_literal_to_memory_06ca0870349494defdd86379823dc82c158f92fc504b060f908d91b7c20c333c())\n                        /// @src 54:1045:1046  \"s\"\n                        fun_logBytes32(expr_component_2)\n                        /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                        return(_2, _2)\n                    }\n                    case 0xf8ccbf47 { external_fun_IS_SCRIPT() }\n                }\n                revert(0, 0)\n            }\n            function external_fun_IS_SCRIPT()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_1135(size)\n            {\n                let newFreePtr := add(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 128, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 128))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_1642(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_1645(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_decode_available_length_string_fromMemory(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                let memPtr := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                copy_memory_to_memory_with_cleanup(src, add(memPtr, 0x20), length)\n            }\n            function abi_decode_string_fromMemory(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, /** @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\" */ not(127)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32)\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let offset := mload(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 128)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                if iszero(slt(add(offset, 159), dataEnd))\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := abi_decode_available_length_string_fromMemory(add(offset, 160), mload(add(/** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ 128, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ offset)), dataEnd)\n            }\n            function abi_encode_stringliteral_0e8a() -> tail\n            {\n                mstore(/** @src 54:714:742  \"vm.readFile(\\\"signature.txt\\\")\" */ 132, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32)\n                mstore(164, 13)\n                mstore(196, \"signature.txt\")\n                tail := 228\n            }\n            function revert_forward()\n            {\n                let pos := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function abi_decode_bytes_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := add(headStart, offset)\n                if iszero(slt(add(_1, 0x1f), dataEnd))\n                {\n                    /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := abi_decode_available_length_string_fromMemory(add(_1, 32), mload(_1), dataEnd)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function copy_literal_to_memory_d412dcc9aa15b4cfbbc946f91389c3e79b9d8958bb96658420c1f1c4e665793d() -> memPtr\n            {\n                let memPtr_1 := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 64)\n                finalize_allocation_1642(memPtr_1)\n                mstore(memPtr_1, 8)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"v value:\")\n            }\n            function copy_literal_to_memory_2ebfb8c66c9dcad6098974be9c2def75668354cc3c3a3e544680072a3c054daf() -> memPtr\n            {\n                let memPtr_1 := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 64)\n                finalize_allocation_1642(memPtr_1)\n                mstore(memPtr_1, 8)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"r value:\")\n            }\n            function copy_literal_to_memory_06ca0870349494defdd86379823dc82c158f92fc504b060f908d91b7c20c333c() -> memPtr\n            {\n                let memPtr_1 := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 64)\n                finalize_allocation_1642(memPtr_1)\n                mstore(memPtr_1, 8)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"s value:\")\n            }\n            /// @ast-id 16585 @src 15:5755:5878  \"function logBytes32(bytes32 p0) internal pure {...\"\n            function fun_logBytes32(var_p0)\n            {\n                /// @src 15:5827:5870  \"abi.encodeWithSignature(\\\"log(bytes32)\\\", p0)\"\n                let expr_16581_mpos := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                /// @src 15:5827:5870  \"abi.encodeWithSignature(\\\"log(bytes32)\\\", p0)\"\n                mstore(add(expr_16581_mpos, 0x20), shl(224, 0x27b7cf85))\n                /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                mstore(/** @src 15:5827:5870  \"abi.encodeWithSignature(\\\"log(bytes32)\\\", p0)\" */ add(expr_16581_mpos, 36), /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ var_p0)\n                /// @src 15:5827:5870  \"abi.encodeWithSignature(\\\"log(bytes32)\\\", p0)\"\n                mstore(expr_16581_mpos, 36)\n                finalize_allocation_1645(expr_16581_mpos)\n                fun_sendLogPayload(expr_16581_mpos)\n            }\n            /// @ast-id 16026 @src 15:408:541  \"function _sendLogPayload(bytes memory payload) internal pure {...\"\n            function fun_sendLogPayload(var_payload_mpos)\n            {\n                /// @src 15:762:921  \"assembly {...\"\n                pop(staticcall(gas(), /** @src 15:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 15:762:921  \"assembly {...\" */ add(var_payload_mpos, 32), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 15:645:659  \"payload.length\" */ var_payload_mpos), /** @src 15:762:921  \"assembly {...\" */ 0, 0))\n            }\n            /// @ast-id 16599 @src 15:5884:5994  \"function log(uint p0) internal pure {...\"\n            function fun_log(var_p0)\n            {\n                /// @src 15:5946:5986  \"abi.encodeWithSignature(\\\"log(uint)\\\", p0)\"\n                let expr_16595_mpos := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                /// @src 15:5946:5986  \"abi.encodeWithSignature(\\\"log(uint)\\\", p0)\"\n                mstore(add(expr_16595_mpos, 0x20), shl(224, 0xf5b1bba9))\n                /// @src 54:115:1056  \"contract SplitSignature is Script {...\"\n                mstore(/** @src 15:5946:5986  \"abi.encodeWithSignature(\\\"log(uint)\\\", p0)\" */ add(expr_16595_mpos, 36), /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ var_p0)\n                /// @src 15:5946:5986  \"abi.encodeWithSignature(\\\"log(uint)\\\", p0)\"\n                mstore(expr_16595_mpos, 36)\n                finalize_allocation_1645(expr_16595_mpos)\n                fun_sendLogPayload(expr_16595_mpos)\n            }\n            /// @ast-id 16613 @src 15:6000:6121  \"function log(string memory p0) internal pure {...\"\n            function fun_log_16613(var_p0_mpos)\n            {\n                /// @src 15:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                let expr_16609_mpos := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                /// @src 15:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                mstore(add(expr_16609_mpos, 0x20), shl(226, 0x104c13eb))\n                let _1 := sub(abi_encode_string(add(expr_16609_mpos, 36), var_p0_mpos), expr_16609_mpos)\n                mstore(expr_16609_mpos, add(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(31)))\n                /// @src 15:6071:6113  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                finalize_allocation(expr_16609_mpos, _1)\n                fun_sendLogPayload(expr_16609_mpos)\n            }\n            /// @ast-id 45673 @src 54:216:654  \"function splitSignature(bytes memory sig)...\"\n            function fun_splitSignature(var_sig_mpos) -> var_v, var_r, var_s\n            {\n                /// @src 54:396:498  \"if (sig.length != 65) {...\"\n                if /** @src 54:400:416  \"sig.length != 65\" */ iszero(eq(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 54:400:410  \"sig.length\" */ var_sig_mpos), /** @src 54:414:416  \"65\" */ 0x41))\n                /// @src 54:396:498  \"if (sig.length != 65) {...\"\n                {\n                    /// @src 54:439:487  \"__SplitSignatureScript__InvalidSignatureLength()\"\n                    let _1 := /** @src 54:115:1056  \"contract SplitSignature is Script {...\" */ mload(64)\n                    /// @src 54:439:487  \"__SplitSignatureScript__InvalidSignatureLength()\"\n                    mstore(_1, shl(224, 0xdcc09d47))\n                    revert(_1, 4)\n                }\n                /// @src 54:508:648  \"assembly {...\"\n                var_r := mload(add(var_sig_mpos, 32))\n                var_s := mload(add(var_sig_mpos, 64))\n                var_v := byte(0, mload(add(var_sig_mpos, 96)))\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000814000a\"\n    }\n}\n","hash":"010000c7e7c539c6a0b002888d3dbcae63d61cd6a86c4c6f971e9858fc142394","factoryDependencies":{},"id":54}