{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"DeployMerkleAirdrop.s.sol:DeployMerkleAirdrop\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.eq\t@.BB0_8\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_2\n.BB0_8:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_deployMerkleAirdrop, @DEFAULT_UNWIND\n\tand\t@CPI0_11[0], r2, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI0_11[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_3[0], r0, r1\n\tadd\t13, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tadd\t14, r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_9[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfun_deployMerkleAirdrop:\n.func_begin1:\n\tnop\tstack+=[7]\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_3\n\tld.1\t64, r4\n\tadd\t@CPI1_4[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_2[0], r4, r3\n\tadd\tr4, r0, stack-[7]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[6]\n\tshl.s\t192, r2, r1\n\tor\tstack-[6], r1, r1\n\tor\t@CPI1_5[0], r1, r1\n\tadd\t@CPI1_1[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, stack[@returndatasize]\n\tand\t@CPI1_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_5\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI1_6[0], r4, r1\n\tjump.ge\t@.BB1_11\n\tst.1\t64, r4\n\tsub.s!\t@CPI1_7[0], r4, r1\n\tjump.gt\t@.BB1_11\n\tadd\t36, r4, r1\n\tadd\t@CPI1_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tcontext.gas_left\tr2\n\tadd\t96, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr1, r3\n\tadd\t@CPI1_9[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t100, r4, r1\n\tst.1\tr1, r0\n\tadd\t4, r4, r1\n\tst.1\tr1, r0\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tstack-[6], r1, r1\n\tor\t@CPI1_10[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_13\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB1_16\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI1_11[0], r2, r4\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_7[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\t13, r0, r2\n\tsload\tr2, r2\n\tadd\t164, r1, r3\n\tadd\tr4, r0, stack-[7]\n\tst.1\tr3, r4\n\tadd\t132, r1, r3\n\tst.1\tr3, r2\n\tadd\t36, r1, r2\n\tadd\t@CPI1_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t64, r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r1, r2\n\tadd\tstack-[5], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI1_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI1_2[0], r0, r2\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_13[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_23\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_26\n\tld.1\t64, r10\n\tadd\t@CPI1_14[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB1_33\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB1_44\n.BB1_33:\n\tadd\t@CPI1_2[0], r0, r4\n\tsub.s!\t@CPI1_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI1_2[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI1_5[0], r1, r1\n\tadd\tr10, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_81\n\tadd\tr0, r0, r7\n.BB1_35:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_35\n.BB1_81:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_37\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB1_37:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_39\n\tadd\tstack-[7], r0, r2\n.BB1_44:\n\tadd\t31, r4, r1\n\tand\t96, r1, r4\n\tadd\tr4, r10, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI1_15[0], r1, r4\n\tjump.gt\t@.BB1_11\n\tand!\t1, r5, r4\n\tjump.ne\t@.BB1_11\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB1_3\n\tld.1\tr10, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI1_16[0], r1, r1\n\tjump.ge\t@.BB1_3\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r5\n\tjump.eq\t@.BB1_3\n\tld.1\t64, r10\n\tadd\t@CPI1_17[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t36, r10, r4\n\tadd\tstack-[4], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r10, r6\n\tadd\tstack-[5], r0, r1\n\tst.1\tr6, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tadd\tr10, r0, stack-[1]\n\tjump.eq\t@.BB1_56\n\tadd\t@CPI1_2[0], r0, r2\n\tsub.s!\t@CPI1_2[0], r10, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr10, r0, r3\n\tadd\tr4, r0, stack-[5]\n\tsub.s!\t@CPI1_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[1], r0, r10\n\tadd\tstack-[7], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, stack[@returndatasize]\n\tand\t@CPI1_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_52\n.BB1_56:\n\tsub.s!\t@CPI1_15[0], r10, r1\n\tjump.gt\t@.BB1_11\n\tst.1\t64, r10\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr10, r2\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI1_11[0], r2, r2\n\tst.1\tr6, r2\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB1_59\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB1_68\n.BB1_59:\n\tadd\t@CPI1_2[0], r0, r2\n\tsub.s!\t@CPI1_2[0], r10, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr10, r0, r3\n\tsub.s!\t@CPI1_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_80\n\tadd\tr0, r0, r7\n.BB1_61:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_61\n.BB1_80:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_63\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB1_63:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_64\n.BB1_68:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tsub.s!\t@CPI1_15[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB1_3\n\tld.1\tr10, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB1_3\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_3\n\tld.1\t64, r4\n\tadd\t@CPI1_20[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_2[0], r4, r3\n\tadd\tr4, r0, stack-[7]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_5[0], r1, r1\n\tadd\t@CPI1_1[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_2[0], r3, stack[@returndatasize]\n\tand\t@CPI1_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_74\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t@CPI1_15[0], r2, r1\n\tjump.gt\t@.BB1_11\n\tst.1\t64, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[2], r0, r2\n\tret\n.BB1_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_11:\n\tadd\t@CPI1_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\trevert\n.BB1_5:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_88\n\tadd\tr0, r0, r6\n.BB1_7:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_7\n.BB1_88:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB1_8\n\tjump\t@.BB1_9\n.BB1_13:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_2[0], r2, stack[@returndatasize]\n\tand\t@CPI1_2[0], r2, r2\n\tjump\t@.BB1_18\n.BB1_16:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB1_18:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB1_87\n\tadd\tr0, r0, r6\n.BB1_20:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_20\n.BB1_87:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB1_21\n\tjump\t@.BB1_22\n.BB1_23:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI1_2[0], r2, stack[@returndatasize]\n\tand\t@CPI1_2[0], r2, r2\n\tjump\t@.BB1_29\n.BB1_26:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB1_29:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB1_86\n\tadd\tr0, r0, r6\n.BB1_31:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_31\n.BB1_86:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_22\n.BB1_21:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_22:\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_74:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_82\n\tadd\tr0, r0, r6\n.BB1_76:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_76\n.BB1_82:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_9\n\tjump\t@.BB1_8\n.BB1_39:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_85\n\tadd\tr0, r0, r6\n.BB1_41:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_41\n.BB1_85:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_43\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_43:\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_52:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_84\n\tadd\tr0, r0, r6\n.BB1_54:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_54\n.BB1_84:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_9\n\tjump\t@.BB1_8\n.BB1_64:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_83\n\tadd\tr0, r0, r6\n.BB1_66:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_66\n.BB1_83:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_9\n.BB1_8:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_9:\n\tadd\t@CPI1_2[0], r0, r1\n\tsub.s!\t@CPI1_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell -38733980356924212998632005821026408372590900073093808180983500287173593348156\nCPI0_4:\n\t.cell 100000000000000000000\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 123497912\nCPI0_7:\n\t.cell 4174167879\nCPI0_8:\n\t.cell 3225444902\nCPI0_9:\n\t.cell 16711680\nCPI0_10:\n\t.cell 2535301202817642044428229017600\nCPI0_11:\nCPI1_11:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_12:\n\t.cell 5070602400912917605986812821504\nCPI1_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI1_1:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI1_3:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI1_4:\n\t.cell 57763817484313164028313283939489504447484577087939811246371138302511295758336\nCPI1_5:\n\t.cell 316912650057057350374175801344\nCPI1_6:\n\t.cell 18446744073709551616\nCPI1_7:\n\t.cell 18446744073709551483\nCPI1_8:\n\t.cell 452320874088640556310913026855191233875469781383327711575339763837337846847\nCPI1_9:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI1_10:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI1_12:\n\t.cell 452325785390470367106823071634245203940847196386332112033205481904657957551\nCPI1_13:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI1_14:\n\t.cell -51723044313523656053393963764110524395896352204932251959347227769995480006656\nCPI1_15:\n\t.cell 18446744073709551615\nCPI1_16:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI1_17:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI1_18:\n\t.cell 5387515050969974956360988622848\nCPI1_19:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI1_20:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI1_21:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI1_22:\n\t.cell 2852213850513516153367582212096\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","deployMerkleAirdrop()":"075c6db8","run()":"c0406226"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.9f2a5241\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployMerkleAirdrop\",\"outputs\":[{\"internalType\":\"contract MerkleAirdrop\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract BagelToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[{\"internalType\":\"contract MerkleAirdrop\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract BagelToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployMerkleAirdrop.s.sol\":\"DeployMerkleAirdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x0b7475858d62180b6ccbea2181cf9fa0ed6773fdb8b0f5cbd946d13c5660579f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba7fa71d8d3ace512ee0a3d9d4d5923a6eb01fcbd93219726e40eeb50a8e52f\",\"dweb:/ipfs/QmScHyHRhrWp21Gazmzq1HR1YDjkbpya6SPTHEs5wzjhwg\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployMerkleAirdrop.s.sol\":{\"keccak256\":\"0x53f77d043eb943945ad93937961d59f360b7a4da9845e65385cd5280ab049c59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9556787a401d42536e4bc094d537a8460e2b208b598599640764361dfaa6a59a\",\"dweb:/ipfs/QmY51cadM3RJNtC4iSeUfQ8GMqWpPthh1pHthaZ9qAmJBG\"]},\"src/BagelToken.sol\":{\"keccak256\":\"0x589d6cb7ca5421ff1eec5957f1d0e392b26405f0a50fbe015202d580a3cdb473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eaf9dd3f6a15afa0d5bd9d3f7d315ef4bafac76ff1138954ff4e762b25c933c\",\"dweb:/ipfs/QmdJW9RRHYtdDYwRNWJU3PFwodBBGFCRfRVQ8VM8WDv4jR\"]},\"src/MerkleAirdrop.sol\":{\"keccak256\":\"0x58b45a564922f406e3de50d5dcff09167ebefdd9c951020d7adf5b206ca72ff8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11d327ac00045ffd01e788bf651d256d6e24a0eb26df0f37e1bfe4a50df62318\",\"dweb:/ipfs/QmTH1sWo6SqVoVSjchqj4ScctFbx92WhzevqLpSZzk8nfK\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 49:\"script/DeployMerkleAirdrop.s.sol\"\nobject \"DeployMerkleAirdrop_44802\" {\n    code {\n        {\n            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 3:3166:3170  \"true\" */ 0x0c, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ 0x0c), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ not(16711935)), 65537))\n            sstore(/** @src 49:298:364  \"0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4\" */ 0x0d, 0xaa5d581231e596618465a56aa0f5870ba6e20785fe436d5bfb82b08662ccc7c4)\n            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n            sstore(/** @src 49:393:406  \"4 * 25 * 1e18\" */ 0x0e, 0x056bc75e2d63100000)\n            /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n            let _2 := datasize(\"DeployMerkleAirdrop_44802_deployed\")\n            codecopy(_1, dataoffset(\"DeployMerkleAirdrop_44802_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 49:\"script/DeployMerkleAirdrop.s.sol\"\n    object \"DeployMerkleAirdrop_44802_deployed\" {\n        code {\n            {\n                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x075c6db8 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret, ret_1 := fun_deployMerkleAirdrop()\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_contract_MerkleAirdrop_contract_BagelToken(memPos, ret, ret_1), memPos))\n                    }\n                    case 0xc0406226 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 49:860:881  \"deployMerkleAirdrop()\"\n                        let expr_component_address, expr_component_address_1 := fun_deployMerkleAirdrop()\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        let memPos_1 := mload(64)\n                        return(memPos_1, sub(abi_encode_contract_MerkleAirdrop_contract_BagelToken(memPos_1, expr_component_address, expr_component_address_1), memPos_1))\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ 0xff)\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, iszero(iszero(value)))\n                        return(memPos_2, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_contract_MerkleAirdrop_contract_BagelToken(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function finalize_allocation_1020(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value0, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ sub(shl(160, 1), 1)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 44788 @src 49:411:783  \"function deployMerkleAirdrop() public returns (MerkleAirdrop, BagelToken) {...\"\n            function fun_deployMerkleAirdrop() -> var_address, var__address\n            {\n                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 49:491:510  \"vm.startBroadcast()\"\n                if iszero(extcodesize(/** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                /// @src 49:491:510  \"vm.startBroadcast()\"\n                {\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    revert(0, 0)\n                }\n                let _2 := 64\n                /// @src 49:491:510  \"vm.startBroadcast()\"\n                let _3 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:491:510  \"vm.startBroadcast()\"\n                mstore(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x7fb5297f))\n                /// @src 49:491:510  \"vm.startBroadcast()\"\n                let _4 := 0\n                let _5 := 4\n                let _6 := call(gas(), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _3, _5, _3, _4)\n                if iszero(_6)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 49:491:510  \"vm.startBroadcast()\"\n                if _6\n                {\n                    finalize_allocation_1020(_3)\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    _4 := /** @src 49:491:510  \"vm.startBroadcast()\" */ _4\n                }\n                /// @src 49:535:551  \"new BagelToken()\"\n                let _7 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:535:551  \"new BagelToken()\"\n                let _8 := datasize(\"BagelToken_45776\")\n                let _9 := add(_7, _8)\n                let _10 := 0xffffffffffffffff\n                if or(gt(_9, _10), lt(_9, _7))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                    revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 49:535:551  \"new BagelToken()\"\n                datacopy(_7, dataoffset(\"BagelToken_45776\"), _8)\n                let expr_44742_address := create(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:535:551  \"new BagelToken()\" */ _7, sub(_9, _7))\n                if iszero(expr_44742_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_1 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_1, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                let _11 := sload(/** @src 49:599:611  \"s_merkleRoot\" */ 0x0d)\n                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                let _12 := sub(shl(160, 1), 1)\n                let _13 := and(/** @src 49:620:634  \"address(token)\" */ expr_44742_address, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _12)\n                /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                let _14 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                let _15 := datasize(\"MerkleAirdrop_46003\")\n                let _16 := add(_14, _15)\n                if or(gt(_16, /** @src 49:535:551  \"new BagelToken()\" */ _10), /** @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ lt(_16, _14))\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x41)\n                    revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x24)\n                }\n                /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                datacopy(_14, dataoffset(\"MerkleAirdrop_46003\"), _15)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(_16, _11)\n                let _17 := 32\n                /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_16, _17), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _13)\n                /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                let expr_address := create(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _14, add(sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16, /** @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\" */ _14), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _2))\n                /// @src 49:581:636  \"new MerkleAirdrop(s_merkleRoot, IERC20(address(token)))\"\n                if iszero(expr_address)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_2 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_2, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 49:653:666  \"token.owner()\"\n                let _18 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:653:666  \"token.owner()\"\n                mstore(_18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x8da5cb5b))\n                /// @src 49:653:666  \"token.owner()\"\n                let _19 := staticcall(gas(), _13, _18, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 49:653:666  \"token.owner()\" */ _18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17)\n                /// @src 49:653:666  \"token.owner()\"\n                if iszero(_19)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_3 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_3, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 49:653:666  \"token.owner()\"\n                let expr := _4\n                if _19\n                {\n                    let _20 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17\n                    /// @src 49:653:666  \"token.owner()\"\n                    if gt(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17, /** @src 49:653:666  \"token.owner()\" */ returndatasize()) { _20 := returndatasize() }\n                    finalize_allocation(_18, _20)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    if slt(sub(/** @src 49:653:666  \"token.owner()\" */ add(_18, _20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _18), _17)\n                    {\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let value := mload(_18)\n                    if iszero(eq(value, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _12)))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                    /// @src 49:653:666  \"token.owner()\"\n                    expr := value\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _21 := sload(/** @src 49:668:674  \"AMOUNT\" */ 0x0e)\n                /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                if iszero(extcodesize(_13))\n                {\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                }\n                /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                let _22 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                mstore(_22, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x40c10f19))\n                /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                let _23 := call(gas(), _13, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\" */ _22, sub(abi_encode_address_uint256(add(_22, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5), /** @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\" */ expr, _21), _22), _22, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4)\n                /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                if iszero(_23)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_4 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_4, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 49:642:675  \"token.mint(token.owner(), AMOUNT)\"\n                if _23\n                {\n                    finalize_allocation_1020(_22)\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    if _4\n                    {\n                        revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _24 := sload(/** @src 49:668:674  \"AMOUNT\" */ 0x0e)\n                /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                let _25 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                mstore(_25, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xa9059cbb))\n                /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                let _26 := call(gas(), _13, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ _25, sub(abi_encode_address_uint256(add(_25, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ and(/** @src 49:696:712  \"address(airdrop)\" */ expr_address, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _12), /** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ _24), _25), _25, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17)\n                /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                if iszero(_26)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_5 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_5, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_5, returndatasize())\n                }\n                /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                if _26\n                {\n                    let _27 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17\n                    /// @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\"\n                    if gt(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _17, /** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ returndatasize()) { _27 := returndatasize() }\n                    finalize_allocation(_25, _27)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    if slt(sub(/** @src 49:681:721  \"token.transfer(address(airdrop), AMOUNT)\" */ add(_25, _27), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _25), _17)\n                    {\n                        /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                        revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let value_1 := mload(_25)\n                    if iszero(eq(value_1, /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ iszero(iszero(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value_1))))\n                    {\n                        revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                }\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                if iszero(extcodesize(/** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1))\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                {\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                }\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                let _28 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                mstore(_28, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3b756e9b))\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                let _29 := call(gas(), /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ _1, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 49:727:745  \"vm.stopBroadcast()\" */ _28, /** @src 49:491:510  \"vm.startBroadcast()\" */ _5, /** @src 49:727:745  \"vm.stopBroadcast()\" */ _28, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4)\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                if iszero(_29)\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let pos_6 := /** @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos_6, /** @src 49:491:510  \"vm.startBroadcast()\" */ _4, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                    revert(pos_6, returndatasize())\n                }\n                /// @src 49:727:745  \"vm.stopBroadcast()\"\n                if _29\n                {\n                    finalize_allocation_1020(_28)\n                    /// @src 49:224:888  \"contract DeployMerkleAirdrop is Script {...\"\n                    if _4\n                    {\n                        revert(/** @src 49:491:510  \"vm.startBroadcast()\" */ _4, _4)\n                    }\n                }\n                /// @src 49:756:778  \"return(airdrop, token)\"\n                var_address := expr_address\n                var__address := expr_44742_address\n            }\n        }\n        /// @use-src 30:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 32:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 34:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 35:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 39:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 55:\"src/BagelToken.sol\"\n        object \"BagelToken_45776\" {\n            code {\n                {\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    let memPtr := allocate_memory_array_string()\n                    let _1 := 32\n                    mstore(add(memPtr, _1), \"Bagel\")\n                    let memPtr_1 := allocate_memory_array_string()\n                    mstore(add(memPtr_1, _1), \"BAGEL\")\n                    let newLen := mload(memPtr)\n                    let _2 := sub(shl(64, 1), 1)\n                    if gt(newLen, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 33:1962:1975  \"_name = name_\"\n                    let _3 := 0x03\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _4 := sload(/** @src 33:1962:1975  \"_name = name_\" */ _3)\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _5 := 1\n                    length := shr(_5, _4)\n                    let outOfPlaceEncoding := and(_4, _5)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    let _6 := 31\n                    if gt(length, _6)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1962:1975  \"_name = name_\" */ _3)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let deleteStart := add(data, shr(5, add(newLen, _6)))\n                        if lt(newLen, _1) { deleteStart := data }\n                        let _7 := add(data, shr(5, add(length, _6)))\n                        let start := deleteStart\n                        for { } lt(start, _7) { start := add(start, _5) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    srcOffset := _1\n                    switch gt(newLen, _6)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1962:1975  \"_name = name_\" */ _3)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _1) }\n                        {\n                            sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                            dstPtr := add(dstPtr, _5)\n                            srcOffset := add(srcOffset, _1)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(memPtr, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ add(shl(_5, newLen), _5))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        if newLen\n                        {\n                            value := mload(add(memPtr, srcOffset))\n                        }\n                        sstore(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(value, not(shr(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen), not(0)))), shl(_5, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr_1)\n                    if gt(newLen_1, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ 0x04, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    /// @src 33:1985:2002  \"_symbol = symbol_\"\n                    let _8 := 0x04\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _9 := sload(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    length_1 := shr(_5, _9)\n                    let outOfPlaceEncoding_1 := and(_9, _5)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_1, _6)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _6)))\n                        if lt(newLen_1, _1) { deleteStart_1 := data_1 }\n                        let _10 := add(data_1, shr(5, add(length_1, _6)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _10) { start_1 := add(start_1, _5) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    srcOffset_1 := _1\n                    switch gt(newLen_1, _6)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _1) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _5)\n                            srcOffset_1 := add(srcOffset_1, _1)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ add(shl(_5, newLen_1), _5))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr_1, srcOffset_1))\n                        }\n                        sstore(/** @src 33:1985:2002  \"_symbol = symbol_\" */ _8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(/** @src 33:1962:1975  \"_name = name_\" */ _3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ newLen_1), not(0)))), shl(_5, newLen_1)))\n                    }\n                    /// @src 30:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 30:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 55:284:294  \"msg.sender\" */ caller())\n                    /// @src 30:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        let _11 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                        /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_11, shl(224, 0x1e4fbdf7))\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_11, /** @src 33:1985:2002  \"_symbol = symbol_\" */ _8), /** @src -1:-1:-1 */ 0)\n                        /// @src 30:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_11, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                    }\n                    let _12 := sload(5)\n                    sstore(5, or(and(_12, not(sub(shl(160, 1), 1))), /** @src 55:284:294  \"msg.sender\" */ caller()))\n                    /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _13 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                    /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_12, sub(shl(160, 1), 1)), /** @src 55:284:294  \"msg.sender\" */ caller())\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    let _14 := datasize(\"BagelToken_45776_deployed\")\n                    codecopy(_13, dataoffset(\"BagelToken_45776_deployed\"), _14)\n                    return(_13, _14)\n                }\n                function allocate_memory_array_string() -> memPtr\n                {\n                    let memPtr_1 := mload(64)\n                    let newFreePtr := add(memPtr_1, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                    }\n                    mstore(64, newFreePtr)\n                    memPtr := memPtr_1\n                    mstore(memPtr_1, 5)\n                }\n            }\n            /// @use-src 30:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 39:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 55:\"src/BagelToken.sol\"\n            object \"BagelToken_45776_deployed\" {\n                code {\n                    {\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 33:2151:2156  \"_name\" */ 0x03)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(_5, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, _5)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 33:2151:2156  \"_name\" */ 0x03)\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let _7 := calldataload(36)\n                                /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                if /** @src 33:10061:10080  \"owner == address(0)\" */ iszero(/** @src 39:735:745  \"msg.sender\" */ caller())\n                                /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    let _8 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_8, shl(224, 0xe602df05))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_8, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _9 := and(/** @src 33:10159:10180  \"spender == address(0)\" */ value0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                if /** @src 33:10159:10180  \"spender == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _9)\n                                /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    let _10 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_10, shl(225, 0x4a1406b1))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_10, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(0x20, /** @src 33:9105:9109  \"true\" */ 0x01)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _11 := keccak256(_4, _2)\n                                mstore(_4, _9)\n                                mstore(0x20, _11)\n                                sstore(keccak256(_4, _2), _7)\n                                /// @src 33:10333:10364  \"Approval(owner, spender, value)\"\n                                let _12 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_12, _7)\n                                /// @src 33:10333:10364  \"Approval(owner, spender, value)\"\n                                log3(_12, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 33:9105:9109  \"true\" */ 0x01)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(memPos, 0x20)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _13 := sload(/** @src 33:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _13)\n                                return(memPos_1, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                let value1 := abi_decode_address_4059()\n                                let value := calldataload(68)\n                                let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                mstore(_4, _14)\n                                mstore(32, 1)\n                                let _15 := keccak256(_4, _2)\n                                mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                mstore(32, _15)\n                                let _16 := sload(keccak256(_4, _2))\n                                /// @src 33:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 33:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 33:10848:10865  \"type(uint256).max\" */ not(0)))\n                                /// @src 33:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 33:10881:11011  \"if (currentAllowance < value) {...\"\n                                    if /** @src 33:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                    /// @src 33:10881:11011  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _17 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_17, shl(225, 0x7dc7a0d9))\n                                        revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), /** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                    }\n                                    /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                    if /** @src 33:10061:10080  \"owner == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _14)\n                                    /// @src 33:10057:10146  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        let _18 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_18, shl(224, 0xe602df05))\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        mstore(/** @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                        /// @src 33:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_18, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                    if /** @src 33:10159:10180  \"spender == address(0)\" */ iszero(/** @src 39:735:745  \"msg.sender\" */ caller())\n                                    /// @src 33:10155:10245  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        let _19 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                        /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_19, shl(225, 0x4a1406b1))\n                                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                        mstore(/** @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                        /// @src 33:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_19, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                    }\n                                    mstore(_4, _14)\n                                    mstore(32, 1)\n                                    let _20 := keccak256(_4, _2)\n                                    mstore(_4, /** @src 39:735:745  \"msg.sender\" */ caller())\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(32, _20)\n                                    sstore(keccak256(_4, _2), sub(/** @src 33:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                }\n                                /// @src 33:5249:5254  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 33:3075:3077  \"18\" */ 0x12)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address()\n                                let value_1 := calldataload(36)\n                                /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _21 := and(/** @src 33:7791:7812  \"account == address(0)\" */ value0_2, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 33:7787:7878  \"if (account == address(0)) {...\"\n                                if /** @src 33:7791:7812  \"account == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _21)\n                                /// @src 33:7787:7878  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    let _22 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_22, shl(224, 0xec442f05))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_22, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _23 := sload(/** @src 33:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let sum := add(_23, value_1)\n                                if gt(_23, sum)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, 36)\n                                }\n                                sstore(/** @src 33:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sum)\n                                mstore(_4, _21)\n                                mstore(0x20, _4)\n                                let dataSlot := keccak256(_4, _2)\n                                sstore(dataSlot, add(sload(/** @src 33:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ value_1))\n                                /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                let _24 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                mstore(_24, value_1)\n                                /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_24, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, _4)\n                                let _25 := sload(keccak256(_4, _2))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _25)\n                                return(memPos_4, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _26 := sload(/** @src 30:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                sstore(/** @src 30:3004:3010  \"_owner\" */ 0x05, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_26, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, _4, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_26, sub(shl(160, 1), 1)), _4)\n                                return(_4, _4)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_2 := and(sload(/** @src 30:1710:1716  \"_owner\" */ 0x05), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, value_2)\n                                return(memPos_5, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr := mload(_2)\n                                let ret_1 := _4\n                                let slotValue_1 := sload(_3)\n                                let length_1 := _4\n                                let _27 := 1\n                                length_1 := shr(_27, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, _27)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _28 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _28))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(memPtr, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr, _28), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _28)\n                                }\n                                case 1 {\n                                    mstore(_4, _3)\n                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                    let i_1 := _4\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _28) }\n                                    {\n                                        mstore(add(add(memPtr, i_1), _28), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _27)\n                                    }\n                                    ret_1 := add(add(memPtr, i_1), _28)\n                                }\n                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr_1)\n                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address()\n                                /// @src 33:3754:3759  \"value\"\n                                fun_transfer(/** @src 39:735:745  \"msg.sender\" */ caller(), /** @src 33:3754:3759  \"value\" */ value0_3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ calldataload(36))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, 1)\n                                return(memPos_6, 32)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address()\n                                let value1_1 := abi_decode_address_4059()\n                                let _29 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_4, _29))\n                                mstore(32, /** @src 33:3952:3963  \"_allowances\" */ 0x01)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _30 := keccak256(_4, _2)\n                                mstore(_4, and(value1_1, _29))\n                                mstore(32, _30)\n                                let _31 := sload(keccak256(_4, _2))\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _31)\n                                return(memPos_7, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address()\n                                /// @src 30:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                let _32 := sub(shl(160, 1), 1)\n                                let _33 := and(/** @src 30:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _32)\n                                /// @src 30:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 30:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _33)\n                                /// @src 30:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    let _34 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(_2)\n                                    /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(_34, shl(224, 0x1e4fbdf7))\n                                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                    mstore(/** @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_34, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _3), _4)\n                                    /// @src 30:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(_34, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                                }\n                                let _35 := sload(/** @src 30:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                sstore(/** @src 30:3004:3010  \"_owner\" */ 0x05, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ or(and(_35, shl(160, 0xffffffffffffffffffffffff)), _33))\n                                /// @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4, _4, /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ and(_35, _32), /** @src 30:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _33)\n                                /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                                return(_4, _4)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, _1)\n                        let length := mload(value0)\n                        mstore(add(headStart, _1), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_4059() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    /// @ast-id 40321 @src 30:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let value := and(sload(/** @src 30:1710:1716  \"_owner\" */ 0x05), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 30:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 30:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ value, /** @src 39:735:745  \"msg.sender\" */ caller()))\n                        /// @src 30:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(/** @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 39:735:745  \"msg.sender\" */ caller())\n                            /// @src 30:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 40791 @src 33:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 33:5739:5757  \"from == address(0)\" */ var_from, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        /// @src 33:5735:5821  \"if (from == address(0)) {...\"\n                        if /** @src 33:5739:5757  \"from == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                        /// @src 33:5735:5821  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, shl(225, 0x4b637e8f))\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(/** @src 33:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 33:5755:5756  \"0\" */ 0x00)\n                            /// @src 33:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 33:5834:5850  \"to == address(0)\" */ var_to, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _1)\n                        /// @src 33:5830:5916  \"if (to == address(0)) {...\"\n                        if /** @src 33:5834:5850  \"to == address(0)\" */ iszero(/** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4)\n                        /// @src 33:5830:5916  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(64)\n                            /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 33:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                            mstore(/** @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 33:5755:5756  \"0\" */ 0x00)\n                            /// @src 33:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 36)\n                        }\n                        /// @src 33:6356:6896  \"if (from == address(0)) {...\"\n                        let _6 := 0\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        let _7 := sload(keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40))\n                        /// @src 33:6599:6714  \"if (fromBalance < value) {...\"\n                        if /** @src 33:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                        /// @src 33:6599:6714  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 33:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _8 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(0x40)\n                            /// @src 33:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_8, shl(226, 0x391434e3))\n                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                        }\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _2)\n                        mstore(0x20, /** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        sstore(keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40), sub(/** @src 33:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                        /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                        mstore(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 33:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 33:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ var_value))\n                        /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                        let _9 := /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ mload(0x40)\n                        mstore(_9, var_value)\n                        /// @src 33:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_9, /** @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\" */ 0x20, /** @src 33:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                    /// @src 55:196:393  \"contract BagelToken is ERC20, Ownable {...\"\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000814000a\"\n            }\n        }\n        /// @use-src 31:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 41:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 56:\"src/MerkleAirdrop.sol\"\n        object \"MerkleAirdrop_46003\" {\n            code {\n                {\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let _1 := memoryguard(0x01a0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"MerkleAirdrop_46003\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    let _2 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    let _3 := 64\n                    mstore(_3, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), _3)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let value := mload(_1)\n                    let value_1 := mload(add(_1, 32))\n                    if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let memPtr := mload(_3)\n                    finalize_allocation(memPtr)\n                    mstore(memPtr, 13)\n                    let _4 := add(memPtr, 32)\n                    mstore(_4, \"MerkleAirdrop\")\n                    let memPtr_1 := mload(_3)\n                    finalize_allocation(memPtr_1)\n                    mstore(memPtr_1, 1)\n                    let _5 := add(memPtr_1, 32)\n                    mstore(_5, \"1\")\n                    /// @src 44:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                    let _6 := fun_toShortStringWithFallback(memPtr)\n                    /// @src 44:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    let _7 := 288\n                    mstore(_7, /** @src 44:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _6)\n                    /// @src 44:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                    let _8 := fun_toShortStringWithFallback_2443(memPtr_1)\n                    /// @src 44:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    let _9 := 320\n                    mstore(_9, /** @src 44:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _8)\n                    /// @src 44:3542:3564  \"keccak256(bytes(name))\"\n                    let _10 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, mload(/** @src 44:3542:3564  \"keccak256(bytes(name))\" */ memPtr))\n                    /// @src 44:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 44:3542:3564  \"keccak256(bytes(name))\" */ _10)\n                    /// @src 44:3591:3616  \"keccak256(bytes(version))\"\n                    let _11 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5, mload(/** @src 44:3591:3616  \"keccak256(bytes(version))\" */ memPtr_1))\n                    /// @src 44:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                    let _12 := 256\n                    mstore(_12, /** @src 44:3591:3616  \"keccak256(bytes(version))\" */ _11)\n                    /// @src 44:3627:3657  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 44:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_3)\n                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _13 := add(expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 32)\n                    /// @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_13, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3), /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _10)\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _11)\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 44:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 44:4278:4282  \"this\" */ address())\n                    /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let newFreePtr_1 := add(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_mpos))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(_3, newFreePtr_1)\n                    /// @src 44:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _13, mload(/** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 44:3725:3752  \"_cachedThis = address(this)\"\n                    mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 44:4278:4282  \"this\" */ address())\n                    /// @src 56:1113:1139  \"i_merkleRoot = _merkleRoot\"\n                    let _14 := 352\n                    mstore(_14, value)\n                    /// @src 56:1149:1179  \"i_airdropToken = _airdropToken\"\n                    let _15 := 384\n                    mstore(_15, value_1)\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    let _16 := datasize(\"MerkleAirdrop_46003_deployed\")\n                    codecopy(newFreePtr_1, dataoffset(\"MerkleAirdrop_46003_deployed\"), _16)\n                    setimmutable(newFreePtr_1, \"42725\", mload(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42727\", mload(/** @src 44:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42729\", mload(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42731\", mload(/** @src 44:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42733\", mload(/** @src 44:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _12))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42736\", mload(/** @src 44:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _7))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"42739\", mload(/** @src 44:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _9))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"45804\", mload(/** @src 56:1113:1139  \"i_merkleRoot = _merkleRoot\" */ _14))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    setimmutable(newFreePtr_1, \"45807\", mload(/** @src 56:1149:1179  \"i_airdropToken = _airdropToken\" */ _15))\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    return(newFreePtr_1, _16)\n                }\n                function finalize_allocation(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                /// @ast-id 41932 @src 40:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var\n                {\n                    /// @src 40:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 40:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 40:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 40:3059:3061  \"32\" */ _1)\n                    case /** @src 40:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ 0x00, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src 44:3432:3445  \"_nameFallback\" */ 0x00, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                        }\n                        /// @src 44:3432:3445  \"_nameFallback\"\n                        let _2 := 0x00\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _3 := sload(/** @src 44:3432:3445  \"_nameFallback\" */ _2)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let length := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _4 := 1\n                        length := shr(_4, _3)\n                        let outOfPlaceEncoding := and(_3, _4)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, _2)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let data := keccak256(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let _5 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _5) { start := add(start, _4) }\n                            {\n                                sstore(start, /** @src 44:3432:3445  \"_nameFallback\" */ _2)\n                            }\n                        }\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let srcOffset := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        srcOffset := /** @src 40:3059:3061  \"32\" */ _1\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, _2)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let dstPtr := keccak256(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let i := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _4)\n                                srcOffset := add(srcOffset, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(shl(_4, expr), _4))\n                        }\n                        default {\n                            let value := /** @src 44:3432:3445  \"_nameFallback\" */ _2\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 44:3432:3445  \"_nameFallback\" */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                        }\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 40:1840:1856  \"bstr.length > 31\" */ gt(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 40:1854:1856  \"31\" */ 0x1f)\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            let _6 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            mstore(_6, shl(224, 0x305a27a9))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 40:1879:1897  \"StringTooLong(str)\" */ add(_6, 4), /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36), length_1)\n                            let i_1 := /** @src 44:3432:3445  \"_nameFallback\" */ 0x00\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 40:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_1), 68), /** @src 44:3432:3445  \"_nameFallback\" */ 0x00)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            revert(_6, add(sub(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(add(length_1, /** @src 40:1854:1856  \"31\" */ 0x1f), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(31))), /** @src 40:1879:1897  \"StringTooLong(str)\" */ _6), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 68))\n                        }\n                        /// @src 40:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 44:3432:3445  \"_nameFallback\" */ 0x00\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := mload(add(var_value_mpos, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if lt(length_2, /** @src 40:3059:3061  \"32\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 40:3059:3061  \"32\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 40:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 41932 @src 40:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_2443(var_value_mpos) -> var\n                {\n                    /// @src 40:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 40:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 40:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 40:3059:3061  \"32\" */ _1)\n                    case /** @src 40:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _2 := 1\n                        let _3 := sload(_2)\n                        let length := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        length := shr(_2, _3)\n                        let outOfPlaceEncoding := and(_3, _2)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _2)\n                            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _2) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let srcOffset := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        srcOffset := /** @src 40:3059:3061  \"32\" */ _1\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _2)\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _2)\n                                srcOffset := add(srcOffset, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(_2, add(shl(_2, expr), _2))\n                        }\n                        default {\n                            let value := /** @src -1:-1:-1 */ 0\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_2, expr)))\n                        }\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 40:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 40:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 40:1840:1856  \"bstr.length > 31\" */ gt(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 40:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 40:1854:1856  \"31\" */ 0x1f)\n                        /// @src 40:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 40:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 40:3059:3061  \"32\" */ _1)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36), length_1)\n                            let i_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 40:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            {\n                                mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 40:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(add(add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                            /// @src 40:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(/** @src 40:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(add(length_1, /** @src 40:1854:1856  \"31\" */ 0x1f), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(31))), /** @src 40:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 68))\n                        }\n                        /// @src 40:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := mload(add(var_value_mpos, /** @src 40:3059:3061  \"32\" */ _1))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if lt(length_2, /** @src 40:3059:3061  \"32\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 40:3059:3061  \"32\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 40:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ length_2)\n                        /// @src 40:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 37:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 38:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 40:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 43:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 44:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 45:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 46:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 56:\"src/MerkleAirdrop.sol\"\n            object \"MerkleAirdrop_46003_deployed\" {\n                code {\n                    {\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x4497a169 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 192) { revert(_4, _4) }\n                                let value0 := abi_decode_address()\n                                let _5 := 36\n                                let value := calldataload(_5)\n                                let offset := calldataload(68)\n                                let _6 := 0xffffffffffffffff\n                                if gt(offset, _6) { revert(_4, _4) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                let length := calldataload(add(_3, offset))\n                                if gt(length, _6) { revert(_4, _4) }\n                                let _7 := 5\n                                let _8 := shl(_7, length)\n                                let _9 := add(add(offset, _8), _5)\n                                if gt(_9, calldatasize()) { revert(_4, _4) }\n                                let value_1 := calldataload(100)\n                                if iszero(eq(value_1, and(value_1, 0xff))) { revert(_4, _4) }\n                                let _10 := sub(shl(160, 1), 1)\n                                let _11 := and(value0, _10)\n                                mstore(_4, _11)\n                                let _12 := 32\n                                mstore(_12, /** @src 56:1329:1341  \"s_hasClaimed\" */ 0x03)\n                                /// @src 56:1325:1391  \"if (s_hasClaimed[_account]) revert MerkleAirdrop__AlreadyClaimed()\"\n                                if /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                                /// @src 56:1325:1391  \"if (s_hasClaimed[_account]) revert MerkleAirdrop__AlreadyClaimed()\"\n                                {\n                                    /// @src 56:1360:1391  \"MerkleAirdrop__AlreadyClaimed()\"\n                                    mstore(_1, shl(224, 0x1ac2170b))\n                                    revert(_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                }\n                                /// @src 56:2465:2498  \"ECDSA.tryRecover(digest, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 56:1434:1467  \"getMessageHash(_account, _amount)\" */ fun_getMessageHash(value0, value), /** @src 56:2465:2498  \"ECDSA.tryRecover(digest, v, r, s)\" */ value_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ calldataload(132), calldataload(164))\n                                /// @src 56:1401:1519  \"if (!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)) revert MerkleAirdrop__InvalidSignature()\"\n                                if /** @src 56:1405:1477  \"!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)\" */ iszero(/** @src 56:2515:2538  \"actualSigner == account\" */ eq(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:2515:2538  \"actualSigner == account\" */ expr_component, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _10), _11))\n                                /// @src 56:1401:1519  \"if (!_isValidSignature(_account, getMessageHash(_account, _amount), v, r, s)) revert MerkleAirdrop__InvalidSignature()\"\n                                {\n                                    /// @src 56:1486:1519  \"MerkleAirdrop__InvalidSignature()\"\n                                    let _13 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                    /// @src 56:1486:1519  \"MerkleAirdrop__InvalidSignature()\"\n                                    mstore(_13, shl(224, 0xab8b8565))\n                                    revert(_13, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                }\n                                /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                let _14 := add(expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12)\n                                /// @src 56:1577:1606  \"abi.encode(_account, _amount)\"\n                                let _15 := sub(abi_encode_address_uint256(_14, value0, value), expr_mpos)\n                                let _16 := not(31)\n                                mstore(expr_mpos, add(_15, _16))\n                                finalize_allocation(expr_mpos, _15)\n                                /// @src 56:1567:1607  \"keccak256(abi.encode(_account, _amount))\"\n                                let _17 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _14, mload(/** @src 56:1567:1607  \"keccak256(abi.encode(_account, _amount))\" */ expr_mpos))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let outPtr := mload(_2)\n                                let _18 := add(outPtr, _12)\n                                mstore(_18, _17)\n                                mstore(outPtr, _12)\n                                finalize_allocation_9850(outPtr)\n                                /// @src 56:1544:1609  \"keccak256(bytes.concat(keccak256(abi.encode(_account, _amount))))\"\n                                let _19 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _18, mload(/** @src 56:1544:1609  \"keccak256(bytes.concat(keccak256(abi.encode(_account, _amount))))\" */ outPtr))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let memPtr := mload(_2)\n                                finalize_allocation(memPtr, add(_8, _12))\n                                let dst := memPtr\n                                mstore(memPtr, length)\n                                dst := add(memPtr, _12)\n                                let src := add(offset, _5)\n                                for { } lt(src, _9) { src := add(src, _12) }\n                                {\n                                    mstore(dst, calldataload(src))\n                                    dst := add(dst, _12)\n                                }\n                                /// @src 45:2069:2096  \"bytes32 computedHash = leaf\"\n                                let var_computedHash := _19\n                                /// @src 45:2111:2124  \"uint256 i = 0\"\n                                let var_i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                /// @src 45:2106:2222  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                                for { }\n                                /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 1\n                                /// @src 45:2111:2124  \"uint256 i = 0\"\n                                {\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if eq(var_i, not(0))\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x11)\n                                        revert(_4, _5)\n                                    }\n                                    /// @src 45:2144:2147  \"i++\"\n                                    var_i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(var_i, 1)\n                                }\n                                /// @src 45:2144:2147  \"i++\"\n                                {\n                                    /// @src 45:2126:2142  \"i < proof.length\"\n                                    if iszero(lt(var_i, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 45:2130:2142  \"proof.length\" */ memPtr)))\n                                    /// @src 45:2126:2142  \"i < proof.length\"\n                                    { break }\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    let _20 := mload(add(add(memPtr, shl(_7, var_i)), _12))\n                                    /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                    let expr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                    /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                    switch /** @src 45:9318:9323  \"a < b\" */ lt(var_computedHash, _20)\n                                    case /** @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                                        /// @src 45:9632:9751  \"assembly {...\"\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 45:9632:9751  \"assembly {...\" */ _20)\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12, /** @src 45:9632:9751  \"assembly {...\" */ var_computedHash)\n                                        /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                        expr := /** @src 45:9632:9751  \"assembly {...\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _2)\n                                    }\n                                    default /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                    {\n                                        /// @src 45:9632:9751  \"assembly {...\"\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 45:9632:9751  \"assembly {...\" */ var_computedHash)\n                                        mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12, /** @src 45:9632:9751  \"assembly {...\" */ _20)\n                                        /// @src 45:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                        expr := /** @src 45:9632:9751  \"assembly {...\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _2)\n                                    }\n                                    /// @src 45:2163:2211  \"computedHash = _hashPair(computedHash, proof[i])\"\n                                    var_computedHash := expr\n                                }\n                                /// @src 56:1619:1714  \"if (!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)) revert MerkleAirdrop__InvalidProof()\"\n                                if /** @src 56:1623:1676  \"!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)\" */ iszero(/** @src 45:1379:1412  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, /** @src 56:1657:1669  \"i_merkleRoot\" */ loadimmutable(\"45804\")))\n                                /// @src 56:1619:1714  \"if (!MerkleProof.verify(_merkleProof, i_merkleRoot, leaf)) revert MerkleAirdrop__InvalidProof()\"\n                                {\n                                    /// @src 56:1685:1714  \"MerkleAirdrop__InvalidProof()\"\n                                    let _21 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                    /// @src 56:1685:1714  \"MerkleAirdrop__InvalidProof()\"\n                                    mstore(_21, shl(226, 0x30f109b7))\n                                    revert(_21, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3)\n                                }\n                                mstore(_4, _11)\n                                mstore(_12, /** @src 56:1329:1341  \"s_hasClaimed\" */ 0x03)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let dataSlot := keccak256(_4, _2)\n                                sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                                /// @src 56:1777:1801  \"Claim(_account, _amount)\"\n                                let _22 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                /// @src 56:1777:1801  \"Claim(_account, _amount)\"\n                                log1(_22, sub(abi_encode_address_uint256(_22, value0, value), _22), 0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4)\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_mpos_1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _23 := add(expr_mpos_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12)\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                mstore(_23, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _24 := sub(abi_encode_address_uint256(add(expr_mpos_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5), /** @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ value0, value), expr_mpos_1)\n                                mstore(expr_mpos_1, add(_24, /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ _16))\n                                /// @src 37:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                finalize_allocation(expr_mpos_1, _24)\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let _25 := and(/** @src 56:1811:1825  \"i_airdropToken\" */ loadimmutable(\"45807\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _10)\n                                /// @src 38:3462:3493  \"target.call{value: value}(data)\"\n                                let expr_component_3 := call(gas(), _25, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, /** @src 38:3462:3493  \"target.call{value: value}(data)\" */ _23, mload(expr_mpos_1), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4, _4)\n                                /// @src 38:3462:3493  \"target.call{value: value}(data)\"\n                                let data := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _4\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _26 := returndatasize()\n                                    if gt(_26, _6)\n                                    {\n                                        mstore(_4, shl(224, 0x4e487b71))\n                                        mstore(_3, 0x41)\n                                        revert(_4, _5)\n                                    }\n                                    let memPtr_1 := mload(_2)\n                                    finalize_allocation(memPtr_1, add(and(add(_26, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ _16), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12))\n                                    mstore(memPtr_1, _26)\n                                    data := memPtr_1\n                                    returndatacopy(add(memPtr_1, _12), _4, returndatasize())\n                                }\n                                /// @src 38:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                let var_mpos := /** @src 38:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_25, expr_component_3, /** @src 38:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                /// @src 37:4551:4568  \"returndata.length\"\n                                let expr_1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 37:4551:4568  \"returndata.length\" */ var_mpos)\n                                /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                let expr_2 := /** @src 37:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr_1))\n                                /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                if expr_2\n                                {\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    if slt(sub(/** @src 37:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr_1), var_mpos), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12) { revert(_4, _4) }\n                                    let value_2 := mload(/** @src 37:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _12))\n                                    let _27 := iszero(value_2)\n                                    if iszero(eq(value_2, iszero(_27))) { revert(_4, _4) }\n                                    /// @src 37:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                    expr_2 := _27\n                                }\n                                /// @src 37:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                if expr_2\n                                {\n                                    /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    let _28 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(_2)\n                                    /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_28, shl(224, 0x5274afe7))\n                                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                    mstore(/** @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_28, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3), _25)\n                                    /// @src 37:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_28, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5)\n                                }\n                                return(_4, _4)\n                            }\n                            case 0x49590657 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 56:2179:2191  \"i_merkleRoot\" */ loadimmutable(\"45804\"))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                return(memPos, 32)\n                            }\n                            case 0x512c91df {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address()\n                                let ret := fun_getMessageHash(value0_1, calldataload(36))\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, ret)\n                                return(memPos_1, 32)\n                            }\n                            case 0x548efba2 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, and(/** @src 56:2279:2293  \"i_airdropToken\" */ loadimmutable(\"45807\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos_2, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 44:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos_1 := /** @src 44:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 44:6099:6104  \"_name\" */ loadimmutable(\"42736\"))\n                                /// @src 44:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_2 := /** @src 44:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_6373(/** @src 44:6554:6562  \"_version\" */ loadimmutable(\"42739\"))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                let memPtr_2 := mload(_2)\n                                let _29 := 0x20\n                                let newFreePtr := add(memPtr_2, _29)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_2))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                mstore(memPtr_2, _4)\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, shl(248, 15))\n                                mstore(add(memPos_3, _29), 224)\n                                let tail := abi_encode_string(var_mpos_1, add(memPos_3, 224))\n                                mstore(add(memPos_3, _2), sub(tail, memPos_3))\n                                let tail_1 := abi_encode_string(var_mpos_2, tail)\n                                mstore(add(memPos_3, 96), /** @src 44:5590:5603  \"block.chainid\" */ chainid())\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(add(memPos_3, 128), /** @src 44:5625:5629  \"this\" */ address())\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(add(memPos_3, 160), _4)\n                                mstore(add(memPos_3, 192), sub(tail_1, memPos_3))\n                                let pos := tail_1\n                                let length_1 := mload(memPtr_2)\n                                mstore(tail_1, length_1)\n                                pos := add(tail_1, _29)\n                                let srcPtr := newFreePtr\n                                let i := _4\n                                for { }\n                                lt(i, length_1)\n                                {\n                                    i := add(i, /** @src 44:6584:6600  \"_versionFallback\" */ 0x01)\n                                }\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, _29)\n                                    srcPtr := add(srcPtr, _29)\n                                }\n                                return(memPos_3, sub(pos, memPos_3))\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            let _1 := 0x20\n                            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                        }\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        end := add(add(pos, and(add(length, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ not(31))), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0x20)\n                    }\n                    function finalize_allocation_9850(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 56:1577:1606  \"abi.encode(_account, _amount)\" */ not(31)))\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 41959 @src 40:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var_mpos\n                    {\n                        /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 40:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let _1 := 1\n                            length := shr(_1, slotValue)\n                            let outOfPlaceEncoding := and(slotValue, _1)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret, shl(224, 0x4e487b71))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ ret, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(memPtr, length)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(255)))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0, 0)\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                                let i := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 0\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, _1)\n                                }\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 40:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 40:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 40:2706:2717  \"result > 31\" */ gt(expr, /** @src 40:2715:2717  \"31\" */ 0x1f)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9850(memPtr_1)\n                            /// @src 40:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr_1, /** @src 40:2311:2313  \"32\" */ 0x20), /** @src 40:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 40:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 41959 @src 40:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_6373(var_value) -> var_mpos\n                    {\n                        /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 40:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 44:6584:6600  \"_versionFallback\"\n                            let _1 := 0x01\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := /** @src -1:-1:-1 */ ret\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            length := shr(/** @src 44:6584:6600  \"_versionFallback\" */ _1, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ slotValue)\n                            let outOfPlaceEncoding := and(slotValue, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            let _2 := 32\n                            if eq(outOfPlaceEncoding, lt(length, _2))\n                            {\n                                mstore(/** @src -1:-1:-1 */ ret, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ shl(224, 0x4e487b71))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                mstore(4, 0x22)\n                                revert(/** @src -1:-1:-1 */ ret, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0x24)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(memPtr, length)\n                            /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            switch outOfPlaceEncoding\n                            case 0 {\n                                mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ _2), and(slotValue, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ not(255)))\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), _2)\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { } lt(i, length) { i := add(i, _2) }\n                                {\n                                    mstore(add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2), sload(dataPos))\n                                    dataPos := add(dataPos, /** @src 44:6584:6600  \"_versionFallback\" */ _1)\n                                }\n                                /// @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                ret := add(add(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ memPtr, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), _2)\n                            }\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 40:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 40:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 40:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 40:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 40:2706:2717  \"result > 31\" */ gt(expr, /** @src 40:2715:2717  \"31\" */ 0x1f)\n                            /// @src 40:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 40:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_9850(memPtr_1)\n                            /// @src 40:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ add(memPtr_1, /** @src 40:2311:2313  \"32\" */ 0x20), /** @src 40:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 40:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    /// @ast-id 41703 @src 38:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 38:4793:5201  \"if (!success) {...\"\n                        switch /** @src 38:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 38:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 38:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 38:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 38:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 38:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 38:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 38:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 38:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                                mstore(/** @src 38:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 38:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 36)\n                            }\n                            /// @src 38:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 38:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 38:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 38:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 38:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 38:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 38:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                                /// @src 38:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 38:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 38:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @ast-id 45955 @src 56:1870:2099  \"function getMessageHash(address _account, uint256 _amount) public view returns (bytes32 digest) {...\"\n                    function fun_getMessageHash(var_account, var_amount) -> var_digest\n                    {\n                        /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                        let _1 := 64\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let memPtr := mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let newFreePtr := add(memPtr, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let _2 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ newFreePtr)\n                        let _3 := sub(shl(160, 1), 1)\n                        /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                        mstore(memPtr, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ var_account, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3))\n                        /// @src 56:2039:2089  \"AirdropClaim({account: _account, amount: _amount})\"\n                        let _4 := add(memPtr, 32)\n                        /// @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\"\n                        mstore(_4, var_amount)\n                        /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                        let expr_45950_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                        let _5 := add(expr_45950_mpos, /** @src 56:2039:2089  \"AirdropClaim({account: _account, amount: _amount})\" */ 32)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        mstore(_5, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 0x09802f0ca4ee1104f0a37279d766e5ec79c8f84a93b8691fb36c54ded00e070c)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ add(/** @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\" */ expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ mload(memPtr), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _3))\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ add(/** @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\" */ expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 96), mload(_4))\n                        /// @src 56:2010:2090  \"abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))\"\n                        mstore(expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 96)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        let newFreePtr_1 := add(expr_45950_mpos, /** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ 128)\n                        /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                        if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, expr_45950_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ newFreePtr_1)\n                        /// @src 56:2000:2091  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount})))\"\n                        let _6 := keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _5, mload(/** @src 56:2000:2091  \"keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount})))\" */ expr_45950_mpos))\n                        /// @src 44:5053:5073  \"_domainSeparatorV4()\"\n                        let _7 := fun_domainSeparatorV4()\n                        /// @src 46:3515:3748  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 56:821:879  \"keccak256(\\\"AirdropClaim(address account, uint256 amount)\\\")\" */ _1)\n                        /// @src 46:3515:3748  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _7)\n                        mstore(add(usr$ptr, 0x22), _6)\n                        /// @src 56:1976:2092  \"return _hashTypedDataV4(keccak256(abi.encode(MESSAGE_TYPEHASH, AirdropClaim({account: _account, amount: _amount}))))\"\n                        var_digest := /** @src 46:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42)\n                    }\n                    /// @ast-id 42827 @src 44:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 44:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 44:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 44:3929:3933  \"this\" */ address(), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 44:3938:3949  \"_cachedThis\" */ loadimmutable(\"42729\"), /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 44:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 44:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 44:3953:3966  \"block.chainid\" */ chainid(), /** @src 44:3970:3984  \"_cachedChainId\" */ loadimmutable(\"42727\"))\n                        }\n                        /// @src 44:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(_1, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 64), /** @src 44:4226:4237  \"_hashedName\" */ loadimmutable(\"42731\"))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 44:4239:4253  \"_hashedVersion\" */ loadimmutable(\"42733\"))\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 44:4255:4268  \"block.chainid\" */ chainid())\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            mstore(/** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 44:3929:3933  \"this\" */ address())\n                            /// @src 44:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let newFreePtr := add(expr_mpos, /** @src 44:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 44:4060:4090  \"return _buildDomainSeparator()\"\n                            var := /** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ _1, mload(/** @src 44:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 44:4060:4090  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 44:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 44:4000:4029  \"return _cachedDomainSeparator\"\n                            var := /** @src 44:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"42725\")\n                            /// @src 44:4000:4029  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 42618 @src 43:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 43:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 43:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 43:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 43:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 43:6297:6298  \"0\" */ 0x00\n                            /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 43:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 43:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ 32))\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 43:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _3 := mload(/** @src -1:-1:-1 */ _2)\n                        /// @src 43:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 43:6495:6515  \"signer == address(0)\" */ iszero(/** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ and(/** @src 43:6495:6515  \"signer == address(0)\" */ _3, /** @src 56:392:2547  \"contract MerkleAirdrop is EIP712 {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 43:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 43:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                            /// @src 43:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 43:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _3\n                        var_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 43:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ _2\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000814000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000814000a\"\n    }\n}\n","hash":"010000c9687ab5da3c77e861b084bf516b02092d49c4ebc4ff7641eb248cb43c","factoryDependencies":{"01000129aebadf99b2559e94c1229c365f0583d796da5a75140c314a3707c43f":"src/BagelToken.sol:BagelToken","010001dfda5447b5db0ea98d3c0a19c887f27544706b53f93591301fb4cc82af":"src/MerkleAirdrop.sol:MerkleAirdrop"},"id":49}